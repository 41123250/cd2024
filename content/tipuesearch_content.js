var tipuesearch = {"pages": [{'title': 'First', 'text': '', 'tags': '', 'url': 'First.html'}, {'title': 'About', 'text': '網頁:  https://41123250.github.io/cd2024/content/index.html \n 網誌:  https://41123250.github.io/cd2024/blog/index.html \n 簡報:  https://41123250.github.io/cd2024/reveal/index.html \n 倉儲:  https://github.com/41123250/cd2024 \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'cmsimde', 'text': "SMap  - SiteMap - 依照階次列出網站的所有頁面. \n EditA  - Edit All page - 將所有頁面放入編輯模式中, 主要用來處理頁面搬遷, 刪除或決定衝突頁面內容版本. \n Edit  - Edit page - 先選擇要編輯的單一頁面後, 再點選 Edit, 即可進入單一頁面的編輯模式. \n Config  - Configure Site - 編輯頁面標題與管理者密碼. \n Search  - 動態頁面內容的關鍵字搜尋. \n IUpload  - Image file Upload - 圖檔的上傳功能, 可以上傳 jpg, png 與 gif 檔案, 其中若在手機上傳圖檔, 系統會自動將圖片檔案縮小為 800x800 大小. \n IList  - Image file List - 列出可以直接在頁面編輯模式中引用的圖片檔案. \n FUpload  - File Upload - 一般檔案的上傳功能, 目前可以上傳的檔案副檔名包括 'jpg', 'png', 'gif', '7z', 'pdf', 'zip', 'ttt', 'stl', 'txt', 'html', 'mp4' 等, 使用者可以自行修改. \n FList  - File List - 列出可以直接在頁面編輯模式中引用的上傳檔案. \n Logout  - 登出頁面編輯模式. \n Convert  - 將動態網站中位於 config/content.htm 檔案, 透過分頁設定轉為 content 目錄中的靜態網頁. \n acp  - git add, git commit 與 git push, 通常只有在 localhost 或自架主機上利用網頁表單協助將倉儲改版內容推向 Github 倉儲. \n SStatic  - Start Static Site - 利用 Python 啟動網站伺服功能, 可以讓使用者檢查轉檔後的靜態網站內容. \n RStatic  - Replit Static Site URL - 僅用於 Replit 模式, 當使用者按下 SStatic 後, 可以按下 RStatic 進入當下尚未推向 Github Pages 的靜態網站. \n 80  - 由 init.py 中 static_port 所決定的連結字串, 一般不使用 80, 只有在 Replit 中為了與動態網站共用 port, 才特別設為 80. \n", 'tags': '', 'url': 'cmsimde.html'}, {'title': 'w4翻譯', 'text': '翻譯影片 \n', 'tags': '', 'url': 'w4翻譯.html'}, {'title': 'w5字幕', 'text': '\n 第二部 \n 第二部逐字稿 \n 第九部 \n 第九部逐字稿 \n \n', 'tags': '', 'url': 'w5字幕.html'}, {'title': 'w9期中影片', 'text': '期中影片 \n', 'tags': '', 'url': 'w9期中影片.html'}, {'title': 'w12作業', 'text': '負責部分:零件1 \n 心得:這個零件我花了兩個多小時才畫完，因為我重畫了3次，第一次錄影的時候因為不知道要一次畫完所以重畫，第二次的時候因為在看尺寸的過程中不小心忘記暫停所以又再次的重畫，第三次錄影才順利地畫成功。 \n \n # NX 1872\n# Journal created by e0905 on Thu May  9 16:36:46 2024 台北標準時間\n\n#\nimport math\nimport NXOpen\nimport NXOpen.Annotations\nimport NXOpen.Features\nimport NXOpen.GeometricUtilities\nimport NXOpen.Preferences\ndef main() : \n\n    theSession  = NXOpen.Session.GetSession()\n    workPart = theSession.Parts.Work\n    displayPart = theSession.Parts.Display\n    # ----------------------------------------------\n    #   Menu: Insert->Sketch...\n    # ----------------------------------------------\n    markId1 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    sketchInPlaceBuilder1 = workPart.Sketches.CreateSketchInPlaceBuilder2(NXOpen.Sketch.Null)\n    \n    origin1 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal1 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane1 = workPart.Planes.CreatePlane(origin1, normal1, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    sketchInPlaceBuilder1.PlaneReference = plane1\n    \n    unit1 = workPart.UnitCollection.FindObject("MilliMeter")\n    expression1 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    expression2 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    sketchAlongPathBuilder1 = workPart.Sketches.CreateSketchAlongPathBuilder(NXOpen.Sketch.Null)\n    \n    theSession.SetUndoMarkName(markId1, "Create Sketch Dialog")\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch Curve->Rectangle...\n    # ----------------------------------------------\n    markId2 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.DeleteUndoMark(markId2, None)\n    \n    markId3 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.Preferences.Sketch.CreateInferredConstraints = True\n    \n    theSession.Preferences.Sketch.ContinuousAutoDimensioning = True\n    \n    theSession.Preferences.Sketch.DimensionLabel = NXOpen.Preferences.SketchPreferences.DimensionLabelType.Expression\n    \n    theSession.Preferences.Sketch.TextSizeFixed = True\n    \n    theSession.Preferences.Sketch.FixedTextSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayParenthesesOnReferenceDimensions = True\n    \n    theSession.Preferences.Sketch.DisplayReferenceGeometry = False\n    \n    theSession.Preferences.Sketch.ConstraintSymbolSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayObjectColor = False\n    \n    theSession.Preferences.Sketch.DisplayObjectName = True\n    \n    nXObject1 = sketchInPlaceBuilder1.Commit()\n    \n    sketch1 = nXObject1\n    feature1 = sketch1.Feature\n    \n    markId4 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "update")\n    \n    nErrs1 = theSession.UpdateManager.DoUpdate(markId4)\n    \n    sketch1.Activate(NXOpen.Sketch.ViewReorient.TrueValue)\n    \n    theSession.DeleteUndoMark(markId3, None)\n    \n    theSession.SetUndoMarkName(markId1, "Create Sketch")\n    \n    sketchInPlaceBuilder1.Destroy()\n    \n    sketchAlongPathBuilder1.Destroy()\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression2)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression1)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    plane1.DestroyPlane()\n    \n    markId5 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Profile short list")\n    \n    markId6 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Rectangle")\n    \n    expression3 = workPart.Expressions.CreateSystemExpression("120")\n    \n    expression4 = workPart.Expressions.CreateSystemExpression("120")\n    \n    workPart.Expressions.Edit(expression3, "120")\n    \n    theSession.SetUndoMarkVisibility(markId6, "Create Rectangle", NXOpen.Session.MarkVisibility.Visible)\n    \n    # ----------------------------------------------\n    # Creating rectangle using By 2 Points method \n    # ----------------------------------------------\n    startPoint1 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    endPoint1 = NXOpen.Point3d(120.0, 0.0, 0.0)\n    line1 = workPart.Curves.CreateLine(startPoint1, endPoint1)\n    \n    startPoint2 = NXOpen.Point3d(120.0, 0.0, 0.0)\n    endPoint2 = NXOpen.Point3d(120.0, 120.0, 0.0)\n    line2 = workPart.Curves.CreateLine(startPoint2, endPoint2)\n    \n    startPoint3 = NXOpen.Point3d(120.0, 120.0, 0.0)\n    endPoint3 = NXOpen.Point3d(0.0, 120.0, 0.0)\n    line3 = workPart.Curves.CreateLine(startPoint3, endPoint3)\n    \n    startPoint4 = NXOpen.Point3d(0.0, 120.0, 0.0)\n    endPoint4 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    line4 = workPart.Curves.CreateLine(startPoint4, endPoint4)\n    \n    theSession.ActiveSketch.AddGeometry(line1, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    theSession.ActiveSketch.AddGeometry(line2, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    theSession.ActiveSketch.AddGeometry(line3, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    theSession.ActiveSketch.AddGeometry(line4, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    geom1_1 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_1.Geometry = line1\n    geom1_1.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_1.SplineDefiningPointIndex = 0\n    geom2_1 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_1.Geometry = line2\n    geom2_1.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_1.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint1 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_1, geom2_1)\n    \n    geom1_2 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_2.Geometry = line2\n    geom1_2.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_2.SplineDefiningPointIndex = 0\n    geom2_2 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_2.Geometry = line3\n    geom2_2.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_2.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint2 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_2, geom2_2)\n    \n    geom1_3 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_3.Geometry = line3\n    geom1_3.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_3.SplineDefiningPointIndex = 0\n    geom2_3 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_3.Geometry = line4\n    geom2_3.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_3.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint3 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_3, geom2_3)\n    \n    geom1_4 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_4.Geometry = line4\n    geom1_4.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_4.SplineDefiningPointIndex = 0\n    geom2_4 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_4.Geometry = line1\n    geom2_4.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_4.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint4 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_4, geom2_4)\n    \n    geom1 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1.Geometry = line1\n    geom1.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    geom1.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint5 = theSession.ActiveSketch.CreateHorizontalConstraint(geom1)\n    \n    conGeom1_1 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_1.Geometry = line1\n    conGeom1_1.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_1.SplineDefiningPointIndex = 0\n    conGeom2_1 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_1.Geometry = line2\n    conGeom2_1.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_1.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint6 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_1, conGeom2_1)\n    \n    conGeom1_2 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_2.Geometry = line2\n    conGeom1_2.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_2.SplineDefiningPointIndex = 0\n    conGeom2_2 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_2.Geometry = line3\n    conGeom2_2.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_2.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint7 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_2, conGeom2_2)\n    \n    conGeom1_3 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_3.Geometry = line3\n    conGeom1_3.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_3.SplineDefiningPointIndex = 0\n    conGeom2_3 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_3.Geometry = line4\n    conGeom2_3.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_3.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint8 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_3, conGeom2_3)\n    \n    conGeom1_4 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_4.Geometry = line4\n    conGeom1_4.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_4.SplineDefiningPointIndex = 0\n    conGeom2_4 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_4.Geometry = line1\n    conGeom2_4.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_4.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint9 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_4, conGeom2_4)\n    \n    geom1_5 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_5.Geometry = line1\n    geom1_5.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom1_5.SplineDefiningPointIndex = 0\n    geom2_5 = NXOpen.Sketch.ConstraintGeometry()\n    \n    datumCsys1 = workPart.Features.FindObject("SKETCH(1:1B)")\n    point1 = datumCsys1.FindObject("POINT 1")\n    geom2_5.Geometry = point1\n    geom2_5.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    geom2_5.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint10 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_5, geom2_5)\n    \n    dimObject1_1 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject1_1.Geometry = line1\n    dimObject1_1.AssocType = NXOpen.Sketch.AssocType.StartPoint\n    dimObject1_1.AssocValue = 0\n    dimObject1_1.HelpPoint.X = 0.0\n    dimObject1_1.HelpPoint.Y = 0.0\n    dimObject1_1.HelpPoint.Z = 0.0\n    dimObject1_1.View = NXOpen.NXObject.Null\n    dimObject2_1 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject2_1.Geometry = line1\n    dimObject2_1.AssocType = NXOpen.Sketch.AssocType.EndPoint\n    dimObject2_1.AssocValue = 0\n    dimObject2_1.HelpPoint.X = 0.0\n    dimObject2_1.HelpPoint.Y = 0.0\n    dimObject2_1.HelpPoint.Z = 0.0\n    dimObject2_1.View = NXOpen.NXObject.Null\n    dimOrigin1 = NXOpen.Point3d(60.0, -10.497347910803205, 0.0)\n    sketchDimensionalConstraint1 = theSession.ActiveSketch.CreateDimension(NXOpen.Sketch.ConstraintType.ParallelDim, dimObject1_1, dimObject2_1, dimOrigin1, expression3, NXOpen.Sketch.DimensionOption.CreateAsDriving)\n    \n    sketchHelpedDimensionalConstraint1 = sketchDimensionalConstraint1\n    dimension1 = sketchHelpedDimensionalConstraint1.AssociatedDimension\n    \n    dimObject1_2 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject1_2.Geometry = line2\n    dimObject1_2.AssocType = NXOpen.Sketch.AssocType.StartPoint\n    dimObject1_2.AssocValue = 0\n    dimObject1_2.HelpPoint.X = 0.0\n    dimObject1_2.HelpPoint.Y = 0.0\n    dimObject1_2.HelpPoint.Z = 0.0\n    dimObject1_2.View = NXOpen.NXObject.Null\n    dimObject2_2 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject2_2.Geometry = line2\n    dimObject2_2.AssocType = NXOpen.Sketch.AssocType.EndPoint\n    dimObject2_2.AssocValue = 0\n    dimObject2_2.HelpPoint.X = 0.0\n    dimObject2_2.HelpPoint.Y = 0.0\n    dimObject2_2.HelpPoint.Z = 0.0\n    dimObject2_2.View = NXOpen.NXObject.Null\n    dimOrigin2 = NXOpen.Point3d(130.4973479108032, 60.0, 0.0)\n    sketchDimensionalConstraint2 = theSession.ActiveSketch.CreateDimension(NXOpen.Sketch.ConstraintType.ParallelDim, dimObject1_2, dimObject2_2, dimOrigin2, expression4, NXOpen.Sketch.DimensionOption.CreateAsDriving)\n    \n    sketchHelpedDimensionalConstraint2 = sketchDimensionalConstraint2\n    dimension2 = sketchHelpedDimensionalConstraint2.AssociatedDimension\n    \n    theSession.Preferences.Sketch.AutoDimensionsToArcCenter = False\n    \n    theSession.ActiveSketch.Update()\n    \n    theSession.Preferences.Sketch.AutoDimensionsToArcCenter = True\n    \n    geoms1 = [NXOpen.SmartObject.Null] * 4 \n    geoms1[0] = line1\n    geoms1[1] = line2\n    geoms1[2] = line3\n    geoms1[3] = line4\n    theSession.ActiveSketch.UpdateConstraintDisplay(geoms1)\n    \n    geoms2 = [NXOpen.SmartObject.Null] * 4 \n    geoms2[0] = line1\n    geoms2[1] = line2\n    geoms2[2] = line3\n    geoms2[3] = line4\n    theSession.ActiveSketch.UpdateDimensionDisplay(geoms2)\n    \n    scaleAboutPoint1 = NXOpen.Point3d(59.714600980100336, 53.079645315644754, 0.0)\n    viewCenter1 = NXOpen.Point3d(-59.714600980100336, -53.079645315644655, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(0.80000000000000004, scaleAboutPoint1, viewCenter1)\n    \n    origin2 = NXOpen.Point3d(83.052671776586593, 40.34978851756243, 0.0)\n    workPart.ModelingViews.WorkView.SetOrigin(origin2)\n    \n    origin3 = NXOpen.Point3d(83.052671776586593, 40.34978851756243, 0.0)\n    workPart.ModelingViews.WorkView.SetOrigin(origin3)\n    \n    # ----------------------------------------------\n    #   Menu: File->Finish Sketch\n    # ----------------------------------------------\n    sketch2 = theSession.ActiveSketch\n    \n    markId7 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Deactivate Sketch")\n    \n    theSession.ActiveSketch.Deactivate(NXOpen.Sketch.ViewReorient.TrueValue, NXOpen.Sketch.UpdateLevel.Model)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Design Feature->Extrude...\n    # ----------------------------------------------\n    markId8 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    extrudeBuilder1 = workPart.Features.CreateExtrudeBuilder(NXOpen.Features.Feature.Null)\n    \n    section1 = workPart.Sections.CreateSection(0.0094999999999999998, 0.01, 0.5)\n    \n    extrudeBuilder1.Section = section1\n    \n    extrudeBuilder1.AllowSelfIntersectingSection(True)\n    \n    unit2 = extrudeBuilder1.Draft.FrontDraftAngle.Units\n    \n    expression5 = workPart.Expressions.CreateSystemExpressionWithUnits("2.00", unit2)\n    \n    extrudeBuilder1.DistanceTolerance = 0.01\n    \n    extrudeBuilder1.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Create\n    \n    targetBodies1 = [NXOpen.Body.Null] * 1 \n    targetBodies1[0] = NXOpen.Body.Null\n    extrudeBuilder1.BooleanOperation.SetTargetBodies(targetBodies1)\n    \n    smartVolumeProfileBuilder1 = extrudeBuilder1.SmartVolumeProfile\n    \n    smartVolumeProfileBuilder1.OpenProfileSmartVolumeOption = False\n    \n    smartVolumeProfileBuilder1.CloseProfileRule = NXOpen.GeometricUtilities.SmartVolumeProfileBuilder.CloseProfileRuleType.Fci\n    \n    theSession.SetUndoMarkName(markId8, "Extrude Dialog")\n    \n    extrudeBuilder1.Limits.StartExtend.Value.SetFormula("0")\n    \n    extrudeBuilder1.Limits.EndExtend.Value.SetFormula("25")\n    \n    extrudeBuilder1.Draft.FrontDraftAngle.SetFormula("2")\n    \n    extrudeBuilder1.Draft.BackDraftAngle.SetFormula("2")\n    \n    extrudeBuilder1.Offset.StartOffset.SetFormula("0")\n    \n    extrudeBuilder1.Offset.EndOffset.SetFormula("5")\n    \n    section1.DistanceTolerance = 0.01\n    \n    section1.ChainingTolerance = 0.0094999999999999998\n    \n    section1.SetAllowedEntityTypes(NXOpen.Section.AllowTypes.OnlyCurves)\n    \n    markId9 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "section mark")\n    \n    markId10 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, None)\n    \n    features1 = [NXOpen.Features.Feature.Null] * 1 \n    sketchFeature1 = feature1\n    features1[0] = sketchFeature1\n    curveFeatureRule1 = workPart.ScRuleFactory.CreateRuleCurveFeature(features1)\n    \n    section1.AllowSelfIntersection(True)\n    \n    rules1 = [None] * 1 \n    rules1[0] = curveFeatureRule1\n    helpPoint1 = NXOpen.Point3d(120.0, 40.862250218942215, 0.0)\n    section1.AddToSection(rules1, line2, NXOpen.NXObject.Null, NXOpen.NXObject.Null, helpPoint1, NXOpen.Section.Mode.Create, False)\n    \n    theSession.DeleteUndoMark(markId10, None)\n    \n    direction1 = workPart.Directions.CreateDirection(sketch2, NXOpen.Sense.Forward, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    extrudeBuilder1.Direction = direction1\n    \n    expression6 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    theSession.DeleteUndoMark(markId9, None)\n    \n    extrudeBuilder1.Limits.EndExtend.Value.SetFormula("5")\n    \n    markId11 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Extrude")\n    \n    theSession.DeleteUndoMark(markId11, None)\n    \n    markId12 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Extrude")\n    \n    extrudeBuilder1.ParentFeatureInternal = False\n    \n    feature2 = extrudeBuilder1.CommitFeature()\n    \n    theSession.DeleteUndoMark(markId12, None)\n    \n    theSession.SetUndoMarkName(markId8, "Extrude")\n    \n    expression7 = extrudeBuilder1.Limits.StartExtend.Value\n    expression8 = extrudeBuilder1.Limits.EndExtend.Value\n    extrudeBuilder1.Destroy()\n    \n    workPart.Expressions.Delete(expression5)\n    \n    workPart.Expressions.Delete(expression6)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch...\n    # ----------------------------------------------\n    markId13 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    sketchInPlaceBuilder2 = workPart.Sketches.CreateSketchInPlaceBuilder2(NXOpen.Sketch.Null)\n    \n    origin4 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal2 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane2 = workPart.Planes.CreatePlane(origin4, normal2, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    sketchInPlaceBuilder2.PlaneReference = plane2\n    \n    expression9 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    expression10 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    sketchAlongPathBuilder2 = workPart.Sketches.CreateSketchAlongPathBuilder(NXOpen.Sketch.Null)\n    \n    sketchAlongPathBuilder2.PlaneLocation.Expression.SetFormula("0")\n    \n    theSession.SetUndoMarkName(markId13, "Create Sketch Dialog")\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch Curve->Line...\n    # ----------------------------------------------\n    markId14 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.DeleteUndoMark(markId14, None)\n    \n    markId15 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.Preferences.Sketch.CreateInferredConstraints = True\n    \n    theSession.Preferences.Sketch.ContinuousAutoDimensioning = True\n    \n    theSession.Preferences.Sketch.DimensionLabel = NXOpen.Preferences.SketchPreferences.DimensionLabelType.Expression\n    \n    theSession.Preferences.Sketch.TextSizeFixed = True\n    \n    theSession.Preferences.Sketch.FixedTextSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayParenthesesOnReferenceDimensions = True\n    \n    theSession.Preferences.Sketch.DisplayReferenceGeometry = False\n    \n    theSession.Preferences.Sketch.ConstraintSymbolSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayObjectColor = False\n    \n    theSession.Preferences.Sketch.DisplayObjectName = True\n    \n    nXObject2 = sketchInPlaceBuilder2.Commit()\n    \n    sketch3 = nXObject2\n    feature3 = sketch3.Feature\n    \n    markId16 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "update")\n    \n    nErrs2 = theSession.UpdateManager.DoUpdate(markId16)\n    \n    sketch3.Activate(NXOpen.Sketch.ViewReorient.TrueValue)\n    \n    theSession.DeleteUndoMark(markId15, None)\n    \n    theSession.SetUndoMarkName(markId13, "Create Sketch")\n    \n    sketchInPlaceBuilder2.Destroy()\n    \n    sketchAlongPathBuilder2.Destroy()\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression10)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression9)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    plane2.DestroyPlane()\n    \n    markId17 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Profile short list")\n    \n    markId18 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Curve")\n    \n    origin5 = NXOpen.Point3d(21.293578644066727, 42.587157288133646, 0.0)\n    workPart.ModelingViews.WorkView.SetOrigin(origin5)\n    \n    origin6 = NXOpen.Point3d(21.293578644066727, 42.587157288133646, 0.0)\n    workPart.ModelingViews.WorkView.SetOrigin(origin6)\n    \n    theSession.SetUndoMarkVisibility(markId18, "Curve", NXOpen.Session.MarkVisibility.Visible)\n    \n    startPoint5 = NXOpen.Point3d(60.0, 0.0, 0.0)\n    endPoint5 = NXOpen.Point3d(60.000000000000064, 120.0, 0.0)\n    line5 = workPart.Curves.CreateLine(startPoint5, endPoint5)\n    \n    theSession.ActiveSketch.AddGeometry(line5, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    geom1_6 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_6.Geometry = line5\n    geom1_6.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom1_6.SplineDefiningPointIndex = 0\n    geom2_6 = NXOpen.Sketch.ConstraintGeometry()\n    \n    extrude1 = feature2\n    edge1 = extrude1.FindObject("EDGE * 130 * 170 {(0,0,5)(60,0,5)(120,0,5) EXTRUDE(2)}")\n    geom2_6.Geometry = edge1\n    geom2_6.PointType = NXOpen.Sketch.ConstraintPointType.MidVertex\n    geom2_6.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint11 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_6, geom2_6)\n    \n    geom2 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2.Geometry = line5\n    geom2.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    geom2.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint12 = theSession.ActiveSketch.CreateVerticalConstraint(geom2)\n    \n    geom1_7 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_7.Geometry = line5\n    geom1_7.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_7.SplineDefiningPointIndex = 0\n    geom2_7 = NXOpen.Sketch.ConstraintGeometry()\n    \n    edge2 = extrude1.FindObject("EDGE * 130 * 150 {(120,120,5)(60,120,5)(0,120,5) EXTRUDE(2)}")\n    geom2_7.Geometry = edge2\n    geom2_7.PointType = NXOpen.Sketch.ConstraintPointType.MidVertex\n    geom2_7.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint13 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_7, geom2_7)\n    \n    theSession.Preferences.Sketch.AutoDimensionsToArcCenter = False\n    \n    theSession.ActiveSketch.Update()\n    \n    theSession.Preferences.Sketch.AutoDimensionsToArcCenter = True\n    \n    # ----------------------------------------------\n    #   Dialog Begin Line\n    # ----------------------------------------------\n    # ----------------------------------------------\n    #   Menu: File->Finish Sketch\n    # ----------------------------------------------\n    sketch4 = theSession.ActiveSketch\n    \n    markId19 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Deactivate Sketch")\n    \n    theSession.ActiveSketch.Deactivate(NXOpen.Sketch.ViewReorient.TrueValue, NXOpen.Sketch.UpdateLevel.Model)\n    \n    # ----------------------------------------------\n    #   Menu: Edit->Undo\n    # ----------------------------------------------\n    marksRecycled1, undoUnavailable1 = theSession.UndoLastNVisibleMarks(1)\n    \n    # ----------------------------------------------\n    #   Menu: Edit->Undo\n    # ----------------------------------------------\n    marksRecycled2, undoUnavailable2 = theSession.UndoLastNVisibleMarks(1)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch...\n    # ----------------------------------------------\n    markId20 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    sketchInPlaceBuilder3 = workPart.Sketches.CreateSketchInPlaceBuilder2(NXOpen.Sketch.Null)\n    \n    origin7 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal3 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane3 = workPart.Planes.CreatePlane(origin7, normal3, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    sketchInPlaceBuilder3.PlaneReference = plane3\n    \n    expression11 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    expression12 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    sketchAlongPathBuilder3 = workPart.Sketches.CreateSketchAlongPathBuilder(NXOpen.Sketch.Null)\n    \n    sketchAlongPathBuilder3.PlaneLocation.Expression.SetFormula("0")\n    \n    theSession.SetUndoMarkName(markId20, "Create Sketch Dialog")\n    \n    scalar1 = workPart.Scalars.CreateScalar(1.0, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    edge3 = extrude1.FindObject("EDGE * 130 * 160 {(0,120,5)(0,60,5)(0,0,5) EXTRUDE(2)}")\n    point2 = workPart.Points.CreatePoint(edge3, scalar1, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    edge4 = extrude1.FindObject("EDGE * 130 * 140 {(120,0,5)(120,60,5)(120,120,5) EXTRUDE(2)}")\n    direction2 = workPart.Directions.CreateDirection(edge4, NXOpen.Sense.Forward, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    face1 = extrude1.FindObject("FACE 130 {(60,60,5) EXTRUDE(2)}")\n    xform1 = workPart.Xforms.CreateXformByPlaneXDirPoint(face1, direction2, point2, NXOpen.SmartObject.UpdateOption.WithinModeling, 0.625, False, False)\n    \n    cartesianCoordinateSystem1 = workPart.CoordinateSystems.CreateCoordinateSystem(xform1, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    sketchInPlaceBuilder3.Csystem = cartesianCoordinateSystem1\n    \n    origin8 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal4 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane4 = workPart.Planes.CreatePlane(origin8, normal4, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    plane4.SetMethod(NXOpen.PlaneTypes.MethodType.Coincident)\n    \n    geom3 = [NXOpen.NXObject.Null] * 1 \n    geom3[0] = face1\n    plane4.SetGeometry(geom3)\n    \n    plane4.SetFlip(False)\n    \n    plane4.SetExpression(None)\n    \n    plane4.SetAlternate(NXOpen.PlaneTypes.AlternateType.One)\n    \n    plane4.Evaluate()\n    \n    origin9 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal5 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane5 = workPart.Planes.CreatePlane(origin9, normal5, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    expression13 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    expression14 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    plane5.SynchronizeToPlane(plane4)\n    \n    scalar2 = workPart.Scalars.CreateScalar(100.0, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    point3 = workPart.Points.CreatePoint(edge3, scalar2, NXOpen.PointCollection.PointOnCurveLocationOption.PercentParameter, NXOpen.Point.Null, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    plane5.SetMethod(NXOpen.PlaneTypes.MethodType.Coincident)\n    \n    geom4 = [NXOpen.NXObject.Null] * 1 \n    geom4[0] = face1\n    plane5.SetGeometry(geom4)\n    \n    plane5.SetAlternate(NXOpen.PlaneTypes.AlternateType.One)\n    \n    plane5.Evaluate()\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch Curve->Line...\n    # ----------------------------------------------\n    markId21 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.DeleteUndoMark(markId21, None)\n    \n    markId22 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.Preferences.Sketch.CreateInferredConstraints = True\n    \n    theSession.Preferences.Sketch.ContinuousAutoDimensioning = True\n    \n    theSession.Preferences.Sketch.DimensionLabel = NXOpen.Preferences.SketchPreferences.DimensionLabelType.Expression\n    \n    theSession.Preferences.Sketch.TextSizeFixed = True\n    \n    theSession.Preferences.Sketch.FixedTextSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayParenthesesOnReferenceDimensions = True\n    \n    theSession.Preferences.Sketch.DisplayReferenceGeometry = False\n    \n    theSession.Preferences.Sketch.ConstraintSymbolSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayObjectColor = False\n    \n    theSession.Preferences.Sketch.DisplayObjectName = True\n    \n    nXObject3 = sketchInPlaceBuilder3.Commit()\n    \n    sketch5 = nXObject3\n    feature4 = sketch5.Feature\n    \n    markId23 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "update")\n    \n    nErrs3 = theSession.UpdateManager.DoUpdate(markId23)\n    \n    sketch5.Activate(NXOpen.Sketch.ViewReorient.TrueValue)\n    \n    theSession.DeleteUndoMark(markId22, None)\n    \n    theSession.SetUndoMarkName(markId20, "Create Sketch")\n    \n    sketchInPlaceBuilder3.Destroy()\n    \n    sketchAlongPathBuilder3.Destroy()\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression12)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    workPart.Points.DeletePoint(point3)\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression11)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    plane3.DestroyPlane()\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression14)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression13)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    plane5.DestroyPlane()\n    \n    markId24 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Profile short list")\n    \n    origin10 = NXOpen.Point3d(54.622658260866984, 68.509774767867029, 5.0)\n    workPart.ModelingViews.WorkView.SetOrigin(origin10)\n    \n    origin11 = NXOpen.Point3d(54.622658260866984, 68.509774767867029, 5.0)\n    workPart.ModelingViews.WorkView.SetOrigin(origin11)\n    \n    markId25 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Curve")\n    \n    theSession.SetUndoMarkVisibility(markId25, "Curve", NXOpen.Session.MarkVisibility.Visible)\n    \n    startPoint6 = NXOpen.Point3d(60.0, 0.0, 5.0)\n    endPoint6 = NXOpen.Point3d(60.0, 120.0, 5.0)\n    line6 = workPart.Curves.CreateLine(startPoint6, endPoint6)\n    \n    theSession.ActiveSketch.AddGeometry(line6, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    geom1_8 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_8.Geometry = line6\n    geom1_8.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom1_8.SplineDefiningPointIndex = 0\n    geom2_8 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_8.Geometry = edge1\n    geom2_8.PointType = NXOpen.Sketch.ConstraintPointType.MidVertex\n    geom2_8.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint14 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_8, geom2_8)\n    \n    geom5 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom5.Geometry = line6\n    geom5.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    geom5.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint15 = theSession.ActiveSketch.CreateHorizontalConstraint(geom5)\n    \n    geom1_9 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_9.Geometry = line6\n    geom1_9.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_9.SplineDefiningPointIndex = 0\n    geom2_9 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_9.Geometry = edge2\n    geom2_9.PointType = NXOpen.Sketch.ConstraintPointType.MidVertex\n    geom2_9.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint16 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_9, geom2_9)\n    \n    theSession.Preferences.Sketch.AutoDimensionsToArcCenter = False\n    \n    theSession.ActiveSketch.Update()\n    \n    theSession.Preferences.Sketch.AutoDimensionsToArcCenter = True\n    \n    # ----------------------------------------------\n    #   Dialog Begin Line\n    # ----------------------------------------------\n    # ----------------------------------------------\n    #   Menu: File->Finish Sketch\n    # ----------------------------------------------\n    sketch6 = theSession.ActiveSketch\n    \n    markId26 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Deactivate Sketch")\n    \n    theSession.ActiveSketch.Deactivate(NXOpen.Sketch.ViewReorient.TrueValue, NXOpen.Sketch.UpdateLevel.Model)\n    \n    origin12 = NXOpen.Point3d(70.591492325283639, 88.574068011735548, 2.8602988790552368)\n    workPart.ModelingViews.WorkView.SetOrigin(origin12)\n    \n    origin13 = NXOpen.Point3d(70.591492325283639, 88.574068011735548, 2.8602988790552368)\n    workPart.ModelingViews.WorkView.SetOrigin(origin13)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch...\n    # ----------------------------------------------\n    markId27 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    sketchInPlaceBuilder4 = workPart.Sketches.CreateSketchInPlaceBuilder2(NXOpen.Sketch.Null)\n    \n    origin14 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal6 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane6 = workPart.Planes.CreatePlane(origin14, normal6, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    sketchInPlaceBuilder4.PlaneReference = plane6\n    \n    expression15 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    expression16 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    sketchAlongPathBuilder4 = workPart.Sketches.CreateSketchAlongPathBuilder(NXOpen.Sketch.Null)\n    \n    sketchAlongPathBuilder4.PlaneLocation.Expression.SetFormula("0")\n    \n    theSession.SetUndoMarkName(markId27, "Create Sketch Dialog")\n    \n    scalar3 = workPart.Scalars.CreateScalar(1.0, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    point4 = workPart.Points.CreatePoint(edge3, scalar3, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    direction3 = workPart.Directions.CreateDirection(edge4, NXOpen.Sense.Forward, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    xform2 = workPart.Xforms.CreateXformByPlaneXDirPoint(face1, direction3, point4, NXOpen.SmartObject.UpdateOption.WithinModeling, 0.625, False, False)\n    \n    cartesianCoordinateSystem2 = workPart.CoordinateSystems.CreateCoordinateSystem(xform2, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    sketchInPlaceBuilder4.Csystem = cartesianCoordinateSystem2\n    \n    origin15 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal7 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane7 = workPart.Planes.CreatePlane(origin15, normal7, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    plane7.SetMethod(NXOpen.PlaneTypes.MethodType.Coincident)\n    \n    geom6 = [NXOpen.NXObject.Null] * 1 \n    geom6[0] = face1\n    plane7.SetGeometry(geom6)\n    \n    plane7.SetFlip(False)\n    \n    plane7.SetExpression(None)\n    \n    plane7.SetAlternate(NXOpen.PlaneTypes.AlternateType.One)\n    \n    plane7.Evaluate()\n    \n    origin16 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal8 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane8 = workPart.Planes.CreatePlane(origin16, normal8, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    expression17 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    expression18 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    plane8.SynchronizeToPlane(plane7)\n    \n    scalar4 = workPart.Scalars.CreateScalar(100.0, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    point5 = workPart.Points.CreatePoint(edge3, scalar4, NXOpen.PointCollection.PointOnCurveLocationOption.PercentParameter, NXOpen.Point.Null, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    plane8.SetMethod(NXOpen.PlaneTypes.MethodType.Coincident)\n    \n    geom7 = [NXOpen.NXObject.Null] * 1 \n    geom7[0] = face1\n    plane8.SetGeometry(geom7)\n    \n    plane8.SetAlternate(NXOpen.PlaneTypes.AlternateType.One)\n    \n    plane8.Evaluate()\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Design Feature->Extrude...\n    # ----------------------------------------------\n    markId28 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.DeleteUndoMark(markId28, None)\n    \n    markId29 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.Preferences.Sketch.CreateInferredConstraints = True\n    \n    theSession.Preferences.Sketch.ContinuousAutoDimensioning = True\n    \n    theSession.Preferences.Sketch.DimensionLabel = NXOpen.Preferences.SketchPreferences.DimensionLabelType.Expression\n    \n    theSession.Preferences.Sketch.TextSizeFixed = True\n    \n    theSession.Preferences.Sketch.FixedTextSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayParenthesesOnReferenceDimensions = True\n    \n    theSession.Preferences.Sketch.DisplayReferenceGeometry = False\n    \n    theSession.Preferences.Sketch.ConstraintSymbolSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayObjectColor = False\n    \n    theSession.Preferences.Sketch.DisplayObjectName = True\n    \n    nXObject4 = sketchInPlaceBuilder4.Commit()\n    \n    sketch7 = nXObject4\n    feature5 = sketch7.Feature\n    \n    markId30 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "update")\n    \n    nErrs4 = theSession.UpdateManager.DoUpdate(markId30)\n    \n    sketch7.Activate(NXOpen.Sketch.ViewReorient.TrueValue)\n    \n    theSession.DeleteUndoMark(markId29, None)\n    \n    theSession.SetUndoMarkName(markId27, "Create Sketch")\n    \n    sketchInPlaceBuilder4.Destroy()\n    \n    sketchAlongPathBuilder4.Destroy()\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression16)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    workPart.Points.DeletePoint(point5)\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression15)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    plane6.DestroyPlane()\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression18)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression17)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    plane8.DestroyPlane()\n    \n    markId31 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    extrudeBuilder2 = workPart.Features.CreateExtrudeBuilder(NXOpen.Features.Feature.Null)\n    \n    section2 = workPart.Sections.CreateSection(0.0094999999999999998, 0.01, 0.5)\n    \n    extrudeBuilder2.Section = section2\n    \n    extrudeBuilder2.AllowSelfIntersectingSection(True)\n    \n    expression19 = workPart.Expressions.CreateSystemExpressionWithUnits("2.00", unit2)\n    \n    extrudeBuilder2.DistanceTolerance = 0.01\n    \n    extrudeBuilder2.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Create\n    \n    targetBodies2 = [NXOpen.Body.Null] * 1 \n    targetBodies2[0] = NXOpen.Body.Null\n    extrudeBuilder2.BooleanOperation.SetTargetBodies(targetBodies2)\n    \n    extrudeBuilder2.Limits.StartExtend.Value.SetFormula("0")\n    \n    extrudeBuilder2.Limits.EndExtend.Value.SetFormula("5")\n    \n    extrudeBuilder2.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Create\n    \n    targetBodies3 = [NXOpen.Body.Null] * 1 \n    targetBodies3[0] = NXOpen.Body.Null\n    extrudeBuilder2.BooleanOperation.SetTargetBodies(targetBodies3)\n    \n    extrudeBuilder2.Draft.FrontDraftAngle.SetFormula("2")\n    \n    extrudeBuilder2.Draft.BackDraftAngle.SetFormula("2")\n    \n    extrudeBuilder2.Offset.StartOffset.SetFormula("0")\n    \n    extrudeBuilder2.Offset.EndOffset.SetFormula("5")\n    \n    smartVolumeProfileBuilder2 = extrudeBuilder2.SmartVolumeProfile\n    \n    smartVolumeProfileBuilder2.OpenProfileSmartVolumeOption = False\n    \n    smartVolumeProfileBuilder2.CloseProfileRule = NXOpen.GeometricUtilities.SmartVolumeProfileBuilder.CloseProfileRuleType.Fci\n    \n    theSession.SetUndoMarkName(markId31, "Extrude Dialog")\n    \n    section2.DistanceTolerance = 0.01\n    \n    section2.ChainingTolerance = 0.0094999999999999998\n    \n    section2.SetAllowedEntityTypes(NXOpen.Section.AllowTypes.OnlyCurves)\n    \n    origin17 = NXOpen.Point3d(82.705493863911443, 158.31312817980088, 5.0)\n    workPart.ModelingViews.WorkView.SetOrigin(origin17)\n    \n    origin18 = NXOpen.Point3d(82.705493863911443, 158.31312817980088, 5.0)\n    workPart.ModelingViews.WorkView.SetOrigin(origin18)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch Curve->Rectangle...\n    # ----------------------------------------------\n    extrudeBuilder2.Destroy()\n    \n    section2.Destroy()\n    \n    workPart.Expressions.Delete(expression19)\n    \n    theSession.UndoToMark(markId31, None)\n    \n    theSession.DeleteUndoMark(markId31, None)\n    \n    markId32 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Profile short list")\n    \n    scaleAboutPoint2 = NXOpen.Point3d(-97.055514254478311, 22.527989000244549, 0.0)\n    viewCenter2 = NXOpen.Point3d(97.055514254478311, -22.527989000244649, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint2, viewCenter2)\n    \n    scaleAboutPoint3 = NXOpen.Point3d(-77.644411403582623, 18.022391200195639, 0.0)\n    viewCenter3 = NXOpen.Point3d(77.644411403582623, -18.02239120019572, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint3, viewCenter3)\n    \n    scaleAboutPoint4 = NXOpen.Point3d(-62.11552912286615, 14.41791296015651, 0.0)\n    viewCenter4 = NXOpen.Point3d(62.115529122866086, -14.417912960156576, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint4, viewCenter4)\n    \n    scaleAboutPoint5 = NXOpen.Point3d(-49.376414247111384, 11.534330368125211, 0.0)\n    viewCenter5 = NXOpen.Point3d(49.376414247111342, -11.534330368125264, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint5, viewCenter5)\n    \n    markId33 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Rectangle")\n    \n    expression20 = workPart.Expressions.CreateSystemExpression("5.9")\n    \n    expression21 = workPart.Expressions.CreateSystemExpression("5.9")\n    \n    workPart.Expressions.Edit(expression20, "5.9")\n    \n    theSession.SetUndoMarkVisibility(markId33, "Create Rectangle", NXOpen.Session.MarkVisibility.Visible)\n    \n    # ----------------------------------------------\n    # Creating rectangle using By 2 Points method \n    # ----------------------------------------------\n    startPoint7 = NXOpen.Point3d(59.899999999999999, 60.0, 5.0)\n    endPoint7 = NXOpen.Point3d(59.899999999999999, 65.900000000000006, 5.0)\n    line7 = workPart.Curves.CreateLine(startPoint7, endPoint7)\n    \n    startPoint8 = NXOpen.Point3d(59.899999999999999, 65.900000000000006, 5.0)\n    endPoint8 = NXOpen.Point3d(54.0, 65.900000000000006, 5.0)\n    line8 = workPart.Curves.CreateLine(startPoint8, endPoint8)\n    \n    startPoint9 = NXOpen.Point3d(54.0, 65.900000000000006, 5.0)\n    endPoint9 = NXOpen.Point3d(54.0, 60.0, 5.0)\n    line9 = workPart.Curves.CreateLine(startPoint9, endPoint9)\n    \n    startPoint10 = NXOpen.Point3d(54.0, 60.0, 5.0)\n    endPoint10 = NXOpen.Point3d(59.899999999999999, 60.0, 5.0)\n    line10 = workPart.Curves.CreateLine(startPoint10, endPoint10)\n    \n    theSession.ActiveSketch.AddGeometry(line7, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    theSession.ActiveSketch.AddGeometry(line8, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    theSession.ActiveSketch.AddGeometry(line9, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    theSession.ActiveSketch.AddGeometry(line10, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    geom1_10 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_10.Geometry = line7\n    geom1_10.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_10.SplineDefiningPointIndex = 0\n    geom2_10 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_10.Geometry = line8\n    geom2_10.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_10.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint17 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_10, geom2_10)\n    \n    geom1_11 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_11.Geometry = line8\n    geom1_11.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_11.SplineDefiningPointIndex = 0\n    geom2_11 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_11.Geometry = line9\n    geom2_11.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_11.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint18 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_11, geom2_11)\n    \n    geom1_12 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_12.Geometry = line9\n    geom1_12.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_12.SplineDefiningPointIndex = 0\n    geom2_12 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_12.Geometry = line10\n    geom2_12.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_12.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint19 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_12, geom2_12)\n    \n    geom1_13 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_13.Geometry = line10\n    geom1_13.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_13.SplineDefiningPointIndex = 0\n    geom2_13 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_13.Geometry = line7\n    geom2_13.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_13.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint20 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_13, geom2_13)\n    \n    geom8 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom8.Geometry = line7\n    geom8.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    geom8.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint21 = theSession.ActiveSketch.CreateHorizontalConstraint(geom8)\n    \n    conGeom1_5 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_5.Geometry = line7\n    conGeom1_5.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_5.SplineDefiningPointIndex = 0\n    conGeom2_5 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_5.Geometry = line8\n    conGeom2_5.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_5.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint22 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_5, conGeom2_5)\n    \n    conGeom1_6 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_6.Geometry = line8\n    conGeom1_6.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_6.SplineDefiningPointIndex = 0\n    conGeom2_6 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_6.Geometry = line9\n    conGeom2_6.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_6.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint23 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_6, conGeom2_6)\n    \n    conGeom1_7 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_7.Geometry = line9\n    conGeom1_7.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_7.SplineDefiningPointIndex = 0\n    conGeom2_7 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_7.Geometry = line10\n    conGeom2_7.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_7.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint24 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_7, conGeom2_7)\n    \n    conGeom1_8 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_8.Geometry = line10\n    conGeom1_8.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_8.SplineDefiningPointIndex = 0\n    conGeom2_8 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_8.Geometry = line7\n    conGeom2_8.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_8.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint25 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_8, conGeom2_8)\n    \n    dimObject1_3 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject1_3.Geometry = line7\n    dimObject1_3.AssocType = NXOpen.Sketch.AssocType.StartPoint\n    dimObject1_3.AssocValue = 0\n    dimObject1_3.HelpPoint.X = 0.0\n    dimObject1_3.HelpPoint.Y = 0.0\n    dimObject1_3.HelpPoint.Z = 0.0\n    dimObject1_3.View = NXOpen.NXObject.Null\n    dimObject2_3 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject2_3.Geometry = line7\n    dimObject2_3.AssocType = NXOpen.Sketch.AssocType.EndPoint\n    dimObject2_3.AssocValue = 0\n    dimObject2_3.HelpPoint.X = 0.0\n    dimObject2_3.HelpPoint.Y = 0.0\n    dimObject2_3.HelpPoint.Z = 0.0\n    dimObject2_3.View = NXOpen.NXObject.Null\n    dimOrigin3 = NXOpen.Point3d(64.199713704264994, 62.950000000000003, 5.0)\n    sketchDimensionalConstraint3 = theSession.ActiveSketch.CreateDimension(NXOpen.Sketch.ConstraintType.ParallelDim, dimObject1_3, dimObject2_3, dimOrigin3, expression20, NXOpen.Sketch.DimensionOption.CreateAsDriving)\n    \n    sketchHelpedDimensionalConstraint3 = sketchDimensionalConstraint3\n    dimension3 = sketchHelpedDimensionalConstraint3.AssociatedDimension\n    \n    dimObject1_4 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject1_4.Geometry = line8\n    dimObject1_4.AssocType = NXOpen.Sketch.AssocType.StartPoint\n    dimObject1_4.AssocValue = 0\n    dimObject1_4.HelpPoint.X = 0.0\n    dimObject1_4.HelpPoint.Y = 0.0\n    dimObject1_4.HelpPoint.Z = 0.0\n    dimObject1_4.View = NXOpen.NXObject.Null\n    dimObject2_4 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject2_4.Geometry = line8\n    dimObject2_4.AssocType = NXOpen.Sketch.AssocType.EndPoint\n    dimObject2_4.AssocValue = 0\n    dimObject2_4.HelpPoint.X = 0.0\n    dimObject2_4.HelpPoint.Y = 0.0\n    dimObject2_4.HelpPoint.Z = 0.0\n    dimObject2_4.View = NXOpen.NXObject.Null\n    dimOrigin4 = NXOpen.Point3d(56.950000000000003, 70.199713704264994, 5.0)\n    sketchDimensionalConstraint4 = theSession.ActiveSketch.CreateDimension(NXOpen.Sketch.ConstraintType.ParallelDim, dimObject1_4, dimObject2_4, dimOrigin4, expression21, NXOpen.Sketch.DimensionOption.CreateAsDriving)\n    \n    sketchHelpedDimensionalConstraint4 = sketchDimensionalConstraint4\n    dimension4 = sketchHelpedDimensionalConstraint4.AssociatedDimension\n    \n    theSession.Preferences.Sketch.AutoDimensionsToArcCenter = False\n    \n    theSession.ActiveSketch.Update()\n    \n    theSession.Preferences.Sketch.AutoDimensionsToArcCenter = True\n    \n    geoms3 = [NXOpen.SmartObject.Null] * 4 \n    geoms3[0] = line7\n    geoms3[1] = line8\n    geoms3[2] = line9\n    geoms3[3] = line10\n    theSession.ActiveSketch.UpdateConstraintDisplay(geoms3)\n    \n    geoms4 = [NXOpen.SmartObject.Null] * 4 \n    geoms4[0] = line7\n    geoms4[1] = line8\n    geoms4[2] = line9\n    geoms4[3] = line10\n    theSession.ActiveSketch.UpdateDimensionDisplay(geoms4)\n    \n    scaleAboutPoint6 = NXOpen.Point3d(-32.42252865122326, 20.477386516562042, 0.0)\n    viewCenter6 = NXOpen.Point3d(32.422528651223196, -20.477386516561999, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(0.80000000000000004, scaleAboutPoint6, viewCenter6)\n    \n    scaleAboutPoint7 = NXOpen.Point3d(-40.054147237256757, 24.806710517748776, 0.0)\n    viewCenter7 = NXOpen.Point3d(40.054147237256728, -24.806710517748723, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(0.80000000000000004, scaleAboutPoint7, viewCenter7)\n    \n    origin19 = NXOpen.Point3d(69.468170968403143, 102.60344815928428, 5.0)\n    workPart.ModelingViews.WorkView.SetOrigin(origin19)\n    \n    origin20 = NXOpen.Point3d(69.468170968403143, 102.60344815928428, 5.0)\n    workPart.ModelingViews.WorkView.SetOrigin(origin20)\n    \n    # ----------------------------------------------\n    #   Menu: File->Finish Sketch\n    # ----------------------------------------------\n    sketch8 = theSession.ActiveSketch\n    \n    markId34 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Deactivate Sketch")\n    \n    theSession.ActiveSketch.Deactivate(NXOpen.Sketch.ViewReorient.TrueValue, NXOpen.Sketch.UpdateLevel.Model)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Design Feature->Extrude...\n    # ----------------------------------------------\n    markId35 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    extrudeBuilder3 = workPart.Features.CreateExtrudeBuilder(NXOpen.Features.Feature.Null)\n    \n    section3 = workPart.Sections.CreateSection(0.0094999999999999998, 0.01, 0.5)\n    \n    extrudeBuilder3.Section = section3\n    \n    extrudeBuilder3.AllowSelfIntersectingSection(True)\n    \n    expression22 = workPart.Expressions.CreateSystemExpressionWithUnits("2.00", unit2)\n    \n    extrudeBuilder3.DistanceTolerance = 0.01\n    \n    extrudeBuilder3.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Create\n    \n    targetBodies4 = [NXOpen.Body.Null] * 1 \n    targetBodies4[0] = NXOpen.Body.Null\n    extrudeBuilder3.BooleanOperation.SetTargetBodies(targetBodies4)\n    \n    extrudeBuilder3.Limits.StartExtend.Value.SetFormula("0")\n    \n    extrudeBuilder3.Limits.EndExtend.Value.SetFormula("5")\n    \n    extrudeBuilder3.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Create\n    \n    targetBodies5 = [NXOpen.Body.Null] * 1 \n    targetBodies5[0] = NXOpen.Body.Null\n    extrudeBuilder3.BooleanOperation.SetTargetBodies(targetBodies5)\n    \n    extrudeBuilder3.Draft.FrontDraftAngle.SetFormula("2")\n    \n    extrudeBuilder3.Draft.BackDraftAngle.SetFormula("2")\n    \n    extrudeBuilder3.Offset.StartOffset.SetFormula("0")\n    \n    extrudeBuilder3.Offset.EndOffset.SetFormula("5")\n    \n    smartVolumeProfileBuilder3 = extrudeBuilder3.SmartVolumeProfile\n    \n    smartVolumeProfileBuilder3.OpenProfileSmartVolumeOption = False\n    \n    smartVolumeProfileBuilder3.CloseProfileRule = NXOpen.GeometricUtilities.SmartVolumeProfileBuilder.CloseProfileRuleType.Fci\n    \n    theSession.SetUndoMarkName(markId35, "Extrude Dialog")\n    \n    section3.DistanceTolerance = 0.01\n    \n    section3.ChainingTolerance = 0.0094999999999999998\n    \n    section3.SetAllowedEntityTypes(NXOpen.Section.AllowTypes.OnlyCurves)\n    \n    markId36 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "section mark")\n    \n    markId37 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, None)\n    \n    features2 = [NXOpen.Features.Feature.Null] * 1 \n    sketchFeature2 = feature5\n    features2[0] = sketchFeature2\n    curveFeatureRule2 = workPart.ScRuleFactory.CreateRuleCurveFeature(features2)\n    \n    section3.AllowSelfIntersection(True)\n    \n    rules2 = [None] * 1 \n    rules2[0] = curveFeatureRule2\n    helpPoint2 = NXOpen.Point3d(57.134902646326559, 60.0, 5.0000000000000018)\n    section3.AddToSection(rules2, line10, NXOpen.NXObject.Null, NXOpen.NXObject.Null, helpPoint2, NXOpen.Section.Mode.Create, False)\n    \n    theSession.DeleteUndoMark(markId37, None)\n    \n    direction4 = workPart.Directions.CreateDirection(sketch8, NXOpen.Sense.Forward, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    extrudeBuilder3.Direction = direction4\n    \n    targetBodies6 = [NXOpen.Body.Null] * 1 \n    body1 = workPart.Bodies.FindObject("EXTRUDE(2)")\n    targetBodies6[0] = body1\n    extrudeBuilder3.BooleanOperation.SetTargetBodies(targetBodies6)\n    \n    extrudeBuilder3.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Unite\n    \n    targetBodies7 = [NXOpen.Body.Null] * 1 \n    targetBodies7[0] = body1\n    extrudeBuilder3.BooleanOperation.SetTargetBodies(targetBodies7)\n    \n    expression23 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    theSession.DeleteUndoMark(markId36, None)\n    \n    extrudeBuilder3.Limits.EndExtend.Value.SetFormula("60")\n    \n    extrudeBuilder3.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Unite\n    \n    targetBodies8 = [NXOpen.Body.Null] * 1 \n    targetBodies8[0] = body1\n    extrudeBuilder3.BooleanOperation.SetTargetBodies(targetBodies8)\n    \n    extrudeBuilder3.Limits.EndExtend.Value.SetFormula("60")\n    \n    extrudeBuilder3.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Unite\n    \n    targetBodies9 = [NXOpen.Body.Null] * 1 \n    targetBodies9[0] = body1\n    extrudeBuilder3.BooleanOperation.SetTargetBodies(targetBodies9)\n    \n    markId38 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Extrude")\n    \n    theSession.DeleteUndoMark(markId38, None)\n    \n    markId39 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Extrude")\n    \n    extrudeBuilder3.ParentFeatureInternal = False\n    \n    feature6 = extrudeBuilder3.CommitFeature()\n    \n    theSession.DeleteUndoMark(markId39, None)\n    \n    theSession.SetUndoMarkName(markId35, "Extrude")\n    \n    expression24 = extrudeBuilder3.Limits.StartExtend.Value\n    expression25 = extrudeBuilder3.Limits.EndExtend.Value\n    extrudeBuilder3.Destroy()\n    \n    workPart.Expressions.Delete(expression22)\n    \n    workPart.Expressions.Delete(expression23)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch...\n    # ----------------------------------------------\n    markId40 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    sketchInPlaceBuilder5 = workPart.Sketches.CreateSketchInPlaceBuilder2(NXOpen.Sketch.Null)\n    \n    origin21 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal9 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane9 = workPart.Planes.CreatePlane(origin21, normal9, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    sketchInPlaceBuilder5.PlaneReference = plane9\n    \n    expression26 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    expression27 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    sketchAlongPathBuilder5 = workPart.Sketches.CreateSketchAlongPathBuilder(NXOpen.Sketch.Null)\n    \n    sketchAlongPathBuilder5.PlaneLocation.Expression.SetFormula("0")\n    \n    theSession.SetUndoMarkName(markId40, "Create Sketch Dialog")\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch Curve->Rectangle...\n    # ----------------------------------------------\n    markId41 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.DeleteUndoMark(markId41, None)\n    \n    markId42 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.Preferences.Sketch.CreateInferredConstraints = True\n    \n    theSession.Preferences.Sketch.ContinuousAutoDimensioning = True\n    \n    theSession.Preferences.Sketch.DimensionLabel = NXOpen.Preferences.SketchPreferences.DimensionLabelType.Expression\n    \n    theSession.Preferences.Sketch.TextSizeFixed = True\n    \n    theSession.Preferences.Sketch.FixedTextSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayParenthesesOnReferenceDimensions = True\n    \n    theSession.Preferences.Sketch.DisplayReferenceGeometry = False\n    \n    theSession.Preferences.Sketch.ConstraintSymbolSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayObjectColor = False\n    \n    theSession.Preferences.Sketch.DisplayObjectName = True\n    \n    nXObject5 = sketchInPlaceBuilder5.Commit()\n    \n    sketch9 = nXObject5\n    feature7 = sketch9.Feature\n    \n    markId43 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "update")\n    \n    nErrs5 = theSession.UpdateManager.DoUpdate(markId43)\n    \n    sketch9.Activate(NXOpen.Sketch.ViewReorient.TrueValue)\n    \n    theSession.DeleteUndoMark(markId42, None)\n    \n    theSession.SetUndoMarkName(markId40, "Create Sketch")\n    \n    sketchInPlaceBuilder5.Destroy()\n    \n    sketchAlongPathBuilder5.Destroy()\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression27)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression26)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    plane9.DestroyPlane()\n    \n    markId44 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Profile short list")\n    \n    origin22 = NXOpen.Point3d(101.53025179562276, 0.30860258904440541, 0.0)\n    workPart.ModelingViews.WorkView.SetOrigin(origin22)\n    \n    origin23 = NXOpen.Point3d(101.53025179562276, 0.30860258904440541, 0.0)\n    workPart.ModelingViews.WorkView.SetOrigin(origin23)\n    \n    scaleAboutPoint8 = NXOpen.Point3d(-45.518881884055808, -2.7774233014000562, 0.0)\n    viewCenter8 = NXOpen.Point3d(45.518881884055808, 2.7774233014000562, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint8, viewCenter8)\n    \n    scaleAboutPoint9 = NXOpen.Point3d(-35.427577222302396, -1.4812924274133095, 0.0)\n    viewCenter9 = NXOpen.Point3d(35.427577222302418, 1.4812924274133095, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint9, viewCenter9)\n    \n    scaleAboutPoint10 = NXOpen.Point3d(-27.552039149888152, -0.7900226279538084, 0.0)\n    viewCenter10 = NXOpen.Point3d(27.552039149888188, 0.7900226279538084, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint10, viewCenter10)\n    \n    scaleAboutPoint11 = NXOpen.Point3d(-21.725622268728994, -0.47401357677231098, 0.0)\n    viewCenter11 = NXOpen.Point3d(21.725622268729023, 0.47401357677231098, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint11, viewCenter11)\n    \n    markId45 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Rectangle")\n    \n    expression28 = workPart.Expressions.CreateSystemExpression("5.9")\n    \n    expression29 = workPart.Expressions.CreateSystemExpression("5.9")\n    \n    workPart.Expressions.Edit(expression28, "5.9")\n    \n    theSession.SetUndoMarkVisibility(markId45, "Create Rectangle", NXOpen.Session.MarkVisibility.Visible)\n    \n    # ----------------------------------------------\n    # Creating rectangle using By 2 Points method \n    # ----------------------------------------------\n    startPoint11 = NXOpen.Point3d(59.899999999999999, 4.0, 0.0)\n    endPoint11 = NXOpen.Point3d(54.0, 4.0, 0.0)\n    line11 = workPart.Curves.CreateLine(startPoint11, endPoint11)\n    \n    startPoint12 = NXOpen.Point3d(54.0, 4.0, 0.0)\n    endPoint12 = NXOpen.Point3d(54.0, 9.9000000000000004, 0.0)\n    line12 = workPart.Curves.CreateLine(startPoint12, endPoint12)\n    \n    startPoint13 = NXOpen.Point3d(54.0, 9.9000000000000004, 0.0)\n    endPoint13 = NXOpen.Point3d(59.899999999999999, 9.9000000000000004, 0.0)\n    line13 = workPart.Curves.CreateLine(startPoint13, endPoint13)\n    \n    startPoint14 = NXOpen.Point3d(59.899999999999999, 9.9000000000000004, 0.0)\n    endPoint14 = NXOpen.Point3d(59.899999999999999, 4.0, 0.0)\n    line14 = workPart.Curves.CreateLine(startPoint14, endPoint14)\n    \n    theSession.ActiveSketch.AddGeometry(line11, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    theSession.ActiveSketch.AddGeometry(line12, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    theSession.ActiveSketch.AddGeometry(line13, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    theSession.ActiveSketch.AddGeometry(line14, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    geom1_14 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_14.Geometry = line11\n    geom1_14.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_14.SplineDefiningPointIndex = 0\n    geom2_14 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_14.Geometry = line12\n    geom2_14.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_14.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint26 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_14, geom2_14)\n    \n    geom1_15 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_15.Geometry = line12\n    geom1_15.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_15.SplineDefiningPointIndex = 0\n    geom2_15 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_15.Geometry = line13\n    geom2_15.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_15.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint27 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_15, geom2_15)\n    \n    geom1_16 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_16.Geometry = line13\n    geom1_16.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_16.SplineDefiningPointIndex = 0\n    geom2_16 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_16.Geometry = line14\n    geom2_16.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_16.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint28 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_16, geom2_16)\n    \n    geom1_17 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_17.Geometry = line14\n    geom1_17.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_17.SplineDefiningPointIndex = 0\n    geom2_17 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_17.Geometry = line11\n    geom2_17.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_17.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint29 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_17, geom2_17)\n    \n    geom9 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom9.Geometry = line11\n    geom9.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    geom9.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint30 = theSession.ActiveSketch.CreateHorizontalConstraint(geom9)\n    \n    conGeom1_9 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_9.Geometry = line11\n    conGeom1_9.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_9.SplineDefiningPointIndex = 0\n    conGeom2_9 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_9.Geometry = line12\n    conGeom2_9.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_9.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint31 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_9, conGeom2_9)\n    \n    conGeom1_10 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_10.Geometry = line12\n    conGeom1_10.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_10.SplineDefiningPointIndex = 0\n    conGeom2_10 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_10.Geometry = line13\n    conGeom2_10.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_10.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint32 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_10, conGeom2_10)\n    \n    conGeom1_11 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_11.Geometry = line13\n    conGeom1_11.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_11.SplineDefiningPointIndex = 0\n    conGeom2_11 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_11.Geometry = line14\n    conGeom2_11.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_11.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint33 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_11, conGeom2_11)\n    \n    conGeom1_12 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_12.Geometry = line14\n    conGeom1_12.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_12.SplineDefiningPointIndex = 0\n    conGeom2_12 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_12.Geometry = line11\n    conGeom2_12.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_12.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint34 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_12, conGeom2_12)\n    \n    dimObject1_5 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject1_5.Geometry = line11\n    dimObject1_5.AssocType = NXOpen.Sketch.AssocType.StartPoint\n    dimObject1_5.AssocValue = 0\n    dimObject1_5.HelpPoint.X = 0.0\n    dimObject1_5.HelpPoint.Y = 0.0\n    dimObject1_5.HelpPoint.Z = 0.0\n    dimObject1_5.View = NXOpen.NXObject.Null\n    dimObject2_5 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject2_5.Geometry = line11\n    dimObject2_5.AssocType = NXOpen.Sketch.AssocType.EndPoint\n    dimObject2_5.AssocValue = 0\n    dimObject2_5.HelpPoint.X = 0.0\n    dimObject2_5.HelpPoint.Y = 0.0\n    dimObject2_5.HelpPoint.Z = 0.0\n    dimObject2_5.View = NXOpen.NXObject.Null\n    dimOrigin5 = NXOpen.Point3d(56.950000000000003, 8.2997137042649918, 0.0)\n    sketchDimensionalConstraint5 = theSession.ActiveSketch.CreateDimension(NXOpen.Sketch.ConstraintType.ParallelDim, dimObject1_5, dimObject2_5, dimOrigin5, expression28, NXOpen.Sketch.DimensionOption.CreateAsDriving)\n    \n    sketchHelpedDimensionalConstraint5 = sketchDimensionalConstraint5\n    dimension5 = sketchHelpedDimensionalConstraint5.AssociatedDimension\n    \n    dimObject1_6 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject1_6.Geometry = line12\n    dimObject1_6.AssocType = NXOpen.Sketch.AssocType.StartPoint\n    dimObject1_6.AssocValue = 0\n    dimObject1_6.HelpPoint.X = 0.0\n    dimObject1_6.HelpPoint.Y = 0.0\n    dimObject1_6.HelpPoint.Z = 0.0\n    dimObject1_6.View = NXOpen.NXObject.Null\n    dimObject2_6 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject2_6.Geometry = line12\n    dimObject2_6.AssocType = NXOpen.Sketch.AssocType.EndPoint\n    dimObject2_6.AssocValue = 0\n    dimObject2_6.HelpPoint.X = 0.0\n    dimObject2_6.HelpPoint.Y = 0.0\n    dimObject2_6.HelpPoint.Z = 0.0\n    dimObject2_6.View = NXOpen.NXObject.Null\n    dimOrigin6 = NXOpen.Point3d(58.299713704264988, 6.9500000000000002, 0.0)\n    sketchDimensionalConstraint6 = theSession.ActiveSketch.CreateDimension(NXOpen.Sketch.ConstraintType.ParallelDim, dimObject1_6, dimObject2_6, dimOrigin6, expression29, NXOpen.Sketch.DimensionOption.CreateAsDriving)\n    \n    sketchHelpedDimensionalConstraint6 = sketchDimensionalConstraint6\n    dimension6 = sketchHelpedDimensionalConstraint6.AssociatedDimension\n    \n    theSession.Preferences.Sketch.AutoDimensionsToArcCenter = False\n    \n    theSession.ActiveSketch.Update()\n    \n    theSession.Preferences.Sketch.AutoDimensionsToArcCenter = True\n    \n    geoms5 = [NXOpen.SmartObject.Null] * 4 \n    geoms5[0] = line11\n    geoms5[1] = line12\n    geoms5[2] = line13\n    geoms5[3] = line14\n    theSession.ActiveSketch.UpdateConstraintDisplay(geoms5)\n    \n    geoms6 = [NXOpen.SmartObject.Null] * 4 \n    geoms6[0] = line11\n    geoms6[1] = line12\n    geoms6[2] = line13\n    geoms6[3] = line14\n    theSession.ActiveSketch.UpdateDimensionDisplay(geoms6)\n    \n    # ----------------------------------------------\n    #   Menu: File->Finish Sketch\n    # ----------------------------------------------\n    sketch10 = theSession.ActiveSketch\n    \n    markId46 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Deactivate Sketch")\n    \n    theSession.ActiveSketch.Deactivate(NXOpen.Sketch.ViewReorient.TrueValue, NXOpen.Sketch.UpdateLevel.Model)\n    \n    # ----------------------------------------------\n    #   Menu: Edit->Undo\n    # ----------------------------------------------\n    marksRecycled3, undoUnavailable3 = theSession.UndoLastNVisibleMarks(1)\n    \n    # ----------------------------------------------\n    #   Menu: Edit->Undo\n    # ----------------------------------------------\n    marksRecycled4, undoUnavailable4 = theSession.UndoLastNVisibleMarks(1)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch...\n    # ----------------------------------------------\n    markId47 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    sketchInPlaceBuilder6 = workPart.Sketches.CreateSketchInPlaceBuilder2(NXOpen.Sketch.Null)\n    \n    origin24 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal10 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane10 = workPart.Planes.CreatePlane(origin24, normal10, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    sketchInPlaceBuilder6.PlaneReference = plane10\n    \n    expression30 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    expression31 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    sketchAlongPathBuilder6 = workPart.Sketches.CreateSketchAlongPathBuilder(NXOpen.Sketch.Null)\n    \n    sketchAlongPathBuilder6.PlaneLocation.Expression.SetFormula("0")\n    \n    theSession.SetUndoMarkName(markId47, "Create Sketch Dialog")\n    \n    scalar5 = workPart.Scalars.CreateScalar(1.0, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    point6 = workPart.Points.CreatePoint(edge3, scalar5, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    direction5 = workPart.Directions.CreateDirection(edge4, NXOpen.Sense.Forward, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    xform3 = workPart.Xforms.CreateXformByPlaneXDirPoint(face1, direction5, point6, NXOpen.SmartObject.UpdateOption.WithinModeling, 0.625, False, False)\n    \n    cartesianCoordinateSystem3 = workPart.CoordinateSystems.CreateCoordinateSystem(xform3, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    sketchInPlaceBuilder6.Csystem = cartesianCoordinateSystem3\n    \n    origin25 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal11 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane11 = workPart.Planes.CreatePlane(origin25, normal11, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    plane11.SetMethod(NXOpen.PlaneTypes.MethodType.Coincident)\n    \n    geom10 = [NXOpen.NXObject.Null] * 1 \n    geom10[0] = face1\n    plane11.SetGeometry(geom10)\n    \n    plane11.SetFlip(False)\n    \n    plane11.SetExpression(None)\n    \n    plane11.SetAlternate(NXOpen.PlaneTypes.AlternateType.One)\n    \n    plane11.Evaluate()\n    \n    origin26 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal12 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane12 = workPart.Planes.CreatePlane(origin26, normal12, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    expression32 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    expression33 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    plane12.SynchronizeToPlane(plane11)\n    \n    scalar6 = workPart.Scalars.CreateScalar(100.0, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    point7 = workPart.Points.CreatePoint(edge3, scalar6, NXOpen.PointCollection.PointOnCurveLocationOption.PercentParameter, NXOpen.Point.Null, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    plane12.SetMethod(NXOpen.PlaneTypes.MethodType.Coincident)\n    \n    geom11 = [NXOpen.NXObject.Null] * 1 \n    geom11[0] = face1\n    plane12.SetGeometry(geom11)\n    \n    plane12.SetAlternate(NXOpen.PlaneTypes.AlternateType.One)\n    \n    plane12.Evaluate()\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Design Feature->Extrude...\n    # ----------------------------------------------\n    markId48 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.DeleteUndoMark(markId48, None)\n    \n    markId49 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.Preferences.Sketch.CreateInferredConstraints = True\n    \n    theSession.Preferences.Sketch.ContinuousAutoDimensioning = True\n    \n    theSession.Preferences.Sketch.DimensionLabel = NXOpen.Preferences.SketchPreferences.DimensionLabelType.Expression\n    \n    theSession.Preferences.Sketch.TextSizeFixed = True\n    \n    theSession.Preferences.Sketch.FixedTextSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayParenthesesOnReferenceDimensions = True\n    \n    theSession.Preferences.Sketch.DisplayReferenceGeometry = False\n    \n    theSession.Preferences.Sketch.ConstraintSymbolSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayObjectColor = False\n    \n    theSession.Preferences.Sketch.DisplayObjectName = True\n    \n    nXObject6 = sketchInPlaceBuilder6.Commit()\n    \n    sketch11 = nXObject6\n    feature8 = sketch11.Feature\n    \n    markId50 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "update")\n    \n    nErrs6 = theSession.UpdateManager.DoUpdate(markId50)\n    \n    sketch11.Activate(NXOpen.Sketch.ViewReorient.TrueValue)\n    \n    theSession.DeleteUndoMark(markId49, None)\n    \n    theSession.SetUndoMarkName(markId47, "Create Sketch")\n    \n    sketchInPlaceBuilder6.Destroy()\n    \n    sketchAlongPathBuilder6.Destroy()\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression31)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    workPart.Points.DeletePoint(point7)\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression30)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    plane10.DestroyPlane()\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression33)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression32)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    plane12.DestroyPlane()\n    \n    markId51 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    extrudeBuilder4 = workPart.Features.CreateExtrudeBuilder(NXOpen.Features.Feature.Null)\n    \n    section4 = workPart.Sections.CreateSection(0.0094999999999999998, 0.01, 0.5)\n    \n    extrudeBuilder4.Section = section4\n    \n    extrudeBuilder4.AllowSelfIntersectingSection(True)\n    \n    expression34 = workPart.Expressions.CreateSystemExpressionWithUnits("2.00", unit2)\n    \n    extrudeBuilder4.DistanceTolerance = 0.01\n    \n    extrudeBuilder4.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Create\n    \n    targetBodies10 = [NXOpen.Body.Null] * 1 \n    targetBodies10[0] = NXOpen.Body.Null\n    extrudeBuilder4.BooleanOperation.SetTargetBodies(targetBodies10)\n    \n    extrudeBuilder4.Limits.StartExtend.Value.SetFormula("0")\n    \n    extrudeBuilder4.Limits.EndExtend.Value.SetFormula("60")\n    \n    extrudeBuilder4.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Create\n    \n    targetBodies11 = [NXOpen.Body.Null] * 1 \n    targetBodies11[0] = NXOpen.Body.Null\n    extrudeBuilder4.BooleanOperation.SetTargetBodies(targetBodies11)\n    \n    extrudeBuilder4.Draft.FrontDraftAngle.SetFormula("2")\n    \n    extrudeBuilder4.Draft.BackDraftAngle.SetFormula("2")\n    \n    extrudeBuilder4.Offset.StartOffset.SetFormula("0")\n    \n    extrudeBuilder4.Offset.EndOffset.SetFormula("5")\n    \n    smartVolumeProfileBuilder4 = extrudeBuilder4.SmartVolumeProfile\n    \n    smartVolumeProfileBuilder4.OpenProfileSmartVolumeOption = False\n    \n    smartVolumeProfileBuilder4.CloseProfileRule = NXOpen.GeometricUtilities.SmartVolumeProfileBuilder.CloseProfileRuleType.Fci\n    \n    theSession.SetUndoMarkName(markId51, "Extrude Dialog")\n    \n    section4.DistanceTolerance = 0.01\n    \n    section4.ChainingTolerance = 0.0094999999999999998\n    \n    section4.SetAllowedEntityTypes(NXOpen.Section.AllowTypes.OnlyCurves)\n    \n    rotMatrix1 = NXOpen.Matrix3x3()\n    \n    rotMatrix1.Xx = 0.36570845715548572\n    rotMatrix1.Xy = 0.92931913545767675\n    rotMatrix1.Xz = 0.051217856623923474\n    rotMatrix1.Yx = -0.91931279896576301\n    rotMatrix1.Yy = 0.35208238848548951\n    rotMatrix1.Yz = 0.17578955991777909\n    rotMatrix1.Zx = 0.14533169655201808\n    rotMatrix1.Zy = -0.11137295987153856\n    rotMatrix1.Zz = 0.98309448263468724\n    translation1 = NXOpen.Point3d(-19.366235897067263, -31.67933606851139, -6.4880948864560999)\n    workPart.ModelingViews.WorkView.SetRotationTranslationScale(rotMatrix1, translation1, 0.85735940891677709)\n    \n    origin27 = NXOpen.Point3d(62.472926685552068, 60.774840920383411, 4.2493091513487311)\n    workPart.ModelingViews.WorkView.SetOrigin(origin27)\n    \n    origin28 = NXOpen.Point3d(62.472926685552068, 60.774840920383411, 4.2493091513487311)\n    workPart.ModelingViews.WorkView.SetOrigin(origin28)\n    \n    scaleAboutPoint12 = NXOpen.Point3d(-55.394164733478078, -18.516155342666767, 0.0)\n    viewCenter12 = NXOpen.Point3d(55.394164733478078, 18.516155342666767, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint12, viewCenter12)\n    \n    scaleAboutPoint13 = NXOpen.Point3d(-44.315331786782444, -14.812924274133415, 0.0)\n    viewCenter13 = NXOpen.Point3d(44.315331786782444, 14.812924274133415, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint13, viewCenter13)\n    \n    scaleAboutPoint14 = NXOpen.Point3d(-35.452265429425971, -11.850339419306732, 0.0)\n    viewCenter14 = NXOpen.Point3d(35.452265429425971, 11.850339419306732, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint14, viewCenter14)\n    \n    scaleAboutPoint15 = NXOpen.Point3d(-28.361812343540777, -9.4802715354453859, 0.0)\n    viewCenter15 = NXOpen.Point3d(28.361812343540763, 9.4802715354453859, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint15, viewCenter15)\n    \n    scaleAboutPoint16 = NXOpen.Point3d(-22.68944987483264, -7.5842172283563078, 0.0)\n    viewCenter16 = NXOpen.Point3d(22.689449874832597, 7.5842172283563078, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint16, viewCenter16)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch Curve->Rectangle...\n    # ----------------------------------------------\n    extrudeBuilder4.Destroy()\n    \n    section4.Destroy()\n    \n    workPart.Expressions.Delete(expression34)\n    \n    theSession.UndoToMark(markId51, None)\n    \n    theSession.DeleteUndoMark(markId51, None)\n    \n    markId52 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Profile short list")\n    \n    markId53 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Rectangle")\n    \n    expression35 = workPart.Expressions.CreateSystemExpression("5.9")\n    \n    expression36 = workPart.Expressions.CreateSystemExpression("5.9")\n    \n    theSession.SetUndoMarkVisibility(markId53, "Create Rectangle", NXOpen.Session.MarkVisibility.Visible)\n    \n    # ----------------------------------------------\n    # Creating rectangle using By 2 Points method \n    # ----------------------------------------------\n    startPoint15 = NXOpen.Point3d(59.899999999999999, 4.0, 5.0)\n    endPoint15 = NXOpen.Point3d(59.899999999999999, 9.9000000000000004, 5.0)\n    line15 = workPart.Curves.CreateLine(startPoint15, endPoint15)\n    \n    startPoint16 = NXOpen.Point3d(59.899999999999999, 9.9000000000000004, 5.0)\n    endPoint16 = NXOpen.Point3d(54.0, 9.9000000000000004, 5.0)\n    line16 = workPart.Curves.CreateLine(startPoint16, endPoint16)\n    \n    startPoint17 = NXOpen.Point3d(54.0, 9.9000000000000004, 5.0)\n    endPoint17 = NXOpen.Point3d(54.0, 4.0, 5.0)\n    line17 = workPart.Curves.CreateLine(startPoint17, endPoint17)\n    \n    startPoint18 = NXOpen.Point3d(54.0, 4.0, 5.0)\n    endPoint18 = NXOpen.Point3d(59.899999999999999, 4.0, 5.0)\n    line18 = workPart.Curves.CreateLine(startPoint18, endPoint18)\n    \n    theSession.ActiveSketch.AddGeometry(line15, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    theSession.ActiveSketch.AddGeometry(line16, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    theSession.ActiveSketch.AddGeometry(line17, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    theSession.ActiveSketch.AddGeometry(line18, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    geom1_18 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_18.Geometry = line15\n    geom1_18.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_18.SplineDefiningPointIndex = 0\n    geom2_18 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_18.Geometry = line16\n    geom2_18.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_18.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint35 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_18, geom2_18)\n    \n    geom1_19 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_19.Geometry = line16\n    geom1_19.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_19.SplineDefiningPointIndex = 0\n    geom2_19 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_19.Geometry = line17\n    geom2_19.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_19.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint36 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_19, geom2_19)\n    \n    geom1_20 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_20.Geometry = line17\n    geom1_20.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_20.SplineDefiningPointIndex = 0\n    geom2_20 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_20.Geometry = line18\n    geom2_20.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_20.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint37 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_20, geom2_20)\n    \n    geom1_21 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_21.Geometry = line18\n    geom1_21.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_21.SplineDefiningPointIndex = 0\n    geom2_21 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_21.Geometry = line15\n    geom2_21.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_21.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint38 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_21, geom2_21)\n    \n    geom12 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom12.Geometry = line15\n    geom12.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    geom12.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint39 = theSession.ActiveSketch.CreateHorizontalConstraint(geom12)\n    \n    conGeom1_13 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_13.Geometry = line15\n    conGeom1_13.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_13.SplineDefiningPointIndex = 0\n    conGeom2_13 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_13.Geometry = line16\n    conGeom2_13.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_13.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint40 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_13, conGeom2_13)\n    \n    conGeom1_14 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_14.Geometry = line16\n    conGeom1_14.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_14.SplineDefiningPointIndex = 0\n    conGeom2_14 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_14.Geometry = line17\n    conGeom2_14.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_14.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint41 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_14, conGeom2_14)\n    \n    conGeom1_15 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_15.Geometry = line17\n    conGeom1_15.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_15.SplineDefiningPointIndex = 0\n    conGeom2_15 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_15.Geometry = line18\n    conGeom2_15.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_15.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint42 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_15, conGeom2_15)\n    \n    conGeom1_16 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_16.Geometry = line18\n    conGeom1_16.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_16.SplineDefiningPointIndex = 0\n    conGeom2_16 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_16.Geometry = line15\n    conGeom2_16.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_16.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint43 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_16, conGeom2_16)\n    \n    dimObject1_7 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject1_7.Geometry = line15\n    dimObject1_7.AssocType = NXOpen.Sketch.AssocType.StartPoint\n    dimObject1_7.AssocValue = 0\n    dimObject1_7.HelpPoint.X = 0.0\n    dimObject1_7.HelpPoint.Y = 0.0\n    dimObject1_7.HelpPoint.Z = 0.0\n    dimObject1_7.View = NXOpen.NXObject.Null\n    dimObject2_7 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject2_7.Geometry = line15\n    dimObject2_7.AssocType = NXOpen.Sketch.AssocType.EndPoint\n    dimObject2_7.AssocValue = 0\n    dimObject2_7.HelpPoint.X = 0.0\n    dimObject2_7.HelpPoint.Y = 0.0\n    dimObject2_7.HelpPoint.Z = 0.0\n    dimObject2_7.View = NXOpen.NXObject.Null\n    dimOrigin7 = NXOpen.Point3d(63.339770963411993, 6.9500000000000002, 5.0)\n    sketchDimensionalConstraint7 = theSession.ActiveSketch.CreateDimension(NXOpen.Sketch.ConstraintType.ParallelDim, dimObject1_7, dimObject2_7, dimOrigin7, expression35, NXOpen.Sketch.DimensionOption.CreateAsDriving)\n    \n    sketchHelpedDimensionalConstraint7 = sketchDimensionalConstraint7\n    dimension7 = sketchHelpedDimensionalConstraint7.AssociatedDimension\n    \n    dimObject1_8 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject1_8.Geometry = line16\n    dimObject1_8.AssocType = NXOpen.Sketch.AssocType.StartPoint\n    dimObject1_8.AssocValue = 0\n    dimObject1_8.HelpPoint.X = 0.0\n    dimObject1_8.HelpPoint.Y = 0.0\n    dimObject1_8.HelpPoint.Z = 0.0\n    dimObject1_8.View = NXOpen.NXObject.Null\n    dimObject2_8 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject2_8.Geometry = line16\n    dimObject2_8.AssocType = NXOpen.Sketch.AssocType.EndPoint\n    dimObject2_8.AssocValue = 0\n    dimObject2_8.HelpPoint.X = 0.0\n    dimObject2_8.HelpPoint.Y = 0.0\n    dimObject2_8.HelpPoint.Z = 0.0\n    dimObject2_8.View = NXOpen.NXObject.Null\n    dimOrigin8 = NXOpen.Point3d(56.950000000000003, 13.339770963411995, 5.0)\n    sketchDimensionalConstraint8 = theSession.ActiveSketch.CreateDimension(NXOpen.Sketch.ConstraintType.ParallelDim, dimObject1_8, dimObject2_8, dimOrigin8, expression36, NXOpen.Sketch.DimensionOption.CreateAsDriving)\n    \n    sketchHelpedDimensionalConstraint8 = sketchDimensionalConstraint8\n    dimension8 = sketchHelpedDimensionalConstraint8.AssociatedDimension\n    \n    theSession.Preferences.Sketch.AutoDimensionsToArcCenter = False\n    \n    theSession.ActiveSketch.Update()\n    \n    theSession.Preferences.Sketch.AutoDimensionsToArcCenter = True\n    \n    geoms7 = [NXOpen.SmartObject.Null] * 4 \n    geoms7[0] = line15\n    geoms7[1] = line16\n    geoms7[2] = line17\n    geoms7[3] = line18\n    theSession.ActiveSketch.UpdateConstraintDisplay(geoms7)\n    \n    geoms8 = [NXOpen.SmartObject.Null] * 4 \n    geoms8[0] = line15\n    geoms8[1] = line16\n    geoms8[2] = line17\n    geoms8[3] = line18\n    theSession.ActiveSketch.UpdateDimensionDisplay(geoms8)\n    \n    scaleAboutPoint17 = NXOpen.Point3d(-14.106644044742735, 6.7752340573316099, 0.0)\n    viewCenter17 = NXOpen.Point3d(14.106644044742735, -6.7752340573316436, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(0.80000000000000004, scaleAboutPoint17, viewCenter17)\n    \n    scaleAboutPoint18 = NXOpen.Point3d(-17.633305055928439, 8.469042571664513, 0.0)\n    viewCenter18 = NXOpen.Point3d(17.633305055928396, -8.4690425716645539, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(0.80000000000000004, scaleAboutPoint18, viewCenter18)\n    \n    # ----------------------------------------------\n    #   Menu: File->Finish Sketch\n    # ----------------------------------------------\n    sketch12 = theSession.ActiveSketch\n    \n    markId54 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Deactivate Sketch")\n    \n    theSession.ActiveSketch.Deactivate(NXOpen.Sketch.ViewReorient.TrueValue, NXOpen.Sketch.UpdateLevel.Model)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Design Feature->Extrude...\n    # ----------------------------------------------\n    markId55 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    extrudeBuilder5 = workPart.Features.CreateExtrudeBuilder(NXOpen.Features.Feature.Null)\n    \n    section5 = workPart.Sections.CreateSection(0.0094999999999999998, 0.01, 0.5)\n    \n    extrudeBuilder5.Section = section5\n    \n    extrudeBuilder5.AllowSelfIntersectingSection(True)\n    \n    expression37 = workPart.Expressions.CreateSystemExpressionWithUnits("2.00", unit2)\n    \n    extrudeBuilder5.DistanceTolerance = 0.01\n    \n    extrudeBuilder5.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Create\n    \n    targetBodies12 = [NXOpen.Body.Null] * 1 \n    targetBodies12[0] = NXOpen.Body.Null\n    extrudeBuilder5.BooleanOperation.SetTargetBodies(targetBodies12)\n    \n    extrudeBuilder5.Limits.StartExtend.Value.SetFormula("0")\n    \n    extrudeBuilder5.Limits.EndExtend.Value.SetFormula("60")\n    \n    extrudeBuilder5.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Create\n    \n    targetBodies13 = [NXOpen.Body.Null] * 1 \n    targetBodies13[0] = NXOpen.Body.Null\n    extrudeBuilder5.BooleanOperation.SetTargetBodies(targetBodies13)\n    \n    extrudeBuilder5.Draft.FrontDraftAngle.SetFormula("2")\n    \n    extrudeBuilder5.Draft.BackDraftAngle.SetFormula("2")\n    \n    extrudeBuilder5.Offset.StartOffset.SetFormula("0")\n    \n    extrudeBuilder5.Offset.EndOffset.SetFormula("5")\n    \n    smartVolumeProfileBuilder5 = extrudeBuilder5.SmartVolumeProfile\n    \n    smartVolumeProfileBuilder5.OpenProfileSmartVolumeOption = False\n    \n    smartVolumeProfileBuilder5.CloseProfileRule = NXOpen.GeometricUtilities.SmartVolumeProfileBuilder.CloseProfileRuleType.Fci\n    \n    theSession.SetUndoMarkName(markId55, "Extrude Dialog")\n    \n    section5.DistanceTolerance = 0.01\n    \n    section5.ChainingTolerance = 0.0094999999999999998\n    \n    section5.SetAllowedEntityTypes(NXOpen.Section.AllowTypes.OnlyCurves)\n    \n    markId56 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "section mark")\n    \n    markId57 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, None)\n    \n    features3 = [NXOpen.Features.Feature.Null] * 1 \n    sketchFeature3 = feature8\n    features3[0] = sketchFeature3\n    curveFeatureRule3 = workPart.ScRuleFactory.CreateRuleCurveFeature(features3)\n    \n    section5.AllowSelfIntersection(True)\n    \n    rules3 = [None] * 1 \n    rules3[0] = curveFeatureRule3\n    helpPoint3 = NXOpen.Point3d(54.000000000000007, 6.024710984040329, 5.0000000000000018)\n    section5.AddToSection(rules3, line17, NXOpen.NXObject.Null, NXOpen.NXObject.Null, helpPoint3, NXOpen.Section.Mode.Create, False)\n    \n    theSession.DeleteUndoMark(markId57, None)\n    \n    direction6 = workPart.Directions.CreateDirection(sketch12, NXOpen.Sense.Forward, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    extrudeBuilder5.Direction = direction6\n    \n    targetBodies14 = [NXOpen.Body.Null] * 1 \n    targetBodies14[0] = body1\n    extrudeBuilder5.BooleanOperation.SetTargetBodies(targetBodies14)\n    \n    extrudeBuilder5.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Unite\n    \n    targetBodies15 = [NXOpen.Body.Null] * 1 \n    targetBodies15[0] = body1\n    extrudeBuilder5.BooleanOperation.SetTargetBodies(targetBodies15)\n    \n    expression38 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    theSession.DeleteUndoMark(markId56, None)\n    \n    extrudeBuilder5.Limits.EndExtend.Value.SetFormula("20")\n    \n    extrudeBuilder5.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Unite\n    \n    targetBodies16 = [NXOpen.Body.Null] * 1 \n    targetBodies16[0] = body1\n    extrudeBuilder5.BooleanOperation.SetTargetBodies(targetBodies16)\n    \n    markId58 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Extrude")\n    \n    theSession.DeleteUndoMark(markId58, None)\n    \n    markId59 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Extrude")\n    \n    extrudeBuilder5.ParentFeatureInternal = False\n    \n    feature9 = extrudeBuilder5.CommitFeature()\n    \n    theSession.DeleteUndoMark(markId59, None)\n    \n    theSession.SetUndoMarkName(markId55, "Extrude")\n    \n    expression39 = extrudeBuilder5.Limits.StartExtend.Value\n    expression40 = extrudeBuilder5.Limits.EndExtend.Value\n    extrudeBuilder5.Destroy()\n    \n    workPart.Expressions.Delete(expression37)\n    \n    workPart.Expressions.Delete(expression38)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch...\n    # ----------------------------------------------\n    markId60 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    sketchInPlaceBuilder7 = workPart.Sketches.CreateSketchInPlaceBuilder2(NXOpen.Sketch.Null)\n    \n    origin29 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal13 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane13 = workPart.Planes.CreatePlane(origin29, normal13, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    sketchInPlaceBuilder7.PlaneReference = plane13\n    \n    expression41 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    expression42 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    sketchAlongPathBuilder7 = workPart.Sketches.CreateSketchAlongPathBuilder(NXOpen.Sketch.Null)\n    \n    sketchAlongPathBuilder7.PlaneLocation.Expression.SetFormula("0")\n    \n    theSession.SetUndoMarkName(markId60, "Create Sketch Dialog")\n    \n    scalar7 = workPart.Scalars.CreateScalar(1.0, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    point8 = workPart.Points.CreatePoint(edge3, scalar7, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    edge5 = extrude1.FindObject("EDGE * 130 EXTRUDE(7) 140 {(54,4,5)(54,6.95,5)(54,9.9,5) EXTRUDE(2)}")\n    direction7 = workPart.Directions.CreateDirection(edge5, NXOpen.Sense.Forward, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    xform4 = workPart.Xforms.CreateXformByPlaneXDirPoint(face1, direction7, point8, NXOpen.SmartObject.UpdateOption.WithinModeling, 0.625, False, False)\n    \n    cartesianCoordinateSystem4 = workPart.CoordinateSystems.CreateCoordinateSystem(xform4, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    sketchInPlaceBuilder7.Csystem = cartesianCoordinateSystem4\n    \n    origin30 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal14 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane14 = workPart.Planes.CreatePlane(origin30, normal14, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    plane14.SetMethod(NXOpen.PlaneTypes.MethodType.Coincident)\n    \n    geom13 = [NXOpen.NXObject.Null] * 1 \n    geom13[0] = face1\n    plane14.SetGeometry(geom13)\n    \n    plane14.SetFlip(False)\n    \n    plane14.SetExpression(None)\n    \n    plane14.SetAlternate(NXOpen.PlaneTypes.AlternateType.One)\n    \n    plane14.Evaluate()\n    \n    origin31 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal15 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane15 = workPart.Planes.CreatePlane(origin31, normal15, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    expression43 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    expression44 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    plane15.SynchronizeToPlane(plane14)\n    \n    scalar8 = workPart.Scalars.CreateScalar(100.0, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    point9 = workPart.Points.CreatePoint(edge3, scalar8, NXOpen.PointCollection.PointOnCurveLocationOption.PercentParameter, NXOpen.Point.Null, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    plane15.SetMethod(NXOpen.PlaneTypes.MethodType.Coincident)\n    \n    geom14 = [NXOpen.NXObject.Null] * 1 \n    geom14[0] = face1\n    plane15.SetGeometry(geom14)\n    \n    plane15.SetAlternate(NXOpen.PlaneTypes.AlternateType.One)\n    \n    plane15.Evaluate()\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch Curve->Rectangle...\n    # ----------------------------------------------\n    markId61 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.DeleteUndoMark(markId61, None)\n    \n    markId62 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.Preferences.Sketch.CreateInferredConstraints = True\n    \n    theSession.Preferences.Sketch.ContinuousAutoDimensioning = True\n    \n    theSession.Preferences.Sketch.DimensionLabel = NXOpen.Preferences.SketchPreferences.DimensionLabelType.Expression\n    \n    theSession.Preferences.Sketch.TextSizeFixed = True\n    \n    theSession.Preferences.Sketch.FixedTextSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayParenthesesOnReferenceDimensions = True\n    \n    theSession.Preferences.Sketch.DisplayReferenceGeometry = False\n    \n    theSession.Preferences.Sketch.ConstraintSymbolSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayObjectColor = False\n    \n    theSession.Preferences.Sketch.DisplayObjectName = True\n    \n    nXObject7 = sketchInPlaceBuilder7.Commit()\n    \n    sketch13 = nXObject7\n    feature10 = sketch13.Feature\n    \n    markId63 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "update")\n    \n    nErrs7 = theSession.UpdateManager.DoUpdate(markId63)\n    \n    sketch13.Activate(NXOpen.Sketch.ViewReorient.TrueValue)\n    \n    theSession.DeleteUndoMark(markId62, None)\n    \n    theSession.SetUndoMarkName(markId60, "Create Sketch")\n    \n    sketchInPlaceBuilder7.Destroy()\n    \n    sketchAlongPathBuilder7.Destroy()\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression42)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    workPart.Points.DeletePoint(point9)\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression41)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    plane13.DestroyPlane()\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression44)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression43)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    plane15.DestroyPlane()\n    \n    markId64 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Profile short list")\n    \n    origin32 = NXOpen.Point3d(82.088288685822832, 77.150647261111487, 5.0)\n    workPart.ModelingViews.WorkView.SetOrigin(origin32)\n    \n    origin33 = NXOpen.Point3d(82.088288685822832, 77.150647261111487, 5.0)\n    workPart.ModelingViews.WorkView.SetOrigin(origin33)\n    \n    scaleAboutPoint19 = NXOpen.Point3d(-13.424212623433418, -30.860258904444613, 0.0)\n    viewCenter19 = NXOpen.Point3d(13.424212623433418, 30.860258904444613, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint19, viewCenter19)\n    \n    scaleAboutPoint20 = NXOpen.Point3d(-10.739370098746715, -25.181971266026743, 0.0)\n    viewCenter20 = NXOpen.Point3d(10.739370098746715, 25.181971266026743, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint20, viewCenter20)\n    \n    scaleAboutPoint21 = NXOpen.Point3d(-8.5914960789973875, -20.145577012821391, 0.0)\n    viewCenter21 = NXOpen.Point3d(8.5914960789973875, 20.145577012821391, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint21, viewCenter21)\n    \n    scaleAboutPoint22 = NXOpen.Point3d(-7.821224016742427, -12.482357521669778, 0.0)\n    viewCenter22 = NXOpen.Point3d(7.821224016742427, 12.482357521669778, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint22, viewCenter22)\n    \n    scaleAboutPoint23 = NXOpen.Point3d(-8.153033520483028, 29.452043570116981, 0.0)\n    viewCenter23 = NXOpen.Point3d(8.153033520483028, -29.452043570117024, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(0.80000000000000004, scaleAboutPoint23, viewCenter23)\n    \n    markId65 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Rectangle")\n    \n    expression45 = workPart.Expressions.CreateSystemExpression("5.9")\n    \n    expression46 = workPart.Expressions.CreateSystemExpression("5.9")\n    \n    theSession.SetUndoMarkVisibility(markId65, "Create Rectangle", NXOpen.Session.MarkVisibility.Visible)\n    \n    # ----------------------------------------------\n    # Creating rectangle using By 2 Points method \n    # ----------------------------------------------\n    startPoint19 = NXOpen.Point3d(116.0, 60.0, 5.0)\n    endPoint19 = NXOpen.Point3d(116.0, 65.900000000000006, 5.0)\n    line19 = workPart.Curves.CreateLine(startPoint19, endPoint19)\n    \n    startPoint20 = NXOpen.Point3d(116.0, 65.900000000000006, 5.0)\n    endPoint20 = NXOpen.Point3d(110.09999999999999, 65.900000000000006, 5.0)\n    line20 = workPart.Curves.CreateLine(startPoint20, endPoint20)\n    \n    startPoint21 = NXOpen.Point3d(110.09999999999999, 65.900000000000006, 5.0)\n    endPoint21 = NXOpen.Point3d(110.09999999999999, 60.0, 5.0)\n    line21 = workPart.Curves.CreateLine(startPoint21, endPoint21)\n    \n    startPoint22 = NXOpen.Point3d(110.09999999999999, 60.0, 5.0)\n    endPoint22 = NXOpen.Point3d(116.0, 60.0, 5.0)\n    line22 = workPart.Curves.CreateLine(startPoint22, endPoint22)\n    \n    theSession.ActiveSketch.AddGeometry(line19, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    theSession.ActiveSketch.AddGeometry(line20, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    theSession.ActiveSketch.AddGeometry(line21, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    theSession.ActiveSketch.AddGeometry(line22, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    geom1_22 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_22.Geometry = line19\n    geom1_22.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_22.SplineDefiningPointIndex = 0\n    geom2_22 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_22.Geometry = line20\n    geom2_22.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_22.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint44 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_22, geom2_22)\n    \n    geom1_23 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_23.Geometry = line20\n    geom1_23.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_23.SplineDefiningPointIndex = 0\n    geom2_23 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_23.Geometry = line21\n    geom2_23.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_23.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint45 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_23, geom2_23)\n    \n    geom1_24 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_24.Geometry = line21\n    geom1_24.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_24.SplineDefiningPointIndex = 0\n    geom2_24 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_24.Geometry = line22\n    geom2_24.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_24.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint46 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_24, geom2_24)\n    \n    geom1_25 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_25.Geometry = line22\n    geom1_25.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_25.SplineDefiningPointIndex = 0\n    geom2_25 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_25.Geometry = line19\n    geom2_25.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_25.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint47 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_25, geom2_25)\n    \n    geom15 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom15.Geometry = line19\n    geom15.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    geom15.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint48 = theSession.ActiveSketch.CreateHorizontalConstraint(geom15)\n    \n    conGeom1_17 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_17.Geometry = line19\n    conGeom1_17.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_17.SplineDefiningPointIndex = 0\n    conGeom2_17 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_17.Geometry = line20\n    conGeom2_17.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_17.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint49 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_17, conGeom2_17)\n    \n    conGeom1_18 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_18.Geometry = line20\n    conGeom1_18.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_18.SplineDefiningPointIndex = 0\n    conGeom2_18 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_18.Geometry = line21\n    conGeom2_18.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_18.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint50 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_18, conGeom2_18)\n    \n    conGeom1_19 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_19.Geometry = line21\n    conGeom1_19.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_19.SplineDefiningPointIndex = 0\n    conGeom2_19 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_19.Geometry = line22\n    conGeom2_19.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_19.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint51 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_19, conGeom2_19)\n    \n    conGeom1_20 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_20.Geometry = line22\n    conGeom1_20.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_20.SplineDefiningPointIndex = 0\n    conGeom2_20 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_20.Geometry = line19\n    conGeom2_20.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_20.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint52 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_20, conGeom2_20)\n    \n    dimObject1_9 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject1_9.Geometry = line19\n    dimObject1_9.AssocType = NXOpen.Sketch.AssocType.StartPoint\n    dimObject1_9.AssocValue = 0\n    dimObject1_9.HelpPoint.X = 0.0\n    dimObject1_9.HelpPoint.Y = 0.0\n    dimObject1_9.HelpPoint.Z = 0.0\n    dimObject1_9.View = NXOpen.NXObject.Null\n    dimObject2_9 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject2_9.Geometry = line19\n    dimObject2_9.AssocType = NXOpen.Sketch.AssocType.EndPoint\n    dimObject2_9.AssocValue = 0\n    dimObject2_9.HelpPoint.X = 0.0\n    dimObject2_9.HelpPoint.Y = 0.0\n    dimObject2_9.HelpPoint.Z = 0.0\n    dimObject2_9.View = NXOpen.NXObject.Null\n    dimOrigin9 = NXOpen.Point3d(121.37464213033124, 62.950000000000003, 5.0)\n    sketchDimensionalConstraint9 = theSession.ActiveSketch.CreateDimension(NXOpen.Sketch.ConstraintType.ParallelDim, dimObject1_9, dimObject2_9, dimOrigin9, expression45, NXOpen.Sketch.DimensionOption.CreateAsDriving)\n    \n    sketchHelpedDimensionalConstraint9 = sketchDimensionalConstraint9\n    dimension9 = sketchHelpedDimensionalConstraint9.AssociatedDimension\n    \n    dimObject1_10 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject1_10.Geometry = line20\n    dimObject1_10.AssocType = NXOpen.Sketch.AssocType.StartPoint\n    dimObject1_10.AssocValue = 0\n    dimObject1_10.HelpPoint.X = 0.0\n    dimObject1_10.HelpPoint.Y = 0.0\n    dimObject1_10.HelpPoint.Z = 0.0\n    dimObject1_10.View = NXOpen.NXObject.Null\n    dimObject2_10 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject2_10.Geometry = line20\n    dimObject2_10.AssocType = NXOpen.Sketch.AssocType.EndPoint\n    dimObject2_10.AssocValue = 0\n    dimObject2_10.HelpPoint.X = 0.0\n    dimObject2_10.HelpPoint.Y = 0.0\n    dimObject2_10.HelpPoint.Z = 0.0\n    dimObject2_10.View = NXOpen.NXObject.Null\n    dimOrigin10 = NXOpen.Point3d(113.05, 71.274642130331245, 5.0)\n    sketchDimensionalConstraint10 = theSession.ActiveSketch.CreateDimension(NXOpen.Sketch.ConstraintType.ParallelDim, dimObject1_10, dimObject2_10, dimOrigin10, expression46, NXOpen.Sketch.DimensionOption.CreateAsDriving)\n    \n    sketchHelpedDimensionalConstraint10 = sketchDimensionalConstraint10\n    dimension10 = sketchHelpedDimensionalConstraint10.AssociatedDimension\n    \n    theSession.Preferences.Sketch.AutoDimensionsToArcCenter = False\n    \n    theSession.ActiveSketch.Update()\n    \n    theSession.Preferences.Sketch.AutoDimensionsToArcCenter = True\n    \n    geoms9 = [NXOpen.SmartObject.Null] * 4 \n    geoms9[0] = line19\n    geoms9[1] = line20\n    geoms9[2] = line21\n    geoms9[3] = line22\n    theSession.ActiveSketch.UpdateConstraintDisplay(geoms9)\n    \n    geoms10 = [NXOpen.SmartObject.Null] * 4 \n    geoms10[0] = line19\n    geoms10[1] = line20\n    geoms10[2] = line21\n    geoms10[3] = line22\n    theSession.ActiveSketch.UpdateDimensionDisplay(geoms10)\n    \n    # ----------------------------------------------\n    #   Menu: File->Finish Sketch\n    # ----------------------------------------------\n    sketch14 = theSession.ActiveSketch\n    \n    markId66 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Deactivate Sketch")\n    \n    theSession.ActiveSketch.Deactivate(NXOpen.Sketch.ViewReorient.TrueValue, NXOpen.Sketch.UpdateLevel.Model)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Design Feature->Extrude...\n    # ----------------------------------------------\n    markId67 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    extrudeBuilder6 = workPart.Features.CreateExtrudeBuilder(NXOpen.Features.Feature.Null)\n    \n    section6 = workPart.Sections.CreateSection(0.0094999999999999998, 0.01, 0.5)\n    \n    extrudeBuilder6.Section = section6\n    \n    extrudeBuilder6.AllowSelfIntersectingSection(True)\n    \n    expression47 = workPart.Expressions.CreateSystemExpressionWithUnits("2.00", unit2)\n    \n    extrudeBuilder6.DistanceTolerance = 0.01\n    \n    extrudeBuilder6.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Create\n    \n    targetBodies17 = [NXOpen.Body.Null] * 1 \n    targetBodies17[0] = NXOpen.Body.Null\n    extrudeBuilder6.BooleanOperation.SetTargetBodies(targetBodies17)\n    \n    extrudeBuilder6.Limits.StartExtend.Value.SetFormula("0")\n    \n    extrudeBuilder6.Limits.EndExtend.Value.SetFormula("20")\n    \n    extrudeBuilder6.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Create\n    \n    targetBodies18 = [NXOpen.Body.Null] * 1 \n    targetBodies18[0] = NXOpen.Body.Null\n    extrudeBuilder6.BooleanOperation.SetTargetBodies(targetBodies18)\n    \n    extrudeBuilder6.Draft.FrontDraftAngle.SetFormula("2")\n    \n    extrudeBuilder6.Draft.BackDraftAngle.SetFormula("2")\n    \n    extrudeBuilder6.Offset.StartOffset.SetFormula("0")\n    \n    extrudeBuilder6.Offset.EndOffset.SetFormula("5")\n    \n    smartVolumeProfileBuilder6 = extrudeBuilder6.SmartVolumeProfile\n    \n    smartVolumeProfileBuilder6.OpenProfileSmartVolumeOption = False\n    \n    smartVolumeProfileBuilder6.CloseProfileRule = NXOpen.GeometricUtilities.SmartVolumeProfileBuilder.CloseProfileRuleType.Fci\n    \n    theSession.SetUndoMarkName(markId67, "Extrude Dialog")\n    \n    section6.DistanceTolerance = 0.01\n    \n    section6.ChainingTolerance = 0.0094999999999999998\n    \n    section6.SetAllowedEntityTypes(NXOpen.Section.AllowTypes.OnlyCurves)\n    \n    markId68 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "section mark")\n    \n    markId69 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, None)\n    \n    features4 = [NXOpen.Features.Feature.Null] * 1 \n    sketchFeature4 = feature10\n    features4[0] = sketchFeature4\n    curveFeatureRule4 = workPart.ScRuleFactory.CreateRuleCurveFeature(features4)\n    \n    section6.AllowSelfIntersection(True)\n    \n    rules4 = [None] * 1 \n    rules4[0] = curveFeatureRule4\n    helpPoint4 = NXOpen.Point3d(112.27656098876895, 65.900000000000006, 5.0000000000000018)\n    section6.AddToSection(rules4, line20, NXOpen.NXObject.Null, NXOpen.NXObject.Null, helpPoint4, NXOpen.Section.Mode.Create, False)\n    \n    theSession.DeleteUndoMark(markId69, None)\n    \n    direction8 = workPart.Directions.CreateDirection(sketch14, NXOpen.Sense.Forward, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    extrudeBuilder6.Direction = direction8\n    \n    targetBodies19 = [NXOpen.Body.Null] * 1 \n    targetBodies19[0] = body1\n    extrudeBuilder6.BooleanOperation.SetTargetBodies(targetBodies19)\n    \n    extrudeBuilder6.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Unite\n    \n    targetBodies20 = [NXOpen.Body.Null] * 1 \n    targetBodies20[0] = body1\n    extrudeBuilder6.BooleanOperation.SetTargetBodies(targetBodies20)\n    \n    expression48 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    theSession.DeleteUndoMark(markId68, None)\n    \n    markId70 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Extrude")\n    \n    theSession.DeleteUndoMark(markId70, None)\n    \n    markId71 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Extrude")\n    \n    extrudeBuilder6.ParentFeatureInternal = False\n    \n    feature11 = extrudeBuilder6.CommitFeature()\n    \n    theSession.DeleteUndoMark(markId71, None)\n    \n    theSession.SetUndoMarkName(markId67, "Extrude")\n    \n    expression49 = extrudeBuilder6.Limits.StartExtend.Value\n    expression50 = extrudeBuilder6.Limits.EndExtend.Value\n    extrudeBuilder6.Destroy()\n    \n    workPart.Expressions.Delete(expression47)\n    \n    workPart.Expressions.Delete(expression48)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch...\n    # ----------------------------------------------\n    markId72 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    sketchInPlaceBuilder8 = workPart.Sketches.CreateSketchInPlaceBuilder2(NXOpen.Sketch.Null)\n    \n    origin34 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal16 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane16 = workPart.Planes.CreatePlane(origin34, normal16, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    sketchInPlaceBuilder8.PlaneReference = plane16\n    \n    expression51 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    expression52 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    sketchAlongPathBuilder8 = workPart.Sketches.CreateSketchAlongPathBuilder(NXOpen.Sketch.Null)\n    \n    sketchAlongPathBuilder8.PlaneLocation.Expression.SetFormula("0")\n    \n    theSession.SetUndoMarkName(markId72, "Create Sketch Dialog")\n    \n    scaleAboutPoint24 = NXOpen.Point3d(-29.162944664700156, 48.759209069022468, 0.0)\n    viewCenter24 = NXOpen.Point3d(29.162944664700156, -48.759209069022575, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint24, viewCenter24)\n    \n    scaleAboutPoint25 = NXOpen.Point3d(-22.589709518053429, 39.007367255217979, 0.0)\n    viewCenter25 = NXOpen.Point3d(22.589709518053471, -39.007367255218057, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint25, viewCenter25)\n    \n    scaleAboutPoint26 = NXOpen.Point3d(-17.479250643477407, 31.205893804174387, 0.0)\n    viewCenter26 = NXOpen.Point3d(17.479250643477471, -31.205893804174451, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint26, viewCenter26)\n    \n    scaleAboutPoint27 = NXOpen.Point3d(-13.66739146360039, 24.96471504333951, 0.0)\n    viewCenter27 = NXOpen.Point3d(13.667391463600454, -24.964715043339563, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint27, viewCenter27)\n    \n    scaleAboutPoint28 = NXOpen.Point3d(-10.93391317088032, 19.971772034671606, 0.0)\n    viewCenter28 = NXOpen.Point3d(10.933913170880382, -19.971772034671645, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint28, viewCenter28)\n    \n    scalar9 = workPart.Scalars.CreateScalar(0.0, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    extrude2 = feature6\n    edge6 = extrude2.FindObject("EDGE * 160 * 170 {(59.9,65.9,65)(59.9,65.9,35)(59.9,65.9,5) EXTRUDE(2)}")\n    point10 = workPart.Points.CreatePoint(edge6, scalar9, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    edge7 = extrude1.FindObject("EDGE * 130 EXTRUDE(5) 170 {(59.9,65.9,5)(59.9,62.95,5)(59.9,60,5) EXTRUDE(2)}")\n    direction9 = workPart.Directions.CreateDirection(edge7, NXOpen.Sense.Reverse, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    face2 = extrude2.FindObject("FACE 170 {(59.9,62.95,35) EXTRUDE(2)}")\n    xform5 = workPart.Xforms.CreateXformByPlaneXDirPoint(face2, direction9, point10, NXOpen.SmartObject.UpdateOption.WithinModeling, 0.625, False, False)\n    \n    cartesianCoordinateSystem5 = workPart.CoordinateSystems.CreateCoordinateSystem(xform5, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    sketchInPlaceBuilder8.Csystem = cartesianCoordinateSystem5\n    \n    origin35 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal17 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane17 = workPart.Planes.CreatePlane(origin35, normal17, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    plane17.SetMethod(NXOpen.PlaneTypes.MethodType.Coincident)\n    \n    geom16 = [NXOpen.NXObject.Null] * 1 \n    geom16[0] = face2\n    plane17.SetGeometry(geom16)\n    \n    plane17.SetFlip(False)\n    \n    plane17.SetExpression(None)\n    \n    plane17.SetAlternate(NXOpen.PlaneTypes.AlternateType.One)\n    \n    plane17.Evaluate()\n    \n    origin36 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal18 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane18 = workPart.Planes.CreatePlane(origin36, normal18, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    expression53 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    expression54 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    plane18.SynchronizeToPlane(plane17)\n    \n    scalar10 = workPart.Scalars.CreateScalar(0.0, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    point11 = workPart.Points.CreatePoint(edge6, scalar10, NXOpen.PointCollection.PointOnCurveLocationOption.PercentParameter, NXOpen.Point.Null, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    plane18.SetMethod(NXOpen.PlaneTypes.MethodType.Coincident)\n    \n    geom17 = [NXOpen.NXObject.Null] * 1 \n    geom17[0] = face2\n    plane18.SetGeometry(geom17)\n    \n    plane18.SetAlternate(NXOpen.PlaneTypes.AlternateType.One)\n    \n    plane18.Evaluate()\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Design Feature->Extrude...\n    # ----------------------------------------------\n    markId73 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.DeleteUndoMark(markId73, None)\n    \n    markId74 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.Preferences.Sketch.CreateInferredConstraints = True\n    \n    theSession.Preferences.Sketch.ContinuousAutoDimensioning = True\n    \n    theSession.Preferences.Sketch.DimensionLabel = NXOpen.Preferences.SketchPreferences.DimensionLabelType.Expression\n    \n    theSession.Preferences.Sketch.TextSizeFixed = True\n    \n    theSession.Preferences.Sketch.FixedTextSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayParenthesesOnReferenceDimensions = True\n    \n    theSession.Preferences.Sketch.DisplayReferenceGeometry = False\n    \n    theSession.Preferences.Sketch.ConstraintSymbolSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayObjectColor = False\n    \n    theSession.Preferences.Sketch.DisplayObjectName = True\n    \n    nXObject8 = sketchInPlaceBuilder8.Commit()\n    \n    sketch15 = nXObject8\n    feature12 = sketch15.Feature\n    \n    markId75 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "update")\n    \n    nErrs8 = theSession.UpdateManager.DoUpdate(markId75)\n    \n    sketch15.Activate(NXOpen.Sketch.ViewReorient.TrueValue)\n    \n    theSession.DeleteUndoMark(markId74, None)\n    \n    theSession.SetUndoMarkName(markId72, "Create Sketch")\n    \n    sketchInPlaceBuilder8.Destroy()\n    \n    sketchAlongPathBuilder8.Destroy()\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression52)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    workPart.Points.DeletePoint(point11)\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression51)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    plane16.DestroyPlane()\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression54)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression53)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    plane18.DestroyPlane()\n    \n    markId76 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    extrudeBuilder7 = workPart.Features.CreateExtrudeBuilder(NXOpen.Features.Feature.Null)\n    \n    section7 = workPart.Sections.CreateSection(0.0094999999999999998, 0.01, 0.5)\n    \n    extrudeBuilder7.Section = section7\n    \n    extrudeBuilder7.AllowSelfIntersectingSection(True)\n    \n    expression55 = workPart.Expressions.CreateSystemExpressionWithUnits("2.00", unit2)\n    \n    extrudeBuilder7.DistanceTolerance = 0.01\n    \n    extrudeBuilder7.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Create\n    \n    targetBodies21 = [NXOpen.Body.Null] * 1 \n    targetBodies21[0] = NXOpen.Body.Null\n    extrudeBuilder7.BooleanOperation.SetTargetBodies(targetBodies21)\n    \n    extrudeBuilder7.Limits.StartExtend.Value.SetFormula("0")\n    \n    extrudeBuilder7.Limits.EndExtend.Value.SetFormula("20")\n    \n    extrudeBuilder7.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Create\n    \n    targetBodies22 = [NXOpen.Body.Null] * 1 \n    targetBodies22[0] = NXOpen.Body.Null\n    extrudeBuilder7.BooleanOperation.SetTargetBodies(targetBodies22)\n    \n    extrudeBuilder7.Draft.FrontDraftAngle.SetFormula("2")\n    \n    extrudeBuilder7.Draft.BackDraftAngle.SetFormula("2")\n    \n    extrudeBuilder7.Offset.StartOffset.SetFormula("0")\n    \n    extrudeBuilder7.Offset.EndOffset.SetFormula("5")\n    \n    smartVolumeProfileBuilder7 = extrudeBuilder7.SmartVolumeProfile\n    \n    smartVolumeProfileBuilder7.OpenProfileSmartVolumeOption = False\n    \n    smartVolumeProfileBuilder7.CloseProfileRule = NXOpen.GeometricUtilities.SmartVolumeProfileBuilder.CloseProfileRuleType.Fci\n    \n    theSession.SetUndoMarkName(markId76, "Extrude Dialog")\n    \n    section7.DistanceTolerance = 0.01\n    \n    section7.ChainingTolerance = 0.0094999999999999998\n    \n    section7.SetAllowedEntityTypes(NXOpen.Section.AllowTypes.OnlyCurves)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch Curve->Circle...\n    # ----------------------------------------------\n    extrudeBuilder7.Destroy()\n    \n    section7.Destroy()\n    \n    workPart.Expressions.Delete(expression55)\n    \n    theSession.UndoToMark(markId76, None)\n    \n    theSession.DeleteUndoMark(markId76, None)\n    \n    markId77 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Profile short list")\n    \n    markId78 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Curve")\n    \n    expression56 = workPart.Expressions.CreateSystemExpression("3")\n    \n    theSession.SetUndoMarkVisibility(markId78, "Curve", NXOpen.Session.MarkVisibility.Visible)\n    \n    nXMatrix1 = theSession.ActiveSketch.Orientation\n    \n    center1 = NXOpen.Point3d(59.899999999999999, 62.950000000000003, 61.0)\n    arc1 = workPart.Curves.CreateArc(center1, nXMatrix1, 1.5, 0.0, ( 360.0 * math.pi/180.0 ))\n    \n    theSession.ActiveSketch.AddGeometry(arc1, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    dimObject1_11 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject1_11.Geometry = arc1\n    dimObject1_11.AssocType = NXOpen.Sketch.AssocType.NotSet\n    dimObject1_11.AssocValue = 0\n    dimObject1_11.HelpPoint.X = 0.0\n    dimObject1_11.HelpPoint.Y = 0.0\n    dimObject1_11.HelpPoint.Z = 0.0\n    dimObject1_11.View = NXOpen.NXObject.Null\n    dimOrigin11 = NXOpen.Point3d(59.899999999999999, 62.950000000000003, 62.146590321137332)\n    sketchDimensionalConstraint11 = theSession.ActiveSketch.CreateDiameterDimension(dimObject1_11, dimOrigin11, expression56, NXOpen.Sketch.DimensionOption.CreateAsDriving)\n    \n    dimension11 = sketchDimensionalConstraint11.AssociatedDimension\n    \n    theSession.ActiveSketch.Update()\n    \n    markId79 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Curve")\n    \n    scaleAboutPoint29 = NXOpen.Point3d(-0.75842172283558928, -11.528010187101604, 0.0)\n    viewCenter29 = NXOpen.Point3d(0.75842172283566434, 11.528010187101604, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint29, viewCenter29)\n    \n    scaleAboutPoint30 = NXOpen.Point3d(-0.36404242696108807, -9.2224081496812804, 0.0)\n    viewCenter30 = NXOpen.Point3d(0.36404242696114147, 9.2224081496812804, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint30, viewCenter30)\n    \n    scaleAboutPoint31 = NXOpen.Point3d(-0.22651528788688388, -7.3132078660630615, 0.0)\n    viewCenter31 = NXOpen.Point3d(0.22651528788693731, 7.3132078660630615, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint31, viewCenter31)\n    \n    scaleAboutPoint32 = NXOpen.Point3d(0.025887461472816033, -5.7987913699048423, 0.0)\n    viewCenter32 = NXOpen.Point3d(-0.025887461472760474, 5.7987913699048423, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint32, viewCenter32)\n    \n    scaleAboutPoint33 = NXOpen.Point3d(0.227809660960576, -4.1834137740027844, 0.0)\n    viewCenter33 = NXOpen.Point3d(-0.22780966096051786, 4.1834137740027844, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint33, viewCenter33)\n    \n    scaleAboutPoint34 = NXOpen.Point3d(0.18224772876846079, -3.346731019202227, 0.0)\n    viewCenter34 = NXOpen.Point3d(-0.18224772876841155, 3.346731019202227, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint34, viewCenter34)\n    \n    scaleAboutPoint35 = NXOpen.Point3d(0.14579818301478181, -2.677384815361783, 0.0)\n    viewCenter35 = NXOpen.Point3d(-0.14579818301471836, 2.677384815361783, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint35, viewCenter35)\n    \n    scaleAboutPoint36 = NXOpen.Point3d(0.6043997404975443, -0.84828033754036791, 0.0)\n    viewCenter36 = NXOpen.Point3d(-0.60439974049748135, 0.84828033754036791, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(0.80000000000000004, scaleAboutPoint36, viewCenter36)\n    \n    # ----------------------------------------------\n    #   Menu: File->Finish Sketch\n    # ----------------------------------------------\n    theSession.DeleteUndoMark(markId79, "Curve")\n    \n    sketch16 = theSession.ActiveSketch\n    \n    markId80 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Deactivate Sketch")\n    \n    theSession.ActiveSketch.Deactivate(NXOpen.Sketch.ViewReorient.TrueValue, NXOpen.Sketch.UpdateLevel.Model)\n    \n    scaleAboutPoint37 = NXOpen.Point3d(-65.881566990321772, 28.314410985863557, 0.0)\n    viewCenter37 = NXOpen.Point3d(65.881566990321829, -28.314410985863557, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(0.80000000000000004, scaleAboutPoint37, viewCenter37)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Design Feature->Extrude...\n    # ----------------------------------------------\n    markId81 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    extrudeBuilder8 = workPart.Features.CreateExtrudeBuilder(NXOpen.Features.Feature.Null)\n    \n    section8 = workPart.Sections.CreateSection(0.0094999999999999998, 0.01, 0.5)\n    \n    extrudeBuilder8.Section = section8\n    \n    extrudeBuilder8.AllowSelfIntersectingSection(True)\n    \n    expression57 = workPart.Expressions.CreateSystemExpressionWithUnits("2.00", unit2)\n    \n    extrudeBuilder8.DistanceTolerance = 0.01\n    \n    extrudeBuilder8.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Create\n    \n    targetBodies23 = [NXOpen.Body.Null] * 1 \n    targetBodies23[0] = NXOpen.Body.Null\n    extrudeBuilder8.BooleanOperation.SetTargetBodies(targetBodies23)\n    \n    extrudeBuilder8.Limits.StartExtend.Value.SetFormula("0")\n    \n    extrudeBuilder8.Limits.EndExtend.Value.SetFormula("20")\n    \n    extrudeBuilder8.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Create\n    \n    targetBodies24 = [NXOpen.Body.Null] * 1 \n    targetBodies24[0] = NXOpen.Body.Null\n    extrudeBuilder8.BooleanOperation.SetTargetBodies(targetBodies24)\n    \n    extrudeBuilder8.Draft.FrontDraftAngle.SetFormula("2")\n    \n    extrudeBuilder8.Draft.BackDraftAngle.SetFormula("2")\n    \n    extrudeBuilder8.Offset.StartOffset.SetFormula("0")\n    \n    extrudeBuilder8.Offset.EndOffset.SetFormula("5")\n    \n    smartVolumeProfileBuilder8 = extrudeBuilder8.SmartVolumeProfile\n    \n    smartVolumeProfileBuilder8.OpenProfileSmartVolumeOption = False\n    \n    smartVolumeProfileBuilder8.CloseProfileRule = NXOpen.GeometricUtilities.SmartVolumeProfileBuilder.CloseProfileRuleType.Fci\n    \n    theSession.SetUndoMarkName(markId81, "Extrude Dialog")\n    \n    section8.DistanceTolerance = 0.01\n    \n    section8.ChainingTolerance = 0.0094999999999999998\n    \n    section8.SetAllowedEntityTypes(NXOpen.Section.AllowTypes.OnlyCurves)\n    \n    scaleAboutPoint38 = NXOpen.Point3d(-22.815853495305213, 26.039145817356648, 0.0)\n    viewCenter38 = NXOpen.Point3d(22.815853495305255, -26.039145817356648, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint38, viewCenter38)\n    \n    markId82 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "section mark")\n    \n    markId83 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, None)\n    \n    features5 = [NXOpen.Features.Feature.Null] * 1 \n    sketchFeature5 = feature12\n    features5[0] = sketchFeature5\n    curveFeatureRule5 = workPart.ScRuleFactory.CreateRuleCurveFeature(features5)\n    \n    section8.AllowSelfIntersection(True)\n    \n    rules5 = [None] * 1 \n    rules5[0] = curveFeatureRule5\n    helpPoint5 = NXOpen.Point3d(59.899999999999999, 64.401906944746884, 61.353023634290835)\n    section8.AddToSection(rules5, arc1, NXOpen.NXObject.Null, NXOpen.NXObject.Null, helpPoint5, NXOpen.Section.Mode.Create, False)\n    \n    theSession.DeleteUndoMark(markId83, None)\n    \n    direction10 = workPart.Directions.CreateDirection(sketch16, NXOpen.Sense.Forward, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    extrudeBuilder8.Direction = direction10\n    \n    targetBodies25 = [NXOpen.Body.Null] * 1 \n    targetBodies25[0] = body1\n    extrudeBuilder8.BooleanOperation.SetTargetBodies(targetBodies25)\n    \n    extrudeBuilder8.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Unite\n    \n    targetBodies26 = [NXOpen.Body.Null] * 1 \n    targetBodies26[0] = body1\n    extrudeBuilder8.BooleanOperation.SetTargetBodies(targetBodies26)\n    \n    expression58 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    theSession.DeleteUndoMark(markId82, None)\n    \n    extrudeBuilder8.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Subtract\n    \n    targetBodies27 = [NXOpen.Body.Null] * 1 \n    targetBodies27[0] = body1\n    extrudeBuilder8.BooleanOperation.SetTargetBodies(targetBodies27)\n    \n    direction11 = extrudeBuilder8.Direction\n    \n    success1 = direction11.ReverseDirection()\n    \n    extrudeBuilder8.Direction = direction11\n    \n    extrudeBuilder8.Limits.EndExtend.Value.SetFormula("6")\n    \n    markId84 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Extrude")\n    \n    theSession.DeleteUndoMark(markId84, None)\n    \n    markId85 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Extrude")\n    \n    extrudeBuilder8.ParentFeatureInternal = False\n    \n    feature13 = extrudeBuilder8.CommitFeature()\n    \n    theSession.DeleteUndoMark(markId85, None)\n    \n    theSession.SetUndoMarkName(markId81, "Extrude")\n    \n    expression59 = extrudeBuilder8.Limits.StartExtend.Value\n    expression60 = extrudeBuilder8.Limits.EndExtend.Value\n    extrudeBuilder8.Destroy()\n    \n    workPart.Expressions.Delete(expression57)\n    \n    workPart.Expressions.Delete(expression58)\n    \n    scaleAboutPoint39 = NXOpen.Point3d(-50.814255429987242, -2.3258266166959616, 0.0)\n    viewCenter39 = NXOpen.Point3d(50.814255429987291, 2.3258266166959616, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(0.80000000000000004, scaleAboutPoint39, viewCenter39)\n    \n    rotMatrix2 = NXOpen.Matrix3x3()\n    \n    rotMatrix2.Xx = 0.46220069408116682\n    rotMatrix2.Xy = 0.88673085240695038\n    rotMatrix2.Xz = -0.008883342869107122\n    rotMatrix2.Yx = -0.17616656654984669\n    rotMatrix2.Yy = 0.10163398042311432\n    rotMatrix2.Yz = 0.97909952244569698\n    rotMatrix2.Zx = 0.86910060362476216\n    rotMatrix2.Zy = -0.45097553083620512\n    rotMatrix2.Zz = 0.20318762601614668\n    translation2 = NXOpen.Point3d(-115.33905764790313, -35.056795083266927, -11.460508473624902)\n    workPart.ModelingViews.WorkView.SetRotationTranslationScale(rotMatrix2, translation2, 2.0931626194257249)\n    \n    origin37 = NXOpen.Point3d(46.970445925104414, 80.413157857164364, 33.972699291708302)\n    workPart.ModelingViews.WorkView.SetOrigin(origin37)\n    \n    origin38 = NXOpen.Point3d(46.970445925104414, 80.413157857164364, 33.972699291708302)\n    workPart.ModelingViews.WorkView.SetOrigin(origin38)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch...\n    # ----------------------------------------------\n    markId86 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    sketchInPlaceBuilder9 = workPart.Sketches.CreateSketchInPlaceBuilder2(NXOpen.Sketch.Null)\n    \n    origin39 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal19 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane19 = workPart.Planes.CreatePlane(origin39, normal19, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    sketchInPlaceBuilder9.PlaneReference = plane19\n    \n    expression61 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    expression62 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    sketchAlongPathBuilder9 = workPart.Sketches.CreateSketchAlongPathBuilder(NXOpen.Sketch.Null)\n    \n    sketchAlongPathBuilder9.PlaneLocation.Expression.SetFormula("0")\n    \n    theSession.SetUndoMarkName(markId86, "Create Sketch Dialog")\n    \n    scalar11 = workPart.Scalars.CreateScalar(1.0, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    extrude3 = feature9\n    edge8 = extrude3.FindObject("EDGE * 130 * 160 {(59.9,9.9,25)(59.9,6.95,25)(59.9,4,25) EXTRUDE(2)}")\n    point12 = workPart.Points.CreatePoint(edge8, scalar11, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    edge9 = extrude1.FindObject("EDGE * 130 EXTRUDE(7) 160 {(59.9,9.9,5)(59.9,6.95,5)(59.9,4,5) EXTRUDE(2)}")\n    direction12 = workPart.Directions.CreateDirection(edge9, NXOpen.Sense.Reverse, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    face3 = extrude3.FindObject("FACE 160 {(59.9,6.95,15) EXTRUDE(2)}")\n    xform6 = workPart.Xforms.CreateXformByPlaneXDirPoint(face3, direction12, point12, NXOpen.SmartObject.UpdateOption.WithinModeling, 0.625, False, False)\n    \n    cartesianCoordinateSystem6 = workPart.CoordinateSystems.CreateCoordinateSystem(xform6, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    sketchInPlaceBuilder9.Csystem = cartesianCoordinateSystem6\n    \n    origin40 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal20 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane20 = workPart.Planes.CreatePlane(origin40, normal20, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    plane20.SetMethod(NXOpen.PlaneTypes.MethodType.Coincident)\n    \n    geom18 = [NXOpen.NXObject.Null] * 1 \n    geom18[0] = face3\n    plane20.SetGeometry(geom18)\n    \n    plane20.SetFlip(False)\n    \n    plane20.SetExpression(None)\n    \n    plane20.SetAlternate(NXOpen.PlaneTypes.AlternateType.One)\n    \n    plane20.Evaluate()\n    \n    origin41 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal21 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane21 = workPart.Planes.CreatePlane(origin41, normal21, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    expression63 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    expression64 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    plane21.SynchronizeToPlane(plane20)\n    \n    scalar12 = workPart.Scalars.CreateScalar(100.0, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    point13 = workPart.Points.CreatePoint(edge8, scalar12, NXOpen.PointCollection.PointOnCurveLocationOption.PercentParameter, NXOpen.Point.Null, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    plane21.SetMethod(NXOpen.PlaneTypes.MethodType.Coincident)\n    \n    geom19 = [NXOpen.NXObject.Null] * 1 \n    geom19[0] = face3\n    plane21.SetGeometry(geom19)\n    \n    plane21.SetAlternate(NXOpen.PlaneTypes.AlternateType.One)\n    \n    plane21.Evaluate()\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch Curve->Circle...\n    # ----------------------------------------------\n    markId87 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.DeleteUndoMark(markId87, None)\n    \n    markId88 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.Preferences.Sketch.CreateInferredConstraints = True\n    \n    theSession.Preferences.Sketch.ContinuousAutoDimensioning = True\n    \n    theSession.Preferences.Sketch.DimensionLabel = NXOpen.Preferences.SketchPreferences.DimensionLabelType.Expression\n    \n    theSession.Preferences.Sketch.TextSizeFixed = True\n    \n    theSession.Preferences.Sketch.FixedTextSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayParenthesesOnReferenceDimensions = True\n    \n    theSession.Preferences.Sketch.DisplayReferenceGeometry = False\n    \n    theSession.Preferences.Sketch.ConstraintSymbolSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayObjectColor = False\n    \n    theSession.Preferences.Sketch.DisplayObjectName = True\n    \n    nXObject9 = sketchInPlaceBuilder9.Commit()\n    \n    sketch17 = nXObject9\n    feature14 = sketch17.Feature\n    \n    markId89 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "update")\n    \n    nErrs9 = theSession.UpdateManager.DoUpdate(markId89)\n    \n    sketch17.Activate(NXOpen.Sketch.ViewReorient.TrueValue)\n    \n    theSession.DeleteUndoMark(markId88, None)\n    \n    theSession.SetUndoMarkName(markId86, "Create Sketch")\n    \n    sketchInPlaceBuilder9.Destroy()\n    \n    sketchAlongPathBuilder9.Destroy()\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression62)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    workPart.Points.DeletePoint(point13)\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression61)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    plane19.DestroyPlane()\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression64)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression63)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    plane21.DestroyPlane()\n    \n    markId90 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Profile short list")\n    \n    scaleAboutPoint40 = NXOpen.Point3d(7.7738226590652459, -6.9521991259932854, 0.0)\n    viewCenter40 = NXOpen.Point3d(-7.7738226590651935, 6.9521991259932854, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint40, viewCenter40)\n    \n    scaleAboutPoint41 = NXOpen.Point3d(6.2190581272522056, -5.5617593007946287, 0.0)\n    viewCenter41 = NXOpen.Point3d(-6.2190581272521381, 5.5617593007946287, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint41, viewCenter41)\n    \n    scaleAboutPoint42 = NXOpen.Point3d(4.975246501801764, -4.449407440635702, 0.0)\n    viewCenter42 = NXOpen.Point3d(-4.9752465018017107, 4.449407440635702, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint42, viewCenter42)\n    \n    scaleAboutPoint43 = NXOpen.Point3d(3.9801972014414106, -3.4300886451446306, 0.0)\n    viewCenter43 = NXOpen.Point3d(-3.980197201441368, 3.4300886451446306, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint43, viewCenter43)\n    \n    markId91 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Curve")\n    \n    expression65 = workPart.Expressions.CreateSystemExpression("3.67396249294538")\n    \n    theSession.SetUndoMarkVisibility(markId91, "Curve", NXOpen.Session.MarkVisibility.Visible)\n    \n    nXMatrix2 = theSession.ActiveSketch.Orientation\n    \n    center2 = NXOpen.Point3d(59.899999999999999, 6.9500000000000002, 21.0)\n    arc2 = workPart.Curves.CreateArc(center2, nXMatrix2, 1.83698124647269, 0.0, ( 360.0 * math.pi/180.0 ))\n    \n    theSession.ActiveSketch.AddGeometry(arc2, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    dimObject1_12 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject1_12.Geometry = arc2\n    dimObject1_12.AssocType = NXOpen.Sketch.AssocType.NotSet\n    dimObject1_12.AssocValue = 0\n    dimObject1_12.HelpPoint.X = 0.0\n    dimObject1_12.HelpPoint.Y = 0.0\n    dimObject1_12.HelpPoint.Z = 0.0\n    dimObject1_12.View = NXOpen.NXObject.Null\n    dimOrigin12 = NXOpen.Point3d(59.899999999999999, 6.9500000000000002, 21.587054244422315)\n    sketchDimensionalConstraint12 = theSession.ActiveSketch.CreateDiameterDimension(dimObject1_12, dimOrigin12, expression65, NXOpen.Sketch.DimensionOption.CreateAsDriving)\n    \n    dimension12 = sketchDimensionalConstraint12.AssociatedDimension\n    \n    theSession.ActiveSketch.Update()\n    \n    markId92 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Curve")\n    \n    markId93 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Curve")\n    \n    theSession.DeleteUndoMark(markId93, "Curve")\n    \n    # ----------------------------------------------\n    #   Menu: Edit->Delete...\n    # ----------------------------------------------\n    markId94 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Delete")\n    \n    notifyOnDelete1 = theSession.Preferences.Modeling.NotifyOnDelete\n    \n    theSession.UpdateManager.ClearErrorList()\n    \n    markId95 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Start")\n    \n    theSession.SetUndoMarkName(markId95, "Class Selection Dialog")\n    \n    theSession.SetUndoMarkName(markId95, "Class Selection")\n    \n    theSession.DeleteUndoMark(markId95, None)\n    \n    theSession.DeleteUndoMark(markId94, None)\n    \n    # ----------------------------------------------\n    #   Menu: Edit->Delete...\n    # ----------------------------------------------\n    markId96 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Delete")\n    \n    notifyOnDelete2 = theSession.Preferences.Modeling.NotifyOnDelete\n    \n    theSession.UpdateManager.ClearErrorList()\n    \n    markId97 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Delete")\n    \n    objects1 = [NXOpen.TaggedObject.Null] * 1 \n    objects1[0] = arc2\n    nErrs10 = theSession.UpdateManager.AddObjectsToDeleteList(objects1)\n    \n    notifyOnDelete3 = theSession.Preferences.Modeling.NotifyOnDelete\n    \n    id1 = theSession.NewestVisibleUndoMark\n    \n    nErrs11 = theSession.UpdateManager.DoUpdate(id1)\n    \n    theSession.DeleteUndoMark(markId96, None)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch Curve->Circle...\n    # ----------------------------------------------\n    markId98 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Profile short list")\n    \n    markId99 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Curve")\n    \n    expression66 = workPart.Expressions.CreateSystemExpression("3")\n    \n    theSession.SetUndoMarkVisibility(markId99, "Curve", NXOpen.Session.MarkVisibility.Visible)\n    \n    nXMatrix3 = theSession.ActiveSketch.Orientation\n    \n    center3 = NXOpen.Point3d(59.899999999999999, 6.9500000000000002, 21.0)\n    arc3 = workPart.Curves.CreateArc(center3, nXMatrix3, 1.5, 0.0, ( 360.0 * math.pi/180.0 ))\n    \n    theSession.ActiveSketch.AddGeometry(arc3, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    dimObject1_13 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject1_13.Geometry = arc3\n    dimObject1_13.AssocType = NXOpen.Sketch.AssocType.NotSet\n    dimObject1_13.AssocValue = 0\n    dimObject1_13.HelpPoint.X = 0.0\n    dimObject1_13.HelpPoint.Y = 0.0\n    dimObject1_13.HelpPoint.Z = 0.0\n    dimObject1_13.View = NXOpen.NXObject.Null\n    dimOrigin13 = NXOpen.Point3d(59.899999999999999, 6.9500000000000002, 21.587054244422315)\n    sketchDimensionalConstraint13 = theSession.ActiveSketch.CreateDiameterDimension(dimObject1_13, dimOrigin13, expression66, NXOpen.Sketch.DimensionOption.CreateAsDriving)\n    \n    dimension13 = sketchDimensionalConstraint13.AssociatedDimension\n    \n    theSession.ActiveSketch.Update()\n    \n    markId100 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Curve")\n    \n    # ----------------------------------------------\n    #   Menu: File->Finish Sketch\n    # ----------------------------------------------\n    theSession.DeleteUndoMark(markId100, "Curve")\n    \n    sketch18 = theSession.ActiveSketch\n    \n    markId101 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Deactivate Sketch")\n    \n    theSession.ActiveSketch.Deactivate(NXOpen.Sketch.ViewReorient.TrueValue, NXOpen.Sketch.UpdateLevel.Model)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Design Feature->Extrude...\n    # ----------------------------------------------\n    markId102 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    extrudeBuilder9 = workPart.Features.CreateExtrudeBuilder(NXOpen.Features.Feature.Null)\n    \n    section9 = workPart.Sections.CreateSection(0.0094999999999999998, 0.01, 0.5)\n    \n    extrudeBuilder9.Section = section9\n    \n    extrudeBuilder9.AllowSelfIntersectingSection(True)\n    \n    expression67 = workPart.Expressions.CreateSystemExpressionWithUnits("2.00", unit2)\n    \n    extrudeBuilder9.DistanceTolerance = 0.01\n    \n    extrudeBuilder9.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Create\n    \n    targetBodies28 = [NXOpen.Body.Null] * 1 \n    targetBodies28[0] = NXOpen.Body.Null\n    extrudeBuilder9.BooleanOperation.SetTargetBodies(targetBodies28)\n    \n    extrudeBuilder9.Limits.StartExtend.Value.SetFormula("0")\n    \n    extrudeBuilder9.Limits.EndExtend.Value.SetFormula("6")\n    \n    extrudeBuilder9.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Subtract\n    \n    targetBodies29 = [NXOpen.Body.Null] * 1 \n    targetBodies29[0] = body1\n    extrudeBuilder9.BooleanOperation.SetTargetBodies(targetBodies29)\n    \n    extrudeBuilder9.Draft.FrontDraftAngle.SetFormula("2")\n    \n    extrudeBuilder9.Draft.BackDraftAngle.SetFormula("2")\n    \n    extrudeBuilder9.Offset.StartOffset.SetFormula("0")\n    \n    extrudeBuilder9.Offset.EndOffset.SetFormula("5")\n    \n    smartVolumeProfileBuilder9 = extrudeBuilder9.SmartVolumeProfile\n    \n    smartVolumeProfileBuilder9.OpenProfileSmartVolumeOption = False\n    \n    smartVolumeProfileBuilder9.CloseProfileRule = NXOpen.GeometricUtilities.SmartVolumeProfileBuilder.CloseProfileRuleType.Fci\n    \n    theSession.SetUndoMarkName(markId102, "Extrude Dialog")\n    \n    section9.DistanceTolerance = 0.01\n    \n    section9.ChainingTolerance = 0.0094999999999999998\n    \n    section9.SetAllowedEntityTypes(NXOpen.Section.AllowTypes.OnlyCurves)\n    \n    markId103 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "section mark")\n    \n    markId104 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, None)\n    \n    features6 = [NXOpen.Features.Feature.Null] * 1 \n    sketchFeature6 = feature14\n    features6[0] = sketchFeature6\n    curveFeatureRule6 = workPart.ScRuleFactory.CreateRuleCurveFeature(features6)\n    \n    section9.AllowSelfIntersection(True)\n    \n    rules6 = [None] * 1 \n    rules6[0] = curveFeatureRule6\n    helpPoint6 = NXOpen.Point3d(59.899999999999999, 8.3596127219276717, 20.500451107392088)\n    section9.AddToSection(rules6, arc3, NXOpen.NXObject.Null, NXOpen.NXObject.Null, helpPoint6, NXOpen.Section.Mode.Create, False)\n    \n    theSession.DeleteUndoMark(markId104, None)\n    \n    direction13 = workPart.Directions.CreateDirection(sketch18, NXOpen.Sense.Forward, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    extrudeBuilder9.Direction = direction13\n    \n    expression68 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    theSession.DeleteUndoMark(markId103, None)\n    \n    direction14 = extrudeBuilder9.Direction\n    \n    success2 = direction14.ReverseDirection()\n    \n    extrudeBuilder9.Direction = direction14\n    \n    extrudeBuilder9.Limits.EndExtend.Value.SetFormula("6")\n    \n    markId105 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Extrude")\n    \n    theSession.DeleteUndoMark(markId105, None)\n    \n    markId106 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Extrude")\n    \n    extrudeBuilder9.ParentFeatureInternal = False\n    \n    feature15 = extrudeBuilder9.CommitFeature()\n    \n    theSession.DeleteUndoMark(markId106, None)\n    \n    theSession.SetUndoMarkName(markId102, "Extrude")\n    \n    expression69 = extrudeBuilder9.Limits.StartExtend.Value\n    expression70 = extrudeBuilder9.Limits.EndExtend.Value\n    extrudeBuilder9.Destroy()\n    \n    workPart.Expressions.Delete(expression67)\n    \n    workPart.Expressions.Delete(expression68)\n    \n    origin42 = NXOpen.Point3d(43.827051349574397, 72.604381609816414, 30.086434631860392)\n    workPart.ModelingViews.WorkView.SetOrigin(origin42)\n    \n    origin43 = NXOpen.Point3d(43.827051349574397, 72.604381609816414, 30.086434631860392)\n    workPart.ModelingViews.WorkView.SetOrigin(origin43)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch...\n    # ----------------------------------------------\n    markId107 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    sketchInPlaceBuilder10 = workPart.Sketches.CreateSketchInPlaceBuilder2(NXOpen.Sketch.Null)\n    \n    origin44 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal22 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane22 = workPart.Planes.CreatePlane(origin44, normal22, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    sketchInPlaceBuilder10.PlaneReference = plane22\n    \n    expression71 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    expression72 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    sketchAlongPathBuilder10 = workPart.Sketches.CreateSketchAlongPathBuilder(NXOpen.Sketch.Null)\n    \n    sketchAlongPathBuilder10.PlaneLocation.Expression.SetFormula("0")\n    \n    theSession.SetUndoMarkName(markId107, "Create Sketch Dialog")\n    \n    scalar13 = workPart.Scalars.CreateScalar(1.0, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    edge10 = extrude3.FindObject("EDGE * 130 * 170 {(59.9,4,25)(56.95,4,25)(54,4,25) EXTRUDE(2)}")\n    point14 = workPart.Points.CreatePoint(edge10, scalar13, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    edge11 = extrude1.FindObject("EDGE * 130 EXTRUDE(7) 170 {(59.9,4,5)(56.95,4,5)(54,4,5) EXTRUDE(2)}")\n    direction15 = workPart.Directions.CreateDirection(edge11, NXOpen.Sense.Reverse, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    face4 = extrude3.FindObject("FACE 170 {(56.95,4,15) EXTRUDE(2)}")\n    xform7 = workPart.Xforms.CreateXformByPlaneXDirPoint(face4, direction15, point14, NXOpen.SmartObject.UpdateOption.WithinModeling, 0.625, False, False)\n    \n    cartesianCoordinateSystem7 = workPart.CoordinateSystems.CreateCoordinateSystem(xform7, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    sketchInPlaceBuilder10.Csystem = cartesianCoordinateSystem7\n    \n    origin45 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal23 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane23 = workPart.Planes.CreatePlane(origin45, normal23, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    plane23.SetMethod(NXOpen.PlaneTypes.MethodType.Coincident)\n    \n    geom20 = [NXOpen.NXObject.Null] * 1 \n    geom20[0] = face4\n    plane23.SetGeometry(geom20)\n    \n    plane23.SetFlip(False)\n    \n    plane23.SetExpression(None)\n    \n    plane23.SetAlternate(NXOpen.PlaneTypes.AlternateType.One)\n    \n    plane23.Evaluate()\n    \n    origin46 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal24 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane24 = workPart.Planes.CreatePlane(origin46, normal24, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    expression73 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    expression74 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    plane24.SynchronizeToPlane(plane23)\n    \n    scalar14 = workPart.Scalars.CreateScalar(100.0, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    point15 = workPart.Points.CreatePoint(edge10, scalar14, NXOpen.PointCollection.PointOnCurveLocationOption.PercentParameter, NXOpen.Point.Null, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    plane24.SetMethod(NXOpen.PlaneTypes.MethodType.Coincident)\n    \n    geom21 = [NXOpen.NXObject.Null] * 1 \n    geom21[0] = face4\n    plane24.SetGeometry(geom21)\n    \n    plane24.SetAlternate(NXOpen.PlaneTypes.AlternateType.One)\n    \n    plane24.Evaluate()\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch Curve->Rectangle...\n    # ----------------------------------------------\n    markId108 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.DeleteUndoMark(markId108, None)\n    \n    markId109 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.Preferences.Sketch.CreateInferredConstraints = True\n    \n    theSession.Preferences.Sketch.ContinuousAutoDimensioning = True\n    \n    theSession.Preferences.Sketch.DimensionLabel = NXOpen.Preferences.SketchPreferences.DimensionLabelType.Expression\n    \n    theSession.Preferences.Sketch.TextSizeFixed = True\n    \n    theSession.Preferences.Sketch.FixedTextSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayParenthesesOnReferenceDimensions = True\n    \n    theSession.Preferences.Sketch.DisplayReferenceGeometry = False\n    \n    theSession.Preferences.Sketch.ConstraintSymbolSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayObjectColor = False\n    \n    theSession.Preferences.Sketch.DisplayObjectName = True\n    \n    nXObject10 = sketchInPlaceBuilder10.Commit()\n    \n    sketch19 = nXObject10\n    feature16 = sketch19.Feature\n    \n    markId110 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "update")\n    \n    nErrs12 = theSession.UpdateManager.DoUpdate(markId110)\n    \n    sketch19.Activate(NXOpen.Sketch.ViewReorient.TrueValue)\n    \n    theSession.DeleteUndoMark(markId109, None)\n    \n    theSession.SetUndoMarkName(markId107, "Create Sketch")\n    \n    sketchInPlaceBuilder10.Destroy()\n    \n    sketchAlongPathBuilder10.Destroy()\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression72)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    workPart.Points.DeletePoint(point15)\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression71)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    plane22.DestroyPlane()\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression74)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression73)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    plane24.DestroyPlane()\n    \n    markId111 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Profile short list")\n    \n    scaleAboutPoint44 = NXOpen.Point3d(1.8328524968528148, -1.6432470661439007, 0.0)\n    viewCenter44 = NXOpen.Point3d(-1.8328524968527626, 1.6432470661439007, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint44, viewCenter44)\n    \n    scaleAboutPoint45 = NXOpen.Point3d(1.4662819974822516, -1.3145976529151204, 0.0)\n    viewCenter45 = NXOpen.Point3d(-1.4662819974822014, 1.3145976529151204, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint45, viewCenter45)\n    \n    scaleAboutPoint46 = NXOpen.Point3d(1.1730255979858148, -1.0516781223320966, 0.0)\n    viewCenter46 = NXOpen.Point3d(-1.1730255979857547, 1.0516781223320966, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint46, viewCenter46)\n    \n    markId112 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Rectangle")\n    \n    expression75 = workPart.Expressions.CreateSystemExpression("2.9")\n    \n    expression76 = workPart.Expressions.CreateSystemExpression("20")\n    \n    workPart.Expressions.Edit(expression75, "2.9")\n    \n    theSession.SetUndoMarkVisibility(markId112, "Create Rectangle", NXOpen.Session.MarkVisibility.Visible)\n    \n    # ----------------------------------------------\n    # Creating rectangle using By 2 Points method \n    # ----------------------------------------------\n    startPoint23 = NXOpen.Point3d(55.5, 4.0, 25.0)\n    endPoint23 = NXOpen.Point3d(58.399999999999999, 4.0, 25.0)\n    line23 = workPart.Curves.CreateLine(startPoint23, endPoint23)\n    \n    startPoint24 = NXOpen.Point3d(58.399999999999999, 4.0, 25.0)\n    endPoint24 = NXOpen.Point3d(58.399999999999999, 4.0, 5.0)\n    line24 = workPart.Curves.CreateLine(startPoint24, endPoint24)\n    \n    startPoint25 = NXOpen.Point3d(58.399999999999999, 4.0, 5.0)\n    endPoint25 = NXOpen.Point3d(55.5, 4.0, 5.0)\n    line25 = workPart.Curves.CreateLine(startPoint25, endPoint25)\n    \n    startPoint26 = NXOpen.Point3d(55.5, 4.0, 5.0)\n    endPoint26 = NXOpen.Point3d(55.5, 4.0, 25.0)\n    line26 = workPart.Curves.CreateLine(startPoint26, endPoint26)\n    \n    theSession.ActiveSketch.AddGeometry(line23, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    theSession.ActiveSketch.AddGeometry(line24, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    theSession.ActiveSketch.AddGeometry(line25, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    theSession.ActiveSketch.AddGeometry(line26, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    geom1_26 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_26.Geometry = line23\n    geom1_26.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_26.SplineDefiningPointIndex = 0\n    geom2_26 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_26.Geometry = line24\n    geom2_26.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_26.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint53 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_26, geom2_26)\n    \n    geom1_27 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_27.Geometry = line24\n    geom1_27.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_27.SplineDefiningPointIndex = 0\n    geom2_27 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_27.Geometry = line25\n    geom2_27.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_27.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint54 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_27, geom2_27)\n    \n    geom1_28 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_28.Geometry = line25\n    geom1_28.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_28.SplineDefiningPointIndex = 0\n    geom2_28 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_28.Geometry = line26\n    geom2_28.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_28.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint55 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_28, geom2_28)\n    \n    geom1_29 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_29.Geometry = line26\n    geom1_29.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_29.SplineDefiningPointIndex = 0\n    geom2_29 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_29.Geometry = line23\n    geom2_29.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_29.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint56 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_29, geom2_29)\n    \n    geom22 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom22.Geometry = line23\n    geom22.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    geom22.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint57 = theSession.ActiveSketch.CreateHorizontalConstraint(geom22)\n    \n    conGeom1_21 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_21.Geometry = line23\n    conGeom1_21.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_21.SplineDefiningPointIndex = 0\n    conGeom2_21 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_21.Geometry = line24\n    conGeom2_21.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_21.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint58 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_21, conGeom2_21)\n    \n    conGeom1_22 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_22.Geometry = line24\n    conGeom1_22.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_22.SplineDefiningPointIndex = 0\n    conGeom2_22 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_22.Geometry = line25\n    conGeom2_22.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_22.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint59 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_22, conGeom2_22)\n    \n    conGeom1_23 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_23.Geometry = line25\n    conGeom1_23.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_23.SplineDefiningPointIndex = 0\n    conGeom2_23 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_23.Geometry = line26\n    conGeom2_23.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_23.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint60 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_23, conGeom2_23)\n    \n    conGeom1_24 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_24.Geometry = line26\n    conGeom1_24.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_24.SplineDefiningPointIndex = 0\n    conGeom2_24 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_24.Geometry = line23\n    conGeom2_24.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_24.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint61 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_24, conGeom2_24)\n    \n    dimObject1_14 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject1_14.Geometry = line23\n    dimObject1_14.AssocType = NXOpen.Sketch.AssocType.StartPoint\n    dimObject1_14.AssocValue = 0\n    dimObject1_14.HelpPoint.X = 0.0\n    dimObject1_14.HelpPoint.Y = 0.0\n    dimObject1_14.HelpPoint.Z = 0.0\n    dimObject1_14.View = NXOpen.NXObject.Null\n    dimObject2_11 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject2_11.Geometry = line23\n    dimObject2_11.AssocType = NXOpen.Sketch.AssocType.EndPoint\n    dimObject2_11.AssocValue = 0\n    dimObject2_11.HelpPoint.X = 0.0\n    dimObject2_11.HelpPoint.Y = 0.0\n    dimObject2_11.HelpPoint.Z = 0.0\n    dimObject2_11.View = NXOpen.NXObject.Null\n    dimOrigin14 = NXOpen.Point3d(56.950000000000003, 4.0, 22.798546583416325)\n    sketchDimensionalConstraint14 = theSession.ActiveSketch.CreateDimension(NXOpen.Sketch.ConstraintType.ParallelDim, dimObject1_14, dimObject2_11, dimOrigin14, expression75, NXOpen.Sketch.DimensionOption.CreateAsDriving)\n    \n    sketchHelpedDimensionalConstraint11 = sketchDimensionalConstraint14\n    dimension14 = sketchHelpedDimensionalConstraint11.AssociatedDimension\n    \n    dimObject1_15 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject1_15.Geometry = line24\n    dimObject1_15.AssocType = NXOpen.Sketch.AssocType.StartPoint\n    dimObject1_15.AssocValue = 0\n    dimObject1_15.HelpPoint.X = 0.0\n    dimObject1_15.HelpPoint.Y = 0.0\n    dimObject1_15.HelpPoint.Z = 0.0\n    dimObject1_15.View = NXOpen.NXObject.Null\n    dimObject2_12 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject2_12.Geometry = line24\n    dimObject2_12.AssocType = NXOpen.Sketch.AssocType.EndPoint\n    dimObject2_12.AssocValue = 0\n    dimObject2_12.HelpPoint.X = 0.0\n    dimObject2_12.HelpPoint.Y = 0.0\n    dimObject2_12.HelpPoint.Z = 0.0\n    dimObject2_12.View = NXOpen.NXObject.Null\n    dimOrigin15 = NXOpen.Point3d(56.198546583416324, 4.0, 15.0)\n    sketchDimensionalConstraint15 = theSession.ActiveSketch.CreateDimension(NXOpen.Sketch.ConstraintType.ParallelDim, dimObject1_15, dimObject2_12, dimOrigin15, expression76, NXOpen.Sketch.DimensionOption.CreateAsDriving)\n    \n    sketchHelpedDimensionalConstraint12 = sketchDimensionalConstraint15\n    dimension15 = sketchHelpedDimensionalConstraint12.AssociatedDimension\n    \n    theSession.Preferences.Sketch.AutoDimensionsToArcCenter = False\n    \n    theSession.ActiveSketch.Update()\n    \n    theSession.Preferences.Sketch.AutoDimensionsToArcCenter = True\n    \n    geoms11 = [NXOpen.SmartObject.Null] * 4 \n    geoms11[0] = line23\n    geoms11[1] = line24\n    geoms11[2] = line25\n    geoms11[3] = line26\n    theSession.ActiveSketch.UpdateConstraintDisplay(geoms11)\n    \n    geoms12 = [NXOpen.SmartObject.Null] * 4 \n    geoms12[0] = line23\n    geoms12[1] = line24\n    geoms12[2] = line25\n    geoms12[3] = line26\n    theSession.ActiveSketch.UpdateDimensionDisplay(geoms12)\n    \n    # ----------------------------------------------\n    #   Menu: File->Finish Sketch\n    # ----------------------------------------------\n    sketch20 = theSession.ActiveSketch\n    \n    markId113 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Deactivate Sketch")\n    \n    theSession.ActiveSketch.Deactivate(NXOpen.Sketch.ViewReorient.TrueValue, NXOpen.Sketch.UpdateLevel.Model)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Design Feature->Extrude...\n    # ----------------------------------------------\n    markId114 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    extrudeBuilder10 = workPart.Features.CreateExtrudeBuilder(NXOpen.Features.Feature.Null)\n    \n    section10 = workPart.Sections.CreateSection(0.0094999999999999998, 0.01, 0.5)\n    \n    extrudeBuilder10.Section = section10\n    \n    extrudeBuilder10.AllowSelfIntersectingSection(True)\n    \n    expression77 = workPart.Expressions.CreateSystemExpressionWithUnits("2.00", unit2)\n    \n    extrudeBuilder10.DistanceTolerance = 0.01\n    \n    extrudeBuilder10.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Create\n    \n    targetBodies30 = [NXOpen.Body.Null] * 1 \n    targetBodies30[0] = NXOpen.Body.Null\n    extrudeBuilder10.BooleanOperation.SetTargetBodies(targetBodies30)\n    \n    extrudeBuilder10.Limits.StartExtend.Value.SetFormula("0")\n    \n    extrudeBuilder10.Limits.EndExtend.Value.SetFormula("6")\n    \n    extrudeBuilder10.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Subtract\n    \n    targetBodies31 = [NXOpen.Body.Null] * 1 \n    targetBodies31[0] = body1\n    extrudeBuilder10.BooleanOperation.SetTargetBodies(targetBodies31)\n    \n    extrudeBuilder10.Draft.FrontDraftAngle.SetFormula("2")\n    \n    extrudeBuilder10.Draft.BackDraftAngle.SetFormula("2")\n    \n    extrudeBuilder10.Offset.StartOffset.SetFormula("0")\n    \n    extrudeBuilder10.Offset.EndOffset.SetFormula("5")\n    \n    smartVolumeProfileBuilder10 = extrudeBuilder10.SmartVolumeProfile\n    \n    smartVolumeProfileBuilder10.OpenProfileSmartVolumeOption = False\n    \n    smartVolumeProfileBuilder10.CloseProfileRule = NXOpen.GeometricUtilities.SmartVolumeProfileBuilder.CloseProfileRuleType.Fci\n    \n    theSession.SetUndoMarkName(markId114, "Extrude Dialog")\n    \n    section10.DistanceTolerance = 0.01\n    \n    section10.ChainingTolerance = 0.0094999999999999998\n    \n    section10.SetAllowedEntityTypes(NXOpen.Section.AllowTypes.OnlyCurves)\n    \n    markId115 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "section mark")\n    \n    markId116 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, None)\n    \n    features7 = [NXOpen.Features.Feature.Null] * 1 \n    sketchFeature7 = feature16\n    features7[0] = sketchFeature7\n    curveFeatureRule7 = workPart.ScRuleFactory.CreateRuleCurveFeature(features7)\n    \n    section10.AllowSelfIntersection(True)\n    \n    rules7 = [None] * 1 \n    rules7[0] = curveFeatureRule7\n    helpPoint7 = NXOpen.Point3d(58.399999999999999, 3.9999999999999609, 22.270931838051823)\n    section10.AddToSection(rules7, line24, NXOpen.NXObject.Null, NXOpen.NXObject.Null, helpPoint7, NXOpen.Section.Mode.Create, False)\n    \n    theSession.DeleteUndoMark(markId116, None)\n    \n    direction16 = workPart.Directions.CreateDirection(sketch20, NXOpen.Sense.Forward, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    extrudeBuilder10.Direction = direction16\n    \n    expression78 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    theSession.DeleteUndoMark(markId115, None)\n    \n    direction17 = extrudeBuilder10.Direction\n    \n    success3 = direction17.ReverseDirection()\n    \n    extrudeBuilder10.Direction = direction17\n    \n    extrudeBuilder10.Limits.EndExtend.Value.SetFormula("6")\n    \n    markId117 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Extrude")\n    \n    theSession.DeleteUndoMark(markId117, None)\n    \n    markId118 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Extrude")\n    \n    extrudeBuilder10.ParentFeatureInternal = False\n    \n    feature17 = extrudeBuilder10.CommitFeature()\n    \n    theSession.DeleteUndoMark(markId118, None)\n    \n    theSession.SetUndoMarkName(markId114, "Extrude")\n    \n    expression79 = extrudeBuilder10.Limits.StartExtend.Value\n    expression80 = extrudeBuilder10.Limits.EndExtend.Value\n    extrudeBuilder10.Destroy()\n    \n    workPart.Expressions.Delete(expression77)\n    \n    workPart.Expressions.Delete(expression78)\n    \n    origin47 = NXOpen.Point3d(47.683264062529858, 78.835584072438792, 27.422310989985331)\n    workPart.ModelingViews.WorkView.SetOrigin(origin47)\n    \n    origin48 = NXOpen.Point3d(47.683264062529858, 78.835584072438792, 27.422310989985331)\n    workPart.ModelingViews.WorkView.SetOrigin(origin48)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch...\n    # ----------------------------------------------\n    markId119 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    sketchInPlaceBuilder11 = workPart.Sketches.CreateSketchInPlaceBuilder2(NXOpen.Sketch.Null)\n    \n    origin49 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal25 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane25 = workPart.Planes.CreatePlane(origin49, normal25, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    sketchInPlaceBuilder11.PlaneReference = plane25\n    \n    expression81 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    expression82 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    sketchAlongPathBuilder11 = workPart.Sketches.CreateSketchAlongPathBuilder(NXOpen.Sketch.Null)\n    \n    sketchAlongPathBuilder11.PlaneLocation.Expression.SetFormula("0")\n    \n    theSession.SetUndoMarkName(markId119, "Create Sketch Dialog")\n    \n    scalar15 = workPart.Scalars.CreateScalar(1.0, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    extrude4 = feature11\n    edge12 = extrude4.FindObject("EDGE * 130 * 160 {(116,60,25)(113.05,60,25)(110.1,60,25) EXTRUDE(2)}")\n    point16 = workPart.Points.CreatePoint(edge12, scalar15, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    edge13 = extrude1.FindObject("EDGE * 130 EXTRUDE(9) 160 {(116,60,5)(113.05,60,5)(110.1,60,5) EXTRUDE(2)}")\n    direction18 = workPart.Directions.CreateDirection(edge13, NXOpen.Sense.Reverse, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    face5 = extrude4.FindObject("FACE 160 {(113.05,60,15) EXTRUDE(2)}")\n    xform8 = workPart.Xforms.CreateXformByPlaneXDirPoint(face5, direction18, point16, NXOpen.SmartObject.UpdateOption.WithinModeling, 0.625, False, False)\n    \n    cartesianCoordinateSystem8 = workPart.CoordinateSystems.CreateCoordinateSystem(xform8, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    sketchInPlaceBuilder11.Csystem = cartesianCoordinateSystem8\n    \n    origin50 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal26 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane26 = workPart.Planes.CreatePlane(origin50, normal26, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    plane26.SetMethod(NXOpen.PlaneTypes.MethodType.Coincident)\n    \n    geom23 = [NXOpen.NXObject.Null] * 1 \n    geom23[0] = face5\n    plane26.SetGeometry(geom23)\n    \n    plane26.SetFlip(False)\n    \n    plane26.SetExpression(None)\n    \n    plane26.SetAlternate(NXOpen.PlaneTypes.AlternateType.One)\n    \n    plane26.Evaluate()\n    \n    origin51 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal27 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane27 = workPart.Planes.CreatePlane(origin51, normal27, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    expression83 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    expression84 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    plane27.SynchronizeToPlane(plane26)\n    \n    scalar16 = workPart.Scalars.CreateScalar(100.0, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    point17 = workPart.Points.CreatePoint(edge12, scalar16, NXOpen.PointCollection.PointOnCurveLocationOption.PercentParameter, NXOpen.Point.Null, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    plane27.SetMethod(NXOpen.PlaneTypes.MethodType.Coincident)\n    \n    geom24 = [NXOpen.NXObject.Null] * 1 \n    geom24[0] = face5\n    plane27.SetGeometry(geom24)\n    \n    plane27.SetAlternate(NXOpen.PlaneTypes.AlternateType.One)\n    \n    plane27.Evaluate()\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch Curve->Circle...\n    # ----------------------------------------------\n    markId120 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.DeleteUndoMark(markId120, None)\n    \n    markId121 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.Preferences.Sketch.CreateInferredConstraints = True\n    \n    theSession.Preferences.Sketch.ContinuousAutoDimensioning = True\n    \n    theSession.Preferences.Sketch.DimensionLabel = NXOpen.Preferences.SketchPreferences.DimensionLabelType.Expression\n    \n    theSession.Preferences.Sketch.TextSizeFixed = True\n    \n    theSession.Preferences.Sketch.FixedTextSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayParenthesesOnReferenceDimensions = True\n    \n    theSession.Preferences.Sketch.DisplayReferenceGeometry = False\n    \n    theSession.Preferences.Sketch.ConstraintSymbolSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayObjectColor = False\n    \n    theSession.Preferences.Sketch.DisplayObjectName = True\n    \n    nXObject11 = sketchInPlaceBuilder11.Commit()\n    \n    sketch21 = nXObject11\n    feature18 = sketch21.Feature\n    \n    markId122 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "update")\n    \n    nErrs13 = theSession.UpdateManager.DoUpdate(markId122)\n    \n    sketch21.Activate(NXOpen.Sketch.ViewReorient.TrueValue)\n    \n    theSession.DeleteUndoMark(markId121, None)\n    \n    theSession.SetUndoMarkName(markId119, "Create Sketch")\n    \n    sketchInPlaceBuilder11.Destroy()\n    \n    sketchAlongPathBuilder11.Destroy()\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression82)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    workPart.Points.DeletePoint(point17)\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression81)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    plane25.DestroyPlane()\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression84)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression83)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    plane27.DestroyPlane()\n    \n    markId123 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Profile short list")\n    \n    scaleAboutPoint47 = NXOpen.Point3d(-2.3384669787431687, -0.12640362047258849, 0.0)\n    viewCenter47 = NXOpen.Point3d(2.3384669787432211, 0.12640362047258849, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint47, viewCenter47)\n    \n    scaleAboutPoint48 = NXOpen.Point3d(-1.3651591011041309, -0.40449158551234987, 0.0)\n    viewCenter48 = NXOpen.Point3d(1.3651591011041475, 0.40449158551234987, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint48, viewCenter48)\n    \n    scaleAboutPoint49 = NXOpen.Point3d(-0.60673737826848484, -0.56628821971724985, 0.0)\n    viewCenter49 = NXOpen.Point3d(0.60673737826851826, 0.56628821971724985, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint49, viewCenter49)\n    \n    scaleAboutPoint50 = NXOpen.Point3d(-0.22651528788688921, -0.5824678831377732, 0.0)\n    viewCenter50 = NXOpen.Point3d(0.22651528788694264, 0.5824678831377732, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint50, viewCenter50)\n    \n    markId124 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Curve")\n    \n    expression85 = workPart.Expressions.CreateSystemExpression("3")\n    \n    theSession.SetUndoMarkVisibility(markId124, "Curve", NXOpen.Session.MarkVisibility.Visible)\n    \n    nXMatrix4 = theSession.ActiveSketch.Orientation\n    \n    center4 = NXOpen.Point3d(113.05000000000001, 60.0, 21.0)\n    arc4 = workPart.Curves.CreateArc(center4, nXMatrix4, 1.5, 0.0, ( 360.0 * math.pi/180.0 ))\n    \n    theSession.ActiveSketch.AddGeometry(arc4, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    dimObject1_16 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject1_16.Geometry = arc4\n    dimObject1_16.AssocType = NXOpen.Sketch.AssocType.NotSet\n    dimObject1_16.AssocValue = 0\n    dimObject1_16.HelpPoint.X = 0.0\n    dimObject1_16.HelpPoint.Y = 0.0\n    dimObject1_16.HelpPoint.Z = 0.0\n    dimObject1_16.View = NXOpen.NXObject.Null\n    dimOrigin16 = NXOpen.Point3d(113.05000000000001, 60.0, 21.587054244422315)\n    sketchDimensionalConstraint16 = theSession.ActiveSketch.CreateDiameterDimension(dimObject1_16, dimOrigin16, expression85, NXOpen.Sketch.DimensionOption.CreateAsDriving)\n    \n    dimension16 = sketchDimensionalConstraint16.AssociatedDimension\n    \n    theSession.ActiveSketch.Update()\n    \n    markId125 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Curve")\n    \n    markId126 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Curve")\n    \n    expression86 = workPart.Expressions.CreateSystemExpression("3")\n    \n    workPart.Expressions.Delete(expression86)\n    \n    theSession.DeleteUndoMark(markId126, "Curve")\n    \n    # ----------------------------------------------\n    #   Menu: File->Finish Sketch\n    # ----------------------------------------------\n    sketch22 = theSession.ActiveSketch\n    \n    markId127 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Deactivate Sketch")\n    \n    theSession.ActiveSketch.Deactivate(NXOpen.Sketch.ViewReorient.TrueValue, NXOpen.Sketch.UpdateLevel.Model)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Design Feature->Extrude...\n    # ----------------------------------------------\n    markId128 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    extrudeBuilder11 = workPart.Features.CreateExtrudeBuilder(NXOpen.Features.Feature.Null)\n    \n    section11 = workPart.Sections.CreateSection(0.0094999999999999998, 0.01, 0.5)\n    \n    extrudeBuilder11.Section = section11\n    \n    extrudeBuilder11.AllowSelfIntersectingSection(True)\n    \n    expression87 = workPart.Expressions.CreateSystemExpressionWithUnits("2.00", unit2)\n    \n    extrudeBuilder11.DistanceTolerance = 0.01\n    \n    extrudeBuilder11.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Create\n    \n    targetBodies32 = [NXOpen.Body.Null] * 1 \n    targetBodies32[0] = NXOpen.Body.Null\n    extrudeBuilder11.BooleanOperation.SetTargetBodies(targetBodies32)\n    \n    extrudeBuilder11.Limits.StartExtend.Value.SetFormula("0")\n    \n    extrudeBuilder11.Limits.EndExtend.Value.SetFormula("6")\n    \n    extrudeBuilder11.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Subtract\n    \n    targetBodies33 = [NXOpen.Body.Null] * 1 \n    targetBodies33[0] = body1\n    extrudeBuilder11.BooleanOperation.SetTargetBodies(targetBodies33)\n    \n    extrudeBuilder11.Draft.FrontDraftAngle.SetFormula("2")\n    \n    extrudeBuilder11.Draft.BackDraftAngle.SetFormula("2")\n    \n    extrudeBuilder11.Offset.StartOffset.SetFormula("0")\n    \n    extrudeBuilder11.Offset.EndOffset.SetFormula("5")\n    \n    smartVolumeProfileBuilder11 = extrudeBuilder11.SmartVolumeProfile\n    \n    smartVolumeProfileBuilder11.OpenProfileSmartVolumeOption = False\n    \n    smartVolumeProfileBuilder11.CloseProfileRule = NXOpen.GeometricUtilities.SmartVolumeProfileBuilder.CloseProfileRuleType.Fci\n    \n    theSession.SetUndoMarkName(markId128, "Extrude Dialog")\n    \n    section11.DistanceTolerance = 0.01\n    \n    section11.ChainingTolerance = 0.0094999999999999998\n    \n    section11.SetAllowedEntityTypes(NXOpen.Section.AllowTypes.OnlyCurves)\n    \n    markId129 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "section mark")\n    \n    markId130 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, None)\n    \n    features8 = [NXOpen.Features.Feature.Null] * 1 \n    sketchFeature8 = feature18\n    features8[0] = sketchFeature8\n    curveFeatureRule8 = workPart.ScRuleFactory.CreateRuleCurveFeature(features8)\n    \n    section11.AllowSelfIntersection(True)\n    \n    rules8 = [None] * 1 \n    rules8[0] = curveFeatureRule8\n    helpPoint8 = NXOpen.Point3d(114.53687847145467, 60.0, 20.854190364119461)\n    section11.AddToSection(rules8, arc4, NXOpen.NXObject.Null, NXOpen.NXObject.Null, helpPoint8, NXOpen.Section.Mode.Create, False)\n    \n    theSession.DeleteUndoMark(markId130, None)\n    \n    direction19 = workPart.Directions.CreateDirection(sketch22, NXOpen.Sense.Forward, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    extrudeBuilder11.Direction = direction19\n    \n    expression88 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    theSession.DeleteUndoMark(markId129, None)\n    \n    direction20 = extrudeBuilder11.Direction\n    \n    success4 = direction20.ReverseDirection()\n    \n    extrudeBuilder11.Direction = direction20\n    \n    extrudeBuilder11.Limits.EndExtend.Value.SetFormula("6")\n    \n    markId131 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Extrude")\n    \n    theSession.DeleteUndoMark(markId131, None)\n    \n    markId132 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Extrude")\n    \n    extrudeBuilder11.ParentFeatureInternal = False\n    \n    feature19 = extrudeBuilder11.CommitFeature()\n    \n    theSession.DeleteUndoMark(markId132, None)\n    \n    theSession.SetUndoMarkName(markId128, "Extrude")\n    \n    expression89 = extrudeBuilder11.Limits.StartExtend.Value\n    expression90 = extrudeBuilder11.Limits.EndExtend.Value\n    extrudeBuilder11.Destroy()\n    \n    workPart.Expressions.Delete(expression87)\n    \n    workPart.Expressions.Delete(expression88)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch...\n    # ----------------------------------------------\n    markId133 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    sketchInPlaceBuilder12 = workPart.Sketches.CreateSketchInPlaceBuilder2(NXOpen.Sketch.Null)\n    \n    origin52 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal28 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane28 = workPart.Planes.CreatePlane(origin52, normal28, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    sketchInPlaceBuilder12.PlaneReference = plane28\n    \n    expression91 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    expression92 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    sketchAlongPathBuilder12 = workPart.Sketches.CreateSketchAlongPathBuilder(NXOpen.Sketch.Null)\n    \n    sketchAlongPathBuilder12.PlaneLocation.Expression.SetFormula("0")\n    \n    theSession.SetUndoMarkName(markId133, "Create Sketch Dialog")\n    \n    scalar17 = workPart.Scalars.CreateScalar(1.0, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    edge14 = extrude4.FindObject("EDGE * 130 * 150 {(116,65.9,25)(116,62.95,25)(116,60,25) EXTRUDE(2)}")\n    point18 = workPart.Points.CreatePoint(edge14, scalar17, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    edge15 = extrude1.FindObject("EDGE * 130 EXTRUDE(9) 150 {(116,65.9,5)(116,62.95,5)(116,60,5) EXTRUDE(2)}")\n    direction21 = workPart.Directions.CreateDirection(edge15, NXOpen.Sense.Reverse, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    face6 = extrude4.FindObject("FACE 150 {(116,62.95,15) EXTRUDE(2)}")\n    xform9 = workPart.Xforms.CreateXformByPlaneXDirPoint(face6, direction21, point18, NXOpen.SmartObject.UpdateOption.WithinModeling, 0.625, False, False)\n    \n    cartesianCoordinateSystem9 = workPart.CoordinateSystems.CreateCoordinateSystem(xform9, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    sketchInPlaceBuilder12.Csystem = cartesianCoordinateSystem9\n    \n    origin53 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal29 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane29 = workPart.Planes.CreatePlane(origin53, normal29, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    plane29.SetMethod(NXOpen.PlaneTypes.MethodType.Coincident)\n    \n    geom25 = [NXOpen.NXObject.Null] * 1 \n    geom25[0] = face6\n    plane29.SetGeometry(geom25)\n    \n    plane29.SetFlip(False)\n    \n    plane29.SetExpression(None)\n    \n    plane29.SetAlternate(NXOpen.PlaneTypes.AlternateType.One)\n    \n    plane29.Evaluate()\n    \n    origin54 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal30 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane30 = workPart.Planes.CreatePlane(origin54, normal30, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    expression93 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    expression94 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    plane30.SynchronizeToPlane(plane29)\n    \n    scalar18 = workPart.Scalars.CreateScalar(100.0, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    point19 = workPart.Points.CreatePoint(edge14, scalar18, NXOpen.PointCollection.PointOnCurveLocationOption.PercentParameter, NXOpen.Point.Null, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    plane30.SetMethod(NXOpen.PlaneTypes.MethodType.Coincident)\n    \n    geom26 = [NXOpen.NXObject.Null] * 1 \n    geom26[0] = face6\n    plane30.SetGeometry(geom26)\n    \n    plane30.SetAlternate(NXOpen.PlaneTypes.AlternateType.One)\n    \n    plane30.Evaluate()\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch Curve->Rectangle...\n    # ----------------------------------------------\n    markId134 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.DeleteUndoMark(markId134, None)\n    \n    markId135 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.Preferences.Sketch.CreateInferredConstraints = True\n    \n    theSession.Preferences.Sketch.ContinuousAutoDimensioning = True\n    \n    theSession.Preferences.Sketch.DimensionLabel = NXOpen.Preferences.SketchPreferences.DimensionLabelType.Expression\n    \n    theSession.Preferences.Sketch.TextSizeFixed = True\n    \n    theSession.Preferences.Sketch.FixedTextSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayParenthesesOnReferenceDimensions = True\n    \n    theSession.Preferences.Sketch.DisplayReferenceGeometry = False\n    \n    theSession.Preferences.Sketch.ConstraintSymbolSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayObjectColor = False\n    \n    theSession.Preferences.Sketch.DisplayObjectName = True\n    \n    nXObject12 = sketchInPlaceBuilder12.Commit()\n    \n    sketch23 = nXObject12\n    feature20 = sketch23.Feature\n    \n    markId136 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "update")\n    \n    nErrs14 = theSession.UpdateManager.DoUpdate(markId136)\n    \n    sketch23.Activate(NXOpen.Sketch.ViewReorient.TrueValue)\n    \n    theSession.DeleteUndoMark(markId135, None)\n    \n    theSession.SetUndoMarkName(markId133, "Create Sketch")\n    \n    sketchInPlaceBuilder12.Destroy()\n    \n    sketchAlongPathBuilder12.Destroy()\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression92)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    workPart.Points.DeletePoint(point19)\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression91)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    plane28.DestroyPlane()\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression94)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression93)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    plane30.DestroyPlane()\n    \n    markId137 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Profile short list")\n    \n    scaleAboutPoint51 = NXOpen.Point3d(4.1081176653596998, -7.2050063669384619, 0.0)\n    viewCenter51 = NXOpen.Point3d(-4.1081176653596474, 7.2050063669384619, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint51, viewCenter51)\n    \n    scaleAboutPoint52 = NXOpen.Point3d(3.2864941322877774, -5.7640050935507707, 0.0)\n    viewCenter52 = NXOpen.Point3d(-3.2864941322877019, 5.7640050935507707, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint52, viewCenter52)\n    \n    scaleAboutPoint53 = NXOpen.Point3d(2.6291953058302147, -4.6112040748406153, 0.0)\n    viewCenter53 = NXOpen.Point3d(-2.6291953058301609, 4.6112040748406153, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint53, viewCenter53)\n    \n    scaleAboutPoint54 = NXOpen.Point3d(2.3622308593920645, -3.6242446061905267, 0.0)\n    viewCenter54 = NXOpen.Point3d(-2.3622308593920112, 3.6242446061905267, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint54, viewCenter54)\n    \n    markId138 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Rectangle")\n    \n    expression95 = workPart.Expressions.CreateSystemExpression("2.9")\n    \n    expression96 = workPart.Expressions.CreateSystemExpression("20")\n    \n    workPart.Expressions.Edit(expression95, "2.9")\n    \n    theSession.SetUndoMarkVisibility(markId138, "Create Rectangle", NXOpen.Session.MarkVisibility.Visible)\n    \n    # ----------------------------------------------\n    # Creating rectangle using By 2 Points method \n    # ----------------------------------------------\n    startPoint27 = NXOpen.Point3d(116.0, 61.5, 25.0)\n    endPoint27 = NXOpen.Point3d(116.0, 64.400000000000006, 25.0)\n    line27 = workPart.Curves.CreateLine(startPoint27, endPoint27)\n    \n    startPoint28 = NXOpen.Point3d(116.0, 64.400000000000006, 25.0)\n    endPoint28 = NXOpen.Point3d(116.0, 64.400000000000006, 5.0)\n    line28 = workPart.Curves.CreateLine(startPoint28, endPoint28)\n    \n    startPoint29 = NXOpen.Point3d(116.0, 64.400000000000006, 5.0)\n    endPoint29 = NXOpen.Point3d(116.0, 61.5, 5.0)\n    line29 = workPart.Curves.CreateLine(startPoint29, endPoint29)\n    \n    startPoint30 = NXOpen.Point3d(116.0, 61.5, 5.0)\n    endPoint30 = NXOpen.Point3d(116.0, 61.5, 25.0)\n    line30 = workPart.Curves.CreateLine(startPoint30, endPoint30)\n    \n    theSession.ActiveSketch.AddGeometry(line27, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    theSession.ActiveSketch.AddGeometry(line28, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    theSession.ActiveSketch.AddGeometry(line29, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    theSession.ActiveSketch.AddGeometry(line30, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    geom1_30 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_30.Geometry = line27\n    geom1_30.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_30.SplineDefiningPointIndex = 0\n    geom2_30 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_30.Geometry = line28\n    geom2_30.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_30.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint62 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_30, geom2_30)\n    \n    geom1_31 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_31.Geometry = line28\n    geom1_31.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_31.SplineDefiningPointIndex = 0\n    geom2_31 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_31.Geometry = line29\n    geom2_31.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_31.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint63 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_31, geom2_31)\n    \n    geom1_32 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_32.Geometry = line29\n    geom1_32.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_32.SplineDefiningPointIndex = 0\n    geom2_32 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_32.Geometry = line30\n    geom2_32.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_32.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint64 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_32, geom2_32)\n    \n    geom1_33 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_33.Geometry = line30\n    geom1_33.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_33.SplineDefiningPointIndex = 0\n    geom2_33 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_33.Geometry = line27\n    geom2_33.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_33.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint65 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_33, geom2_33)\n    \n    geom27 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom27.Geometry = line27\n    geom27.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    geom27.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint66 = theSession.ActiveSketch.CreateHorizontalConstraint(geom27)\n    \n    conGeom1_25 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_25.Geometry = line27\n    conGeom1_25.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_25.SplineDefiningPointIndex = 0\n    conGeom2_25 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_25.Geometry = line28\n    conGeom2_25.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_25.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint67 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_25, conGeom2_25)\n    \n    conGeom1_26 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_26.Geometry = line28\n    conGeom1_26.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_26.SplineDefiningPointIndex = 0\n    conGeom2_26 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_26.Geometry = line29\n    conGeom2_26.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_26.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint68 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_26, conGeom2_26)\n    \n    conGeom1_27 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_27.Geometry = line29\n    conGeom1_27.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_27.SplineDefiningPointIndex = 0\n    conGeom2_27 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_27.Geometry = line30\n    conGeom2_27.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_27.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint69 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_27, conGeom2_27)\n    \n    conGeom1_28 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_28.Geometry = line30\n    conGeom1_28.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_28.SplineDefiningPointIndex = 0\n    conGeom2_28 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_28.Geometry = line27\n    conGeom2_28.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_28.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint70 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_28, conGeom2_28)\n    \n    dimObject1_17 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject1_17.Geometry = line27\n    dimObject1_17.AssocType = NXOpen.Sketch.AssocType.StartPoint\n    dimObject1_17.AssocValue = 0\n    dimObject1_17.HelpPoint.X = 0.0\n    dimObject1_17.HelpPoint.Y = 0.0\n    dimObject1_17.HelpPoint.Z = 0.0\n    dimObject1_17.View = NXOpen.NXObject.Null\n    dimObject2_13 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject2_13.Geometry = line27\n    dimObject2_13.AssocType = NXOpen.Sketch.AssocType.EndPoint\n    dimObject2_13.AssocValue = 0\n    dimObject2_13.HelpPoint.X = 0.0\n    dimObject2_13.HelpPoint.Y = 0.0\n    dimObject2_13.HelpPoint.Z = 0.0\n    dimObject2_13.View = NXOpen.NXObject.Null\n    dimOrigin17 = NXOpen.Point3d(116.0, 62.950000000000003, 23.238837266733057)\n    sketchDimensionalConstraint17 = theSession.ActiveSketch.CreateDimension(NXOpen.Sketch.ConstraintType.ParallelDim, dimObject1_17, dimObject2_13, dimOrigin17, expression95, NXOpen.Sketch.DimensionOption.CreateAsDriving)\n    \n    sketchHelpedDimensionalConstraint13 = sketchDimensionalConstraint17\n    dimension17 = sketchHelpedDimensionalConstraint13.AssociatedDimension\n    \n    dimObject1_18 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject1_18.Geometry = line28\n    dimObject1_18.AssocType = NXOpen.Sketch.AssocType.StartPoint\n    dimObject1_18.AssocValue = 0\n    dimObject1_18.HelpPoint.X = 0.0\n    dimObject1_18.HelpPoint.Y = 0.0\n    dimObject1_18.HelpPoint.Z = 0.0\n    dimObject1_18.View = NXOpen.NXObject.Null\n    dimObject2_14 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject2_14.Geometry = line28\n    dimObject2_14.AssocType = NXOpen.Sketch.AssocType.EndPoint\n    dimObject2_14.AssocValue = 0\n    dimObject2_14.HelpPoint.X = 0.0\n    dimObject2_14.HelpPoint.Y = 0.0\n    dimObject2_14.HelpPoint.Z = 0.0\n    dimObject2_14.View = NXOpen.NXObject.Null\n    dimOrigin18 = NXOpen.Point3d(116.0, 62.638837266733063, 15.0)\n    sketchDimensionalConstraint18 = theSession.ActiveSketch.CreateDimension(NXOpen.Sketch.ConstraintType.ParallelDim, dimObject1_18, dimObject2_14, dimOrigin18, expression96, NXOpen.Sketch.DimensionOption.CreateAsDriving)\n    \n    sketchHelpedDimensionalConstraint14 = sketchDimensionalConstraint18\n    dimension18 = sketchHelpedDimensionalConstraint14.AssociatedDimension\n    \n    theSession.Preferences.Sketch.AutoDimensionsToArcCenter = False\n    \n    theSession.ActiveSketch.Update()\n    \n    theSession.Preferences.Sketch.AutoDimensionsToArcCenter = True\n    \n    geoms13 = [NXOpen.SmartObject.Null] * 4 \n    geoms13[0] = line27\n    geoms13[1] = line28\n    geoms13[2] = line29\n    geoms13[3] = line30\n    theSession.ActiveSketch.UpdateConstraintDisplay(geoms13)\n    \n    geoms14 = [NXOpen.SmartObject.Null] * 4 \n    geoms14[0] = line27\n    geoms14[1] = line28\n    geoms14[2] = line29\n    geoms14[3] = line30\n    theSession.ActiveSketch.UpdateDimensionDisplay(geoms14)\n    \n    # ----------------------------------------------\n    #   Menu: File->Finish Sketch\n    # ----------------------------------------------\n    sketch24 = theSession.ActiveSketch\n    \n    markId139 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Deactivate Sketch")\n    \n    theSession.ActiveSketch.Deactivate(NXOpen.Sketch.ViewReorient.TrueValue, NXOpen.Sketch.UpdateLevel.Model)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Design Feature->Extrude...\n    # ----------------------------------------------\n    markId140 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    extrudeBuilder12 = workPart.Features.CreateExtrudeBuilder(NXOpen.Features.Feature.Null)\n    \n    section12 = workPart.Sections.CreateSection(0.0094999999999999998, 0.01, 0.5)\n    \n    extrudeBuilder12.Section = section12\n    \n    extrudeBuilder12.AllowSelfIntersectingSection(True)\n    \n    expression97 = workPart.Expressions.CreateSystemExpressionWithUnits("2.00", unit2)\n    \n    extrudeBuilder12.DistanceTolerance = 0.01\n    \n    extrudeBuilder12.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Create\n    \n    targetBodies34 = [NXOpen.Body.Null] * 1 \n    targetBodies34[0] = NXOpen.Body.Null\n    extrudeBuilder12.BooleanOperation.SetTargetBodies(targetBodies34)\n    \n    extrudeBuilder12.Limits.StartExtend.Value.SetFormula("0")\n    \n    extrudeBuilder12.Limits.EndExtend.Value.SetFormula("6")\n    \n    extrudeBuilder12.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Subtract\n    \n    targetBodies35 = [NXOpen.Body.Null] * 1 \n    targetBodies35[0] = body1\n    extrudeBuilder12.BooleanOperation.SetTargetBodies(targetBodies35)\n    \n    extrudeBuilder12.Draft.FrontDraftAngle.SetFormula("2")\n    \n    extrudeBuilder12.Draft.BackDraftAngle.SetFormula("2")\n    \n    extrudeBuilder12.Offset.StartOffset.SetFormula("0")\n    \n    extrudeBuilder12.Offset.EndOffset.SetFormula("5")\n    \n    smartVolumeProfileBuilder12 = extrudeBuilder12.SmartVolumeProfile\n    \n    smartVolumeProfileBuilder12.OpenProfileSmartVolumeOption = False\n    \n    smartVolumeProfileBuilder12.CloseProfileRule = NXOpen.GeometricUtilities.SmartVolumeProfileBuilder.CloseProfileRuleType.Fci\n    \n    theSession.SetUndoMarkName(markId140, "Extrude Dialog")\n    \n    section12.DistanceTolerance = 0.01\n    \n    section12.ChainingTolerance = 0.0094999999999999998\n    \n    section12.SetAllowedEntityTypes(NXOpen.Section.AllowTypes.OnlyCurves)\n    \n    markId141 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "section mark")\n    \n    markId142 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, None)\n    \n    features9 = [NXOpen.Features.Feature.Null] * 1 \n    sketchFeature9 = feature20\n    features9[0] = sketchFeature9\n    curveFeatureRule9 = workPart.ScRuleFactory.CreateRuleCurveFeature(features9)\n    \n    section12.AllowSelfIntersection(True)\n    \n    rules9 = [None] * 1 \n    rules9[0] = curveFeatureRule9\n    helpPoint9 = NXOpen.Point3d(115.99999999999994, 64.39999999999992, 20.296586702122845)\n    section12.AddToSection(rules9, line28, NXOpen.NXObject.Null, NXOpen.NXObject.Null, helpPoint9, NXOpen.Section.Mode.Create, False)\n    \n    theSession.DeleteUndoMark(markId142, None)\n    \n    direction22 = workPart.Directions.CreateDirection(sketch24, NXOpen.Sense.Forward, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    extrudeBuilder12.Direction = direction22\n    \n    expression98 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    theSession.DeleteUndoMark(markId141, None)\n    \n    direction23 = extrudeBuilder12.Direction\n    \n    success5 = direction23.ReverseDirection()\n    \n    extrudeBuilder12.Direction = direction23\n    \n    extrudeBuilder12.Limits.EndExtend.Value.SetFormula("6")\n    \n    markId143 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Extrude")\n    \n    theSession.DeleteUndoMark(markId143, None)\n    \n    markId144 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Extrude")\n    \n    extrudeBuilder12.ParentFeatureInternal = False\n    \n    feature21 = extrudeBuilder12.CommitFeature()\n    \n    theSession.DeleteUndoMark(markId144, None)\n    \n    theSession.SetUndoMarkName(markId140, "Extrude")\n    \n    expression99 = extrudeBuilder12.Limits.StartExtend.Value\n    expression100 = extrudeBuilder12.Limits.EndExtend.Value\n    extrudeBuilder12.Destroy()\n    \n    workPart.Expressions.Delete(expression97)\n    \n    workPart.Expressions.Delete(expression98)\n    \n    scaleAboutPoint55 = NXOpen.Point3d(-69.964403931586915, -17.064488763801698, 0.0)\n    viewCenter55 = NXOpen.Point3d(69.964403931586986, 17.064488763801698, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(0.80000000000000004, scaleAboutPoint55, viewCenter55)\n    \n    scaleAboutPoint56 = NXOpen.Point3d(-87.2975003888929, -21.330610954752121, 0.0)\n    viewCenter56 = NXOpen.Point3d(87.297500388892956, 21.330610954752121, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(0.80000000000000004, scaleAboutPoint56, viewCenter56)\n    \n    scaleAboutPoint57 = NXOpen.Point3d(-109.12187548611617, -26.663263693440157, 0.0)\n    viewCenter57 = NXOpen.Point3d(109.1218754861162, 26.663263693440157, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint57, viewCenter57)\n    \n    # ----------------------------------------------\n    #   Menu: Tools->Journal->Stop Recording\n    # ----------------------------------------------\n    \nif __name__ == \'__main__\':\n    main() \n \n w12作業 \n 負責部分:零件1 \n \n \n ================================================ \n # NX 1872\n# Journal created by e0905 on Thu May  9 16:36:46 2024 台北標準時間\n\n#\nimport math\nimport NXOpen\nimport NXOpen.Annotations\nimport NXOpen.Features\nimport NXOpen.GeometricUtilities\nimport NXOpen.Preferences\ndef main() : \n\n    theSession  = NXOpen.Session.GetSession()\n    workPart = theSession.Parts.Work\n    displayPart = theSession.Parts.Display\n    # ----------------------------------------------\n    #   Menu: Insert->Sketch...\n    # ----------------------------------------------\n    markId1 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    sketchInPlaceBuilder1 = workPart.Sketches.CreateSketchInPlaceBuilder2(NXOpen.Sketch.Null)\n    \n    origin1 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal1 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane1 = workPart.Planes.CreatePlane(origin1, normal1, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    sketchInPlaceBuilder1.PlaneReference = plane1\n    \n    unit1 = workPart.UnitCollection.FindObject("MilliMeter")\n    expression1 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    expression2 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    sketchAlongPathBuilder1 = workPart.Sketches.CreateSketchAlongPathBuilder(NXOpen.Sketch.Null)\n    \n    theSession.SetUndoMarkName(markId1, "Create Sketch Dialog")\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch Curve->Rectangle...\n    # ----------------------------------------------\n    markId2 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.DeleteUndoMark(markId2, None)\n    \n    markId3 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.Preferences.Sketch.CreateInferredConstraints = True\n    \n    theSession.Preferences.Sketch.ContinuousAutoDimensioning = True\n    \n    theSession.Preferences.Sketch.DimensionLabel = NXOpen.Preferences.SketchPreferences.DimensionLabelType.Expression\n    \n    theSession.Preferences.Sketch.TextSizeFixed = True\n    \n    theSession.Preferences.Sketch.FixedTextSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayParenthesesOnReferenceDimensions = True\n    \n    theSession.Preferences.Sketch.DisplayReferenceGeometry = False\n    \n    theSession.Preferences.Sketch.ConstraintSymbolSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayObjectColor = False\n    \n    theSession.Preferences.Sketch.DisplayObjectName = True\n    \n    nXObject1 = sketchInPlaceBuilder1.Commit()\n    \n    sketch1 = nXObject1\n    feature1 = sketch1.Feature\n    \n    markId4 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "update")\n    \n    nErrs1 = theSession.UpdateManager.DoUpdate(markId4)\n    \n    sketch1.Activate(NXOpen.Sketch.ViewReorient.TrueValue)\n    \n    theSession.DeleteUndoMark(markId3, None)\n    \n    theSession.SetUndoMarkName(markId1, "Create Sketch")\n    \n    sketchInPlaceBuilder1.Destroy()\n    \n    sketchAlongPathBuilder1.Destroy()\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression2)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression1)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    plane1.DestroyPlane()\n    \n    markId5 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Profile short list")\n    \n    markId6 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Rectangle")\n    \n    expression3 = workPart.Expressions.CreateSystemExpression("120")\n    \n    expression4 = workPart.Expressions.CreateSystemExpression("120")\n    \n    workPart.Expressions.Edit(expression3, "120")\n    \n    theSession.SetUndoMarkVisibility(markId6, "Create Rectangle", NXOpen.Session.MarkVisibility.Visible)\n    \n    # ----------------------------------------------\n    # Creating rectangle using By 2 Points method \n    # ----------------------------------------------\n    startPoint1 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    endPoint1 = NXOpen.Point3d(120.0, 0.0, 0.0)\n    line1 = workPart.Curves.CreateLine(startPoint1, endPoint1)\n    \n    startPoint2 = NXOpen.Point3d(120.0, 0.0, 0.0)\n    endPoint2 = NXOpen.Point3d(120.0, 120.0, 0.0)\n    line2 = workPart.Curves.CreateLine(startPoint2, endPoint2)\n    \n    startPoint3 = NXOpen.Point3d(120.0, 120.0, 0.0)\n    endPoint3 = NXOpen.Point3d(0.0, 120.0, 0.0)\n    line3 = workPart.Curves.CreateLine(startPoint3, endPoint3)\n    \n    startPoint4 = NXOpen.Point3d(0.0, 120.0, 0.0)\n    endPoint4 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    line4 = workPart.Curves.CreateLine(startPoint4, endPoint4)\n    \n    theSession.ActiveSketch.AddGeometry(line1, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    theSession.ActiveSketch.AddGeometry(line2, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    theSession.ActiveSketch.AddGeometry(line3, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    theSession.ActiveSketch.AddGeometry(line4, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    geom1_1 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_1.Geometry = line1\n    geom1_1.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_1.SplineDefiningPointIndex = 0\n    geom2_1 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_1.Geometry = line2\n    geom2_1.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_1.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint1 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_1, geom2_1)\n    \n    geom1_2 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_2.Geometry = line2\n    geom1_2.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_2.SplineDefiningPointIndex = 0\n    geom2_2 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_2.Geometry = line3\n    geom2_2.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_2.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint2 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_2, geom2_2)\n    \n    geom1_3 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_3.Geometry = line3\n    geom1_3.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_3.SplineDefiningPointIndex = 0\n    geom2_3 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_3.Geometry = line4\n    geom2_3.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_3.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint3 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_3, geom2_3)\n    \n    geom1_4 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_4.Geometry = line4\n    geom1_4.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_4.SplineDefiningPointIndex = 0\n    geom2_4 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_4.Geometry = line1\n    geom2_4.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_4.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint4 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_4, geom2_4)\n    \n    geom1 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1.Geometry = line1\n    geom1.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    geom1.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint5 = theSession.ActiveSketch.CreateHorizontalConstraint(geom1)\n    \n    conGeom1_1 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_1.Geometry = line1\n    conGeom1_1.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_1.SplineDefiningPointIndex = 0\n    conGeom2_1 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_1.Geometry = line2\n    conGeom2_1.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_1.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint6 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_1, conGeom2_1)\n    \n    conGeom1_2 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_2.Geometry = line2\n    conGeom1_2.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_2.SplineDefiningPointIndex = 0\n    conGeom2_2 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_2.Geometry = line3\n    conGeom2_2.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_2.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint7 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_2, conGeom2_2)\n    \n    conGeom1_3 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_3.Geometry = line3\n    conGeom1_3.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_3.SplineDefiningPointIndex = 0\n    conGeom2_3 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_3.Geometry = line4\n    conGeom2_3.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_3.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint8 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_3, conGeom2_3)\n    \n    conGeom1_4 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_4.Geometry = line4\n    conGeom1_4.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_4.SplineDefiningPointIndex = 0\n    conGeom2_4 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_4.Geometry = line1\n    conGeom2_4.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_4.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint9 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_4, conGeom2_4)\n    \n    geom1_5 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_5.Geometry = line1\n    geom1_5.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom1_5.SplineDefiningPointIndex = 0\n    geom2_5 = NXOpen.Sketch.ConstraintGeometry()\n    \n    datumCsys1 = workPart.Features.FindObject("SKETCH(1:1B)")\n    point1 = datumCsys1.FindObject("POINT 1")\n    geom2_5.Geometry = point1\n    geom2_5.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    geom2_5.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint10 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_5, geom2_5)\n    \n    dimObject1_1 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject1_1.Geometry = line1\n    dimObject1_1.AssocType = NXOpen.Sketch.AssocType.StartPoint\n    dimObject1_1.AssocValue = 0\n    dimObject1_1.HelpPoint.X = 0.0\n    dimObject1_1.HelpPoint.Y = 0.0\n    dimObject1_1.HelpPoint.Z = 0.0\n    dimObject1_1.View = NXOpen.NXObject.Null\n    dimObject2_1 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject2_1.Geometry = line1\n    dimObject2_1.AssocType = NXOpen.Sketch.AssocType.EndPoint\n    dimObject2_1.AssocValue = 0\n    dimObject2_1.HelpPoint.X = 0.0\n    dimObject2_1.HelpPoint.Y = 0.0\n    dimObject2_1.HelpPoint.Z = 0.0\n    dimObject2_1.View = NXOpen.NXObject.Null\n    dimOrigin1 = NXOpen.Point3d(60.0, -10.497347910803205, 0.0)\n    sketchDimensionalConstraint1 = theSession.ActiveSketch.CreateDimension(NXOpen.Sketch.ConstraintType.ParallelDim, dimObject1_1, dimObject2_1, dimOrigin1, expression3, NXOpen.Sketch.DimensionOption.CreateAsDriving)\n    \n    sketchHelpedDimensionalConstraint1 = sketchDimensionalConstraint1\n    dimension1 = sketchHelpedDimensionalConstraint1.AssociatedDimension\n    \n    dimObject1_2 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject1_2.Geometry = line2\n    dimObject1_2.AssocType = NXOpen.Sketch.AssocType.StartPoint\n    dimObject1_2.AssocValue = 0\n    dimObject1_2.HelpPoint.X = 0.0\n    dimObject1_2.HelpPoint.Y = 0.0\n    dimObject1_2.HelpPoint.Z = 0.0\n    dimObject1_2.View = NXOpen.NXObject.Null\n    dimObject2_2 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject2_2.Geometry = line2\n    dimObject2_2.AssocType = NXOpen.Sketch.AssocType.EndPoint\n    dimObject2_2.AssocValue = 0\n    dimObject2_2.HelpPoint.X = 0.0\n    dimObject2_2.HelpPoint.Y = 0.0\n    dimObject2_2.HelpPoint.Z = 0.0\n    dimObject2_2.View = NXOpen.NXObject.Null\n    dimOrigin2 = NXOpen.Point3d(130.4973479108032, 60.0, 0.0)\n    sketchDimensionalConstraint2 = theSession.ActiveSketch.CreateDimension(NXOpen.Sketch.ConstraintType.ParallelDim, dimObject1_2, dimObject2_2, dimOrigin2, expression4, NXOpen.Sketch.DimensionOption.CreateAsDriving)\n    \n    sketchHelpedDimensionalConstraint2 = sketchDimensionalConstraint2\n    dimension2 = sketchHelpedDimensionalConstraint2.AssociatedDimension\n    \n    theSession.Preferences.Sketch.AutoDimensionsToArcCenter = False\n    \n    theSession.ActiveSketch.Update()\n    \n    theSession.Preferences.Sketch.AutoDimensionsToArcCenter = True\n    \n    geoms1 = [NXOpen.SmartObject.Null] * 4 \n    geoms1[0] = line1\n    geoms1[1] = line2\n    geoms1[2] = line3\n    geoms1[3] = line4\n    theSession.ActiveSketch.UpdateConstraintDisplay(geoms1)\n    \n    geoms2 = [NXOpen.SmartObject.Null] * 4 \n    geoms2[0] = line1\n    geoms2[1] = line2\n    geoms2[2] = line3\n    geoms2[3] = line4\n    theSession.ActiveSketch.UpdateDimensionDisplay(geoms2)\n    \n    scaleAboutPoint1 = NXOpen.Point3d(59.714600980100336, 53.079645315644754, 0.0)\n    viewCenter1 = NXOpen.Point3d(-59.714600980100336, -53.079645315644655, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(0.80000000000000004, scaleAboutPoint1, viewCenter1)\n    \n    origin2 = NXOpen.Point3d(83.052671776586593, 40.34978851756243, 0.0)\n    workPart.ModelingViews.WorkView.SetOrigin(origin2)\n    \n    origin3 = NXOpen.Point3d(83.052671776586593, 40.34978851756243, 0.0)\n    workPart.ModelingViews.WorkView.SetOrigin(origin3)\n    \n    # ----------------------------------------------\n    #   Menu: File->Finish Sketch\n    # ----------------------------------------------\n    sketch2 = theSession.ActiveSketch\n    \n    markId7 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Deactivate Sketch")\n    \n    theSession.ActiveSketch.Deactivate(NXOpen.Sketch.ViewReorient.TrueValue, NXOpen.Sketch.UpdateLevel.Model)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Design Feature->Extrude...\n    # ----------------------------------------------\n    markId8 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    extrudeBuilder1 = workPart.Features.CreateExtrudeBuilder(NXOpen.Features.Feature.Null)\n    \n    section1 = workPart.Sections.CreateSection(0.0094999999999999998, 0.01, 0.5)\n    \n    extrudeBuilder1.Section = section1\n    \n    extrudeBuilder1.AllowSelfIntersectingSection(True)\n    \n    unit2 = extrudeBuilder1.Draft.FrontDraftAngle.Units\n    \n    expression5 = workPart.Expressions.CreateSystemExpressionWithUnits("2.00", unit2)\n    \n    extrudeBuilder1.DistanceTolerance = 0.01\n    \n    extrudeBuilder1.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Create\n    \n    targetBodies1 = [NXOpen.Body.Null] * 1 \n    targetBodies1[0] = NXOpen.Body.Null\n    extrudeBuilder1.BooleanOperation.SetTargetBodies(targetBodies1)\n    \n    smartVolumeProfileBuilder1 = extrudeBuilder1.SmartVolumeProfile\n    \n    smartVolumeProfileBuilder1.OpenProfileSmartVolumeOption = False\n    \n    smartVolumeProfileBuilder1.CloseProfileRule = NXOpen.GeometricUtilities.SmartVolumeProfileBuilder.CloseProfileRuleType.Fci\n    \n    theSession.SetUndoMarkName(markId8, "Extrude Dialog")\n    \n    extrudeBuilder1.Limits.StartExtend.Value.SetFormula("0")\n    \n    extrudeBuilder1.Limits.EndExtend.Value.SetFormula("25")\n    \n    extrudeBuilder1.Draft.FrontDraftAngle.SetFormula("2")\n    \n    extrudeBuilder1.Draft.BackDraftAngle.SetFormula("2")\n    \n    extrudeBuilder1.Offset.StartOffset.SetFormula("0")\n    \n    extrudeBuilder1.Offset.EndOffset.SetFormula("5")\n    \n    section1.DistanceTolerance = 0.01\n    \n    section1.ChainingTolerance = 0.0094999999999999998\n    \n    section1.SetAllowedEntityTypes(NXOpen.Section.AllowTypes.OnlyCurves)\n    \n    markId9 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "section mark")\n    \n    markId10 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, None)\n    \n    features1 = [NXOpen.Features.Feature.Null] * 1 \n    sketchFeature1 = feature1\n    features1[0] = sketchFeature1\n    curveFeatureRule1 = workPart.ScRuleFactory.CreateRuleCurveFeature(features1)\n    \n    section1.AllowSelfIntersection(True)\n    \n    rules1 = [None] * 1 \n    rules1[0] = curveFeatureRule1\n    helpPoint1 = NXOpen.Point3d(120.0, 40.862250218942215, 0.0)\n    section1.AddToSection(rules1, line2, NXOpen.NXObject.Null, NXOpen.NXObject.Null, helpPoint1, NXOpen.Section.Mode.Create, False)\n    \n    theSession.DeleteUndoMark(markId10, None)\n    \n    direction1 = workPart.Directions.CreateDirection(sketch2, NXOpen.Sense.Forward, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    extrudeBuilder1.Direction = direction1\n    \n    expression6 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    theSession.DeleteUndoMark(markId9, None)\n    \n    extrudeBuilder1.Limits.EndExtend.Value.SetFormula("5")\n    \n    markId11 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Extrude")\n    \n    theSession.DeleteUndoMark(markId11, None)\n    \n    markId12 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Extrude")\n    \n    extrudeBuilder1.ParentFeatureInternal = False\n    \n    feature2 = extrudeBuilder1.CommitFeature()\n    \n    theSession.DeleteUndoMark(markId12, None)\n    \n    theSession.SetUndoMarkName(markId8, "Extrude")\n    \n    expression7 = extrudeBuilder1.Limits.StartExtend.Value\n    expression8 = extrudeBuilder1.Limits.EndExtend.Value\n    extrudeBuilder1.Destroy()\n    \n    workPart.Expressions.Delete(expression5)\n    \n    workPart.Expressions.Delete(expression6)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch...\n    # ----------------------------------------------\n    markId13 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    sketchInPlaceBuilder2 = workPart.Sketches.CreateSketchInPlaceBuilder2(NXOpen.Sketch.Null)\n    \n    origin4 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal2 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane2 = workPart.Planes.CreatePlane(origin4, normal2, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    sketchInPlaceBuilder2.PlaneReference = plane2\n    \n    expression9 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    expression10 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    sketchAlongPathBuilder2 = workPart.Sketches.CreateSketchAlongPathBuilder(NXOpen.Sketch.Null)\n    \n    sketchAlongPathBuilder2.PlaneLocation.Expression.SetFormula("0")\n    \n    theSession.SetUndoMarkName(markId13, "Create Sketch Dialog")\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch Curve->Line...\n    # ----------------------------------------------\n    markId14 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.DeleteUndoMark(markId14, None)\n    \n    markId15 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.Preferences.Sketch.CreateInferredConstraints = True\n    \n    theSession.Preferences.Sketch.ContinuousAutoDimensioning = True\n    \n    theSession.Preferences.Sketch.DimensionLabel = NXOpen.Preferences.SketchPreferences.DimensionLabelType.Expression\n    \n    theSession.Preferences.Sketch.TextSizeFixed = True\n    \n    theSession.Preferences.Sketch.FixedTextSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayParenthesesOnReferenceDimensions = True\n    \n    theSession.Preferences.Sketch.DisplayReferenceGeometry = False\n    \n    theSession.Preferences.Sketch.ConstraintSymbolSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayObjectColor = False\n    \n    theSession.Preferences.Sketch.DisplayObjectName = True\n    \n    nXObject2 = sketchInPlaceBuilder2.Commit()\n    \n    sketch3 = nXObject2\n    feature3 = sketch3.Feature\n    \n    markId16 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "update")\n    \n    nErrs2 = theSession.UpdateManager.DoUpdate(markId16)\n    \n    sketch3.Activate(NXOpen.Sketch.ViewReorient.TrueValue)\n    \n    theSession.DeleteUndoMark(markId15, None)\n    \n    theSession.SetUndoMarkName(markId13, "Create Sketch")\n    \n    sketchInPlaceBuilder2.Destroy()\n    \n    sketchAlongPathBuilder2.Destroy()\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression10)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression9)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    plane2.DestroyPlane()\n    \n    markId17 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Profile short list")\n    \n    markId18 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Curve")\n    \n    origin5 = NXOpen.Point3d(21.293578644066727, 42.587157288133646, 0.0)\n    workPart.ModelingViews.WorkView.SetOrigin(origin5)\n    \n    origin6 = NXOpen.Point3d(21.293578644066727, 42.587157288133646, 0.0)\n    workPart.ModelingViews.WorkView.SetOrigin(origin6)\n    \n    theSession.SetUndoMarkVisibility(markId18, "Curve", NXOpen.Session.MarkVisibility.Visible)\n    \n    startPoint5 = NXOpen.Point3d(60.0, 0.0, 0.0)\n    endPoint5 = NXOpen.Point3d(60.000000000000064, 120.0, 0.0)\n    line5 = workPart.Curves.CreateLine(startPoint5, endPoint5)\n    \n    theSession.ActiveSketch.AddGeometry(line5, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    geom1_6 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_6.Geometry = line5\n    geom1_6.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom1_6.SplineDefiningPointIndex = 0\n    geom2_6 = NXOpen.Sketch.ConstraintGeometry()\n    \n    extrude1 = feature2\n    edge1 = extrude1.FindObject("EDGE * 130 * 170 {(0,0,5)(60,0,5)(120,0,5) EXTRUDE(2)}")\n    geom2_6.Geometry = edge1\n    geom2_6.PointType = NXOpen.Sketch.ConstraintPointType.MidVertex\n    geom2_6.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint11 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_6, geom2_6)\n    \n    geom2 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2.Geometry = line5\n    geom2.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    geom2.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint12 = theSession.ActiveSketch.CreateVerticalConstraint(geom2)\n    \n    geom1_7 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_7.Geometry = line5\n    geom1_7.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_7.SplineDefiningPointIndex = 0\n    geom2_7 = NXOpen.Sketch.ConstraintGeometry()\n    \n    edge2 = extrude1.FindObject("EDGE * 130 * 150 {(120,120,5)(60,120,5)(0,120,5) EXTRUDE(2)}")\n    geom2_7.Geometry = edge2\n    geom2_7.PointType = NXOpen.Sketch.ConstraintPointType.MidVertex\n    geom2_7.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint13 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_7, geom2_7)\n    \n    theSession.Preferences.Sketch.AutoDimensionsToArcCenter = False\n    \n    theSession.ActiveSketch.Update()\n    \n    theSession.Preferences.Sketch.AutoDimensionsToArcCenter = True\n    \n    # ----------------------------------------------\n    #   Dialog Begin Line\n    # ----------------------------------------------\n    # ----------------------------------------------\n    #   Menu: File->Finish Sketch\n    # ----------------------------------------------\n    sketch4 = theSession.ActiveSketch\n    \n    markId19 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Deactivate Sketch")\n    \n    theSession.ActiveSketch.Deactivate(NXOpen.Sketch.ViewReorient.TrueValue, NXOpen.Sketch.UpdateLevel.Model)\n    \n    # ----------------------------------------------\n    #   Menu: Edit->Undo\n    # ----------------------------------------------\n    marksRecycled1, undoUnavailable1 = theSession.UndoLastNVisibleMarks(1)\n    \n    # ----------------------------------------------\n    #   Menu: Edit->Undo\n    # ----------------------------------------------\n    marksRecycled2, undoUnavailable2 = theSession.UndoLastNVisibleMarks(1)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch...\n    # ----------------------------------------------\n    markId20 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    sketchInPlaceBuilder3 = workPart.Sketches.CreateSketchInPlaceBuilder2(NXOpen.Sketch.Null)\n    \n    origin7 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal3 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane3 = workPart.Planes.CreatePlane(origin7, normal3, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    sketchInPlaceBuilder3.PlaneReference = plane3\n    \n    expression11 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    expression12 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    sketchAlongPathBuilder3 = workPart.Sketches.CreateSketchAlongPathBuilder(NXOpen.Sketch.Null)\n    \n    sketchAlongPathBuilder3.PlaneLocation.Expression.SetFormula("0")\n    \n    theSession.SetUndoMarkName(markId20, "Create Sketch Dialog")\n    \n    scalar1 = workPart.Scalars.CreateScalar(1.0, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    edge3 = extrude1.FindObject("EDGE * 130 * 160 {(0,120,5)(0,60,5)(0,0,5) EXTRUDE(2)}")\n    point2 = workPart.Points.CreatePoint(edge3, scalar1, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    edge4 = extrude1.FindObject("EDGE * 130 * 140 {(120,0,5)(120,60,5)(120,120,5) EXTRUDE(2)}")\n    direction2 = workPart.Directions.CreateDirection(edge4, NXOpen.Sense.Forward, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    face1 = extrude1.FindObject("FACE 130 {(60,60,5) EXTRUDE(2)}")\n    xform1 = workPart.Xforms.CreateXformByPlaneXDirPoint(face1, direction2, point2, NXOpen.SmartObject.UpdateOption.WithinModeling, 0.625, False, False)\n    \n    cartesianCoordinateSystem1 = workPart.CoordinateSystems.CreateCoordinateSystem(xform1, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    sketchInPlaceBuilder3.Csystem = cartesianCoordinateSystem1\n    \n    origin8 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal4 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane4 = workPart.Planes.CreatePlane(origin8, normal4, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    plane4.SetMethod(NXOpen.PlaneTypes.MethodType.Coincident)\n    \n    geom3 = [NXOpen.NXObject.Null] * 1 \n    geom3[0] = face1\n    plane4.SetGeometry(geom3)\n    \n    plane4.SetFlip(False)\n    \n    plane4.SetExpression(None)\n    \n    plane4.SetAlternate(NXOpen.PlaneTypes.AlternateType.One)\n    \n    plane4.Evaluate()\n    \n    origin9 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal5 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane5 = workPart.Planes.CreatePlane(origin9, normal5, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    expression13 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    expression14 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    plane5.SynchronizeToPlane(plane4)\n    \n    scalar2 = workPart.Scalars.CreateScalar(100.0, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    point3 = workPart.Points.CreatePoint(edge3, scalar2, NXOpen.PointCollection.PointOnCurveLocationOption.PercentParameter, NXOpen.Point.Null, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    plane5.SetMethod(NXOpen.PlaneTypes.MethodType.Coincident)\n    \n    geom4 = [NXOpen.NXObject.Null] * 1 \n    geom4[0] = face1\n    plane5.SetGeometry(geom4)\n    \n    plane5.SetAlternate(NXOpen.PlaneTypes.AlternateType.One)\n    \n    plane5.Evaluate()\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch Curve->Line...\n    # ----------------------------------------------\n    markId21 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.DeleteUndoMark(markId21, None)\n    \n    markId22 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.Preferences.Sketch.CreateInferredConstraints = True\n    \n    theSession.Preferences.Sketch.ContinuousAutoDimensioning = True\n    \n    theSession.Preferences.Sketch.DimensionLabel = NXOpen.Preferences.SketchPreferences.DimensionLabelType.Expression\n    \n    theSession.Preferences.Sketch.TextSizeFixed = True\n    \n    theSession.Preferences.Sketch.FixedTextSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayParenthesesOnReferenceDimensions = True\n    \n    theSession.Preferences.Sketch.DisplayReferenceGeometry = False\n    \n    theSession.Preferences.Sketch.ConstraintSymbolSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayObjectColor = False\n    \n    theSession.Preferences.Sketch.DisplayObjectName = True\n    \n    nXObject3 = sketchInPlaceBuilder3.Commit()\n    \n    sketch5 = nXObject3\n    feature4 = sketch5.Feature\n    \n    markId23 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "update")\n    \n    nErrs3 = theSession.UpdateManager.DoUpdate(markId23)\n    \n    sketch5.Activate(NXOpen.Sketch.ViewReorient.TrueValue)\n    \n    theSession.DeleteUndoMark(markId22, None)\n    \n    theSession.SetUndoMarkName(markId20, "Create Sketch")\n    \n    sketchInPlaceBuilder3.Destroy()\n    \n    sketchAlongPathBuilder3.Destroy()\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression12)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    workPart.Points.DeletePoint(point3)\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression11)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    plane3.DestroyPlane()\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression14)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression13)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    plane5.DestroyPlane()\n    \n    markId24 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Profile short list")\n    \n    origin10 = NXOpen.Point3d(54.622658260866984, 68.509774767867029, 5.0)\n    workPart.ModelingViews.WorkView.SetOrigin(origin10)\n    \n    origin11 = NXOpen.Point3d(54.622658260866984, 68.509774767867029, 5.0)\n    workPart.ModelingViews.WorkView.SetOrigin(origin11)\n    \n    markId25 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Curve")\n    \n    theSession.SetUndoMarkVisibility(markId25, "Curve", NXOpen.Session.MarkVisibility.Visible)\n    \n    startPoint6 = NXOpen.Point3d(60.0, 0.0, 5.0)\n    endPoint6 = NXOpen.Point3d(60.0, 120.0, 5.0)\n    line6 = workPart.Curves.CreateLine(startPoint6, endPoint6)\n    \n    theSession.ActiveSketch.AddGeometry(line6, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    geom1_8 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_8.Geometry = line6\n    geom1_8.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom1_8.SplineDefiningPointIndex = 0\n    geom2_8 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_8.Geometry = edge1\n    geom2_8.PointType = NXOpen.Sketch.ConstraintPointType.MidVertex\n    geom2_8.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint14 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_8, geom2_8)\n    \n    geom5 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom5.Geometry = line6\n    geom5.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    geom5.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint15 = theSession.ActiveSketch.CreateHorizontalConstraint(geom5)\n    \n    geom1_9 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_9.Geometry = line6\n    geom1_9.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_9.SplineDefiningPointIndex = 0\n    geom2_9 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_9.Geometry = edge2\n    geom2_9.PointType = NXOpen.Sketch.ConstraintPointType.MidVertex\n    geom2_9.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint16 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_9, geom2_9)\n    \n    theSession.Preferences.Sketch.AutoDimensionsToArcCenter = False\n    \n    theSession.ActiveSketch.Update()\n    \n    theSession.Preferences.Sketch.AutoDimensionsToArcCenter = True\n    \n    # ----------------------------------------------\n    #   Dialog Begin Line\n    # ----------------------------------------------\n    # ----------------------------------------------\n    #   Menu: File->Finish Sketch\n    # ----------------------------------------------\n    sketch6 = theSession.ActiveSketch\n    \n    markId26 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Deactivate Sketch")\n    \n    theSession.ActiveSketch.Deactivate(NXOpen.Sketch.ViewReorient.TrueValue, NXOpen.Sketch.UpdateLevel.Model)\n    \n    origin12 = NXOpen.Point3d(70.591492325283639, 88.574068011735548, 2.8602988790552368)\n    workPart.ModelingViews.WorkView.SetOrigin(origin12)\n    \n    origin13 = NXOpen.Point3d(70.591492325283639, 88.574068011735548, 2.8602988790552368)\n    workPart.ModelingViews.WorkView.SetOrigin(origin13)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch...\n    # ----------------------------------------------\n    markId27 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    sketchInPlaceBuilder4 = workPart.Sketches.CreateSketchInPlaceBuilder2(NXOpen.Sketch.Null)\n    \n    origin14 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal6 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane6 = workPart.Planes.CreatePlane(origin14, normal6, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    sketchInPlaceBuilder4.PlaneReference = plane6\n    \n    expression15 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    expression16 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    sketchAlongPathBuilder4 = workPart.Sketches.CreateSketchAlongPathBuilder(NXOpen.Sketch.Null)\n    \n    sketchAlongPathBuilder4.PlaneLocation.Expression.SetFormula("0")\n    \n    theSession.SetUndoMarkName(markId27, "Create Sketch Dialog")\n    \n    scalar3 = workPart.Scalars.CreateScalar(1.0, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    point4 = workPart.Points.CreatePoint(edge3, scalar3, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    direction3 = workPart.Directions.CreateDirection(edge4, NXOpen.Sense.Forward, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    xform2 = workPart.Xforms.CreateXformByPlaneXDirPoint(face1, direction3, point4, NXOpen.SmartObject.UpdateOption.WithinModeling, 0.625, False, False)\n    \n    cartesianCoordinateSystem2 = workPart.CoordinateSystems.CreateCoordinateSystem(xform2, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    sketchInPlaceBuilder4.Csystem = cartesianCoordinateSystem2\n    \n    origin15 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal7 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane7 = workPart.Planes.CreatePlane(origin15, normal7, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    plane7.SetMethod(NXOpen.PlaneTypes.MethodType.Coincident)\n    \n    geom6 = [NXOpen.NXObject.Null] * 1 \n    geom6[0] = face1\n    plane7.SetGeometry(geom6)\n    \n    plane7.SetFlip(False)\n    \n    plane7.SetExpression(None)\n    \n    plane7.SetAlternate(NXOpen.PlaneTypes.AlternateType.One)\n    \n    plane7.Evaluate()\n    \n    origin16 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal8 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane8 = workPart.Planes.CreatePlane(origin16, normal8, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    expression17 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    expression18 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    plane8.SynchronizeToPlane(plane7)\n    \n    scalar4 = workPart.Scalars.CreateScalar(100.0, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    point5 = workPart.Points.CreatePoint(edge3, scalar4, NXOpen.PointCollection.PointOnCurveLocationOption.PercentParameter, NXOpen.Point.Null, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    plane8.SetMethod(NXOpen.PlaneTypes.MethodType.Coincident)\n    \n    geom7 = [NXOpen.NXObject.Null] * 1 \n    geom7[0] = face1\n    plane8.SetGeometry(geom7)\n    \n    plane8.SetAlternate(NXOpen.PlaneTypes.AlternateType.One)\n    \n    plane8.Evaluate()\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Design Feature->Extrude...\n    # ----------------------------------------------\n    markId28 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.DeleteUndoMark(markId28, None)\n    \n    markId29 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.Preferences.Sketch.CreateInferredConstraints = True\n    \n    theSession.Preferences.Sketch.ContinuousAutoDimensioning = True\n    \n    theSession.Preferences.Sketch.DimensionLabel = NXOpen.Preferences.SketchPreferences.DimensionLabelType.Expression\n    \n    theSession.Preferences.Sketch.TextSizeFixed = True\n    \n    theSession.Preferences.Sketch.FixedTextSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayParenthesesOnReferenceDimensions = True\n    \n    theSession.Preferences.Sketch.DisplayReferenceGeometry = False\n    \n    theSession.Preferences.Sketch.ConstraintSymbolSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayObjectColor = False\n    \n    theSession.Preferences.Sketch.DisplayObjectName = True\n    \n    nXObject4 = sketchInPlaceBuilder4.Commit()\n    \n    sketch7 = nXObject4\n    feature5 = sketch7.Feature\n    \n    markId30 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "update")\n    \n    nErrs4 = theSession.UpdateManager.DoUpdate(markId30)\n    \n    sketch7.Activate(NXOpen.Sketch.ViewReorient.TrueValue)\n    \n    theSession.DeleteUndoMark(markId29, None)\n    \n    theSession.SetUndoMarkName(markId27, "Create Sketch")\n    \n    sketchInPlaceBuilder4.Destroy()\n    \n    sketchAlongPathBuilder4.Destroy()\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression16)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    workPart.Points.DeletePoint(point5)\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression15)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    plane6.DestroyPlane()\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression18)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression17)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    plane8.DestroyPlane()\n    \n    markId31 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    extrudeBuilder2 = workPart.Features.CreateExtrudeBuilder(NXOpen.Features.Feature.Null)\n    \n    section2 = workPart.Sections.CreateSection(0.0094999999999999998, 0.01, 0.5)\n    \n    extrudeBuilder2.Section = section2\n    \n    extrudeBuilder2.AllowSelfIntersectingSection(True)\n    \n    expression19 = workPart.Expressions.CreateSystemExpressionWithUnits("2.00", unit2)\n    \n    extrudeBuilder2.DistanceTolerance = 0.01\n    \n    extrudeBuilder2.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Create\n    \n    targetBodies2 = [NXOpen.Body.Null] * 1 \n    targetBodies2[0] = NXOpen.Body.Null\n    extrudeBuilder2.BooleanOperation.SetTargetBodies(targetBodies2)\n    \n    extrudeBuilder2.Limits.StartExtend.Value.SetFormula("0")\n    \n    extrudeBuilder2.Limits.EndExtend.Value.SetFormula("5")\n    \n    extrudeBuilder2.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Create\n    \n    targetBodies3 = [NXOpen.Body.Null] * 1 \n    targetBodies3[0] = NXOpen.Body.Null\n    extrudeBuilder2.BooleanOperation.SetTargetBodies(targetBodies3)\n    \n    extrudeBuilder2.Draft.FrontDraftAngle.SetFormula("2")\n    \n    extrudeBuilder2.Draft.BackDraftAngle.SetFormula("2")\n    \n    extrudeBuilder2.Offset.StartOffset.SetFormula("0")\n    \n    extrudeBuilder2.Offset.EndOffset.SetFormula("5")\n    \n    smartVolumeProfileBuilder2 = extrudeBuilder2.SmartVolumeProfile\n    \n    smartVolumeProfileBuilder2.OpenProfileSmartVolumeOption = False\n    \n    smartVolumeProfileBuilder2.CloseProfileRule = NXOpen.GeometricUtilities.SmartVolumeProfileBuilder.CloseProfileRuleType.Fci\n    \n    theSession.SetUndoMarkName(markId31, "Extrude Dialog")\n    \n    section2.DistanceTolerance = 0.01\n    \n    section2.ChainingTolerance = 0.0094999999999999998\n    \n    section2.SetAllowedEntityTypes(NXOpen.Section.AllowTypes.OnlyCurves)\n    \n    origin17 = NXOpen.Point3d(82.705493863911443, 158.31312817980088, 5.0)\n    workPart.ModelingViews.WorkView.SetOrigin(origin17)\n    \n    origin18 = NXOpen.Point3d(82.705493863911443, 158.31312817980088, 5.0)\n    workPart.ModelingViews.WorkView.SetOrigin(origin18)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch Curve->Rectangle...\n    # ----------------------------------------------\n    extrudeBuilder2.Destroy()\n    \n    section2.Destroy()\n    \n    workPart.Expressions.Delete(expression19)\n    \n    theSession.UndoToMark(markId31, None)\n    \n    theSession.DeleteUndoMark(markId31, None)\n    \n    markId32 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Profile short list")\n    \n    scaleAboutPoint2 = NXOpen.Point3d(-97.055514254478311, 22.527989000244549, 0.0)\n    viewCenter2 = NXOpen.Point3d(97.055514254478311, -22.527989000244649, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint2, viewCenter2)\n    \n    scaleAboutPoint3 = NXOpen.Point3d(-77.644411403582623, 18.022391200195639, 0.0)\n    viewCenter3 = NXOpen.Point3d(77.644411403582623, -18.02239120019572, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint3, viewCenter3)\n    \n    scaleAboutPoint4 = NXOpen.Point3d(-62.11552912286615, 14.41791296015651, 0.0)\n    viewCenter4 = NXOpen.Point3d(62.115529122866086, -14.417912960156576, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint4, viewCenter4)\n    \n    scaleAboutPoint5 = NXOpen.Point3d(-49.376414247111384, 11.534330368125211, 0.0)\n    viewCenter5 = NXOpen.Point3d(49.376414247111342, -11.534330368125264, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint5, viewCenter5)\n    \n    markId33 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Rectangle")\n    \n    expression20 = workPart.Expressions.CreateSystemExpression("5.9")\n    \n    expression21 = workPart.Expressions.CreateSystemExpression("5.9")\n    \n    workPart.Expressions.Edit(expression20, "5.9")\n    \n    theSession.SetUndoMarkVisibility(markId33, "Create Rectangle", NXOpen.Session.MarkVisibility.Visible)\n    \n    # ----------------------------------------------\n    # Creating rectangle using By 2 Points method \n    # ----------------------------------------------\n    startPoint7 = NXOpen.Point3d(59.899999999999999, 60.0, 5.0)\n    endPoint7 = NXOpen.Point3d(59.899999999999999, 65.900000000000006, 5.0)\n    line7 = workPart.Curves.CreateLine(startPoint7, endPoint7)\n    \n    startPoint8 = NXOpen.Point3d(59.899999999999999, 65.900000000000006, 5.0)\n    endPoint8 = NXOpen.Point3d(54.0, 65.900000000000006, 5.0)\n    line8 = workPart.Curves.CreateLine(startPoint8, endPoint8)\n    \n    startPoint9 = NXOpen.Point3d(54.0, 65.900000000000006, 5.0)\n    endPoint9 = NXOpen.Point3d(54.0, 60.0, 5.0)\n    line9 = workPart.Curves.CreateLine(startPoint9, endPoint9)\n    \n    startPoint10 = NXOpen.Point3d(54.0, 60.0, 5.0)\n    endPoint10 = NXOpen.Point3d(59.899999999999999, 60.0, 5.0)\n    line10 = workPart.Curves.CreateLine(startPoint10, endPoint10)\n    \n    theSession.ActiveSketch.AddGeometry(line7, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    theSession.ActiveSketch.AddGeometry(line8, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    theSession.ActiveSketch.AddGeometry(line9, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    theSession.ActiveSketch.AddGeometry(line10, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    geom1_10 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_10.Geometry = line7\n    geom1_10.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_10.SplineDefiningPointIndex = 0\n    geom2_10 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_10.Geometry = line8\n    geom2_10.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_10.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint17 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_10, geom2_10)\n    \n    geom1_11 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_11.Geometry = line8\n    geom1_11.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_11.SplineDefiningPointIndex = 0\n    geom2_11 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_11.Geometry = line9\n    geom2_11.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_11.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint18 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_11, geom2_11)\n    \n    geom1_12 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_12.Geometry = line9\n    geom1_12.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_12.SplineDefiningPointIndex = 0\n    geom2_12 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_12.Geometry = line10\n    geom2_12.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_12.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint19 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_12, geom2_12)\n    \n    geom1_13 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_13.Geometry = line10\n    geom1_13.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_13.SplineDefiningPointIndex = 0\n    geom2_13 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_13.Geometry = line7\n    geom2_13.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_13.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint20 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_13, geom2_13)\n    \n    geom8 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom8.Geometry = line7\n    geom8.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    geom8.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint21 = theSession.ActiveSketch.CreateHorizontalConstraint(geom8)\n    \n    conGeom1_5 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_5.Geometry = line7\n    conGeom1_5.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_5.SplineDefiningPointIndex = 0\n    conGeom2_5 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_5.Geometry = line8\n    conGeom2_5.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_5.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint22 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_5, conGeom2_5)\n    \n    conGeom1_6 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_6.Geometry = line8\n    conGeom1_6.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_6.SplineDefiningPointIndex = 0\n    conGeom2_6 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_6.Geometry = line9\n    conGeom2_6.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_6.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint23 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_6, conGeom2_6)\n    \n    conGeom1_7 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_7.Geometry = line9\n    conGeom1_7.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_7.SplineDefiningPointIndex = 0\n    conGeom2_7 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_7.Geometry = line10\n    conGeom2_7.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_7.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint24 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_7, conGeom2_7)\n    \n    conGeom1_8 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_8.Geometry = line10\n    conGeom1_8.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_8.SplineDefiningPointIndex = 0\n    conGeom2_8 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_8.Geometry = line7\n    conGeom2_8.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_8.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint25 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_8, conGeom2_8)\n    \n    dimObject1_3 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject1_3.Geometry = line7\n    dimObject1_3.AssocType = NXOpen.Sketch.AssocType.StartPoint\n    dimObject1_3.AssocValue = 0\n    dimObject1_3.HelpPoint.X = 0.0\n    dimObject1_3.HelpPoint.Y = 0.0\n    dimObject1_3.HelpPoint.Z = 0.0\n    dimObject1_3.View = NXOpen.NXObject.Null\n    dimObject2_3 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject2_3.Geometry = line7\n    dimObject2_3.AssocType = NXOpen.Sketch.AssocType.EndPoint\n    dimObject2_3.AssocValue = 0\n    dimObject2_3.HelpPoint.X = 0.0\n    dimObject2_3.HelpPoint.Y = 0.0\n    dimObject2_3.HelpPoint.Z = 0.0\n    dimObject2_3.View = NXOpen.NXObject.Null\n    dimOrigin3 = NXOpen.Point3d(64.199713704264994, 62.950000000000003, 5.0)\n    sketchDimensionalConstraint3 = theSession.ActiveSketch.CreateDimension(NXOpen.Sketch.ConstraintType.ParallelDim, dimObject1_3, dimObject2_3, dimOrigin3, expression20, NXOpen.Sketch.DimensionOption.CreateAsDriving)\n    \n    sketchHelpedDimensionalConstraint3 = sketchDimensionalConstraint3\n    dimension3 = sketchHelpedDimensionalConstraint3.AssociatedDimension\n    \n    dimObject1_4 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject1_4.Geometry = line8\n    dimObject1_4.AssocType = NXOpen.Sketch.AssocType.StartPoint\n    dimObject1_4.AssocValue = 0\n    dimObject1_4.HelpPoint.X = 0.0\n    dimObject1_4.HelpPoint.Y = 0.0\n    dimObject1_4.HelpPoint.Z = 0.0\n    dimObject1_4.View = NXOpen.NXObject.Null\n    dimObject2_4 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject2_4.Geometry = line8\n    dimObject2_4.AssocType = NXOpen.Sketch.AssocType.EndPoint\n    dimObject2_4.AssocValue = 0\n    dimObject2_4.HelpPoint.X = 0.0\n    dimObject2_4.HelpPoint.Y = 0.0\n    dimObject2_4.HelpPoint.Z = 0.0\n    dimObject2_4.View = NXOpen.NXObject.Null\n    dimOrigin4 = NXOpen.Point3d(56.950000000000003, 70.199713704264994, 5.0)\n    sketchDimensionalConstraint4 = theSession.ActiveSketch.CreateDimension(NXOpen.Sketch.ConstraintType.ParallelDim, dimObject1_4, dimObject2_4, dimOrigin4, expression21, NXOpen.Sketch.DimensionOption.CreateAsDriving)\n    \n    sketchHelpedDimensionalConstraint4 = sketchDimensionalConstraint4\n    dimension4 = sketchHelpedDimensionalConstraint4.AssociatedDimension\n    \n    theSession.Preferences.Sketch.AutoDimensionsToArcCenter = False\n    \n    theSession.ActiveSketch.Update()\n    \n    theSession.Preferences.Sketch.AutoDimensionsToArcCenter = True\n    \n    geoms3 = [NXOpen.SmartObject.Null] * 4 \n    geoms3[0] = line7\n    geoms3[1] = line8\n    geoms3[2] = line9\n    geoms3[3] = line10\n    theSession.ActiveSketch.UpdateConstraintDisplay(geoms3)\n    \n    geoms4 = [NXOpen.SmartObject.Null] * 4 \n    geoms4[0] = line7\n    geoms4[1] = line8\n    geoms4[2] = line9\n    geoms4[3] = line10\n    theSession.ActiveSketch.UpdateDimensionDisplay(geoms4)\n    \n    scaleAboutPoint6 = NXOpen.Point3d(-32.42252865122326, 20.477386516562042, 0.0)\n    viewCenter6 = NXOpen.Point3d(32.422528651223196, -20.477386516561999, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(0.80000000000000004, scaleAboutPoint6, viewCenter6)\n    \n    scaleAboutPoint7 = NXOpen.Point3d(-40.054147237256757, 24.806710517748776, 0.0)\n    viewCenter7 = NXOpen.Point3d(40.054147237256728, -24.806710517748723, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(0.80000000000000004, scaleAboutPoint7, viewCenter7)\n    \n    origin19 = NXOpen.Point3d(69.468170968403143, 102.60344815928428, 5.0)\n    workPart.ModelingViews.WorkView.SetOrigin(origin19)\n    \n    origin20 = NXOpen.Point3d(69.468170968403143, 102.60344815928428, 5.0)\n    workPart.ModelingViews.WorkView.SetOrigin(origin20)\n    \n    # ----------------------------------------------\n    #   Menu: File->Finish Sketch\n    # ----------------------------------------------\n    sketch8 = theSession.ActiveSketch\n    \n    markId34 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Deactivate Sketch")\n    \n    theSession.ActiveSketch.Deactivate(NXOpen.Sketch.ViewReorient.TrueValue, NXOpen.Sketch.UpdateLevel.Model)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Design Feature->Extrude...\n    # ----------------------------------------------\n    markId35 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    extrudeBuilder3 = workPart.Features.CreateExtrudeBuilder(NXOpen.Features.Feature.Null)\n    \n    section3 = workPart.Sections.CreateSection(0.0094999999999999998, 0.01, 0.5)\n    \n    extrudeBuilder3.Section = section3\n    \n    extrudeBuilder3.AllowSelfIntersectingSection(True)\n    \n    expression22 = workPart.Expressions.CreateSystemExpressionWithUnits("2.00", unit2)\n    \n    extrudeBuilder3.DistanceTolerance = 0.01\n    \n    extrudeBuilder3.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Create\n    \n    targetBodies4 = [NXOpen.Body.Null] * 1 \n    targetBodies4[0] = NXOpen.Body.Null\n    extrudeBuilder3.BooleanOperation.SetTargetBodies(targetBodies4)\n    \n    extrudeBuilder3.Limits.StartExtend.Value.SetFormula("0")\n    \n    extrudeBuilder3.Limits.EndExtend.Value.SetFormula("5")\n    \n    extrudeBuilder3.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Create\n    \n    targetBodies5 = [NXOpen.Body.Null] * 1 \n    targetBodies5[0] = NXOpen.Body.Null\n    extrudeBuilder3.BooleanOperation.SetTargetBodies(targetBodies5)\n    \n    extrudeBuilder3.Draft.FrontDraftAngle.SetFormula("2")\n    \n    extrudeBuilder3.Draft.BackDraftAngle.SetFormula("2")\n    \n    extrudeBuilder3.Offset.StartOffset.SetFormula("0")\n    \n    extrudeBuilder3.Offset.EndOffset.SetFormula("5")\n    \n    smartVolumeProfileBuilder3 = extrudeBuilder3.SmartVolumeProfile\n    \n    smartVolumeProfileBuilder3.OpenProfileSmartVolumeOption = False\n    \n    smartVolumeProfileBuilder3.CloseProfileRule = NXOpen.GeometricUtilities.SmartVolumeProfileBuilder.CloseProfileRuleType.Fci\n    \n    theSession.SetUndoMarkName(markId35, "Extrude Dialog")\n    \n    section3.DistanceTolerance = 0.01\n    \n    section3.ChainingTolerance = 0.0094999999999999998\n    \n    section3.SetAllowedEntityTypes(NXOpen.Section.AllowTypes.OnlyCurves)\n    \n    markId36 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "section mark")\n    \n    markId37 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, None)\n    \n    features2 = [NXOpen.Features.Feature.Null] * 1 \n    sketchFeature2 = feature5\n    features2[0] = sketchFeature2\n    curveFeatureRule2 = workPart.ScRuleFactory.CreateRuleCurveFeature(features2)\n    \n    section3.AllowSelfIntersection(True)\n    \n    rules2 = [None] * 1 \n    rules2[0] = curveFeatureRule2\n    helpPoint2 = NXOpen.Point3d(57.134902646326559, 60.0, 5.0000000000000018)\n    section3.AddToSection(rules2, line10, NXOpen.NXObject.Null, NXOpen.NXObject.Null, helpPoint2, NXOpen.Section.Mode.Create, False)\n    \n    theSession.DeleteUndoMark(markId37, None)\n    \n    direction4 = workPart.Directions.CreateDirection(sketch8, NXOpen.Sense.Forward, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    extrudeBuilder3.Direction = direction4\n    \n    targetBodies6 = [NXOpen.Body.Null] * 1 \n    body1 = workPart.Bodies.FindObject("EXTRUDE(2)")\n    targetBodies6[0] = body1\n    extrudeBuilder3.BooleanOperation.SetTargetBodies(targetBodies6)\n    \n    extrudeBuilder3.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Unite\n    \n    targetBodies7 = [NXOpen.Body.Null] * 1 \n    targetBodies7[0] = body1\n    extrudeBuilder3.BooleanOperation.SetTargetBodies(targetBodies7)\n    \n    expression23 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    theSession.DeleteUndoMark(markId36, None)\n    \n    extrudeBuilder3.Limits.EndExtend.Value.SetFormula("60")\n    \n    extrudeBuilder3.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Unite\n    \n    targetBodies8 = [NXOpen.Body.Null] * 1 \n    targetBodies8[0] = body1\n    extrudeBuilder3.BooleanOperation.SetTargetBodies(targetBodies8)\n    \n    extrudeBuilder3.Limits.EndExtend.Value.SetFormula("60")\n    \n    extrudeBuilder3.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Unite\n    \n    targetBodies9 = [NXOpen.Body.Null] * 1 \n    targetBodies9[0] = body1\n    extrudeBuilder3.BooleanOperation.SetTargetBodies(targetBodies9)\n    \n    markId38 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Extrude")\n    \n    theSession.DeleteUndoMark(markId38, None)\n    \n    markId39 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Extrude")\n    \n    extrudeBuilder3.ParentFeatureInternal = False\n    \n    feature6 = extrudeBuilder3.CommitFeature()\n    \n    theSession.DeleteUndoMark(markId39, None)\n    \n    theSession.SetUndoMarkName(markId35, "Extrude")\n    \n    expression24 = extrudeBuilder3.Limits.StartExtend.Value\n    expression25 = extrudeBuilder3.Limits.EndExtend.Value\n    extrudeBuilder3.Destroy()\n    \n    workPart.Expressions.Delete(expression22)\n    \n    workPart.Expressions.Delete(expression23)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch...\n    # ----------------------------------------------\n    markId40 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    sketchInPlaceBuilder5 = workPart.Sketches.CreateSketchInPlaceBuilder2(NXOpen.Sketch.Null)\n    \n    origin21 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal9 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane9 = workPart.Planes.CreatePlane(origin21, normal9, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    sketchInPlaceBuilder5.PlaneReference = plane9\n    \n    expression26 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    expression27 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    sketchAlongPathBuilder5 = workPart.Sketches.CreateSketchAlongPathBuilder(NXOpen.Sketch.Null)\n    \n    sketchAlongPathBuilder5.PlaneLocation.Expression.SetFormula("0")\n    \n    theSession.SetUndoMarkName(markId40, "Create Sketch Dialog")\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch Curve->Rectangle...\n    # ----------------------------------------------\n    markId41 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.DeleteUndoMark(markId41, None)\n    \n    markId42 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.Preferences.Sketch.CreateInferredConstraints = True\n    \n    theSession.Preferences.Sketch.ContinuousAutoDimensioning = True\n    \n    theSession.Preferences.Sketch.DimensionLabel = NXOpen.Preferences.SketchPreferences.DimensionLabelType.Expression\n    \n    theSession.Preferences.Sketch.TextSizeFixed = True\n    \n    theSession.Preferences.Sketch.FixedTextSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayParenthesesOnReferenceDimensions = True\n    \n    theSession.Preferences.Sketch.DisplayReferenceGeometry = False\n    \n    theSession.Preferences.Sketch.ConstraintSymbolSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayObjectColor = False\n    \n    theSession.Preferences.Sketch.DisplayObjectName = True\n    \n    nXObject5 = sketchInPlaceBuilder5.Commit()\n    \n    sketch9 = nXObject5\n    feature7 = sketch9.Feature\n    \n    markId43 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "update")\n    \n    nErrs5 = theSession.UpdateManager.DoUpdate(markId43)\n    \n    sketch9.Activate(NXOpen.Sketch.ViewReorient.TrueValue)\n    \n    theSession.DeleteUndoMark(markId42, None)\n    \n    theSession.SetUndoMarkName(markId40, "Create Sketch")\n    \n    sketchInPlaceBuilder5.Destroy()\n    \n    sketchAlongPathBuilder5.Destroy()\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression27)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression26)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    plane9.DestroyPlane()\n    \n    markId44 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Profile short list")\n    \n    origin22 = NXOpen.Point3d(101.53025179562276, 0.30860258904440541, 0.0)\n    workPart.ModelingViews.WorkView.SetOrigin(origin22)\n    \n    origin23 = NXOpen.Point3d(101.53025179562276, 0.30860258904440541, 0.0)\n    workPart.ModelingViews.WorkView.SetOrigin(origin23)\n    \n    scaleAboutPoint8 = NXOpen.Point3d(-45.518881884055808, -2.7774233014000562, 0.0)\n    viewCenter8 = NXOpen.Point3d(45.518881884055808, 2.7774233014000562, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint8, viewCenter8)\n    \n    scaleAboutPoint9 = NXOpen.Point3d(-35.427577222302396, -1.4812924274133095, 0.0)\n    viewCenter9 = NXOpen.Point3d(35.427577222302418, 1.4812924274133095, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint9, viewCenter9)\n    \n    scaleAboutPoint10 = NXOpen.Point3d(-27.552039149888152, -0.7900226279538084, 0.0)\n    viewCenter10 = NXOpen.Point3d(27.552039149888188, 0.7900226279538084, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint10, viewCenter10)\n    \n    scaleAboutPoint11 = NXOpen.Point3d(-21.725622268728994, -0.47401357677231098, 0.0)\n    viewCenter11 = NXOpen.Point3d(21.725622268729023, 0.47401357677231098, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint11, viewCenter11)\n    \n    markId45 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Rectangle")\n    \n    expression28 = workPart.Expressions.CreateSystemExpression("5.9")\n    \n    expression29 = workPart.Expressions.CreateSystemExpression("5.9")\n    \n    workPart.Expressions.Edit(expression28, "5.9")\n    \n    theSession.SetUndoMarkVisibility(markId45, "Create Rectangle", NXOpen.Session.MarkVisibility.Visible)\n    \n    # ----------------------------------------------\n    # Creating rectangle using By 2 Points method \n    # ----------------------------------------------\n    startPoint11 = NXOpen.Point3d(59.899999999999999, 4.0, 0.0)\n    endPoint11 = NXOpen.Point3d(54.0, 4.0, 0.0)\n    line11 = workPart.Curves.CreateLine(startPoint11, endPoint11)\n    \n    startPoint12 = NXOpen.Point3d(54.0, 4.0, 0.0)\n    endPoint12 = NXOpen.Point3d(54.0, 9.9000000000000004, 0.0)\n    line12 = workPart.Curves.CreateLine(startPoint12, endPoint12)\n    \n    startPoint13 = NXOpen.Point3d(54.0, 9.9000000000000004, 0.0)\n    endPoint13 = NXOpen.Point3d(59.899999999999999, 9.9000000000000004, 0.0)\n    line13 = workPart.Curves.CreateLine(startPoint13, endPoint13)\n    \n    startPoint14 = NXOpen.Point3d(59.899999999999999, 9.9000000000000004, 0.0)\n    endPoint14 = NXOpen.Point3d(59.899999999999999, 4.0, 0.0)\n    line14 = workPart.Curves.CreateLine(startPoint14, endPoint14)\n    \n    theSession.ActiveSketch.AddGeometry(line11, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    theSession.ActiveSketch.AddGeometry(line12, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    theSession.ActiveSketch.AddGeometry(line13, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    theSession.ActiveSketch.AddGeometry(line14, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    geom1_14 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_14.Geometry = line11\n    geom1_14.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_14.SplineDefiningPointIndex = 0\n    geom2_14 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_14.Geometry = line12\n    geom2_14.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_14.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint26 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_14, geom2_14)\n    \n    geom1_15 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_15.Geometry = line12\n    geom1_15.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_15.SplineDefiningPointIndex = 0\n    geom2_15 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_15.Geometry = line13\n    geom2_15.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_15.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint27 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_15, geom2_15)\n    \n    geom1_16 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_16.Geometry = line13\n    geom1_16.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_16.SplineDefiningPointIndex = 0\n    geom2_16 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_16.Geometry = line14\n    geom2_16.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_16.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint28 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_16, geom2_16)\n    \n    geom1_17 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_17.Geometry = line14\n    geom1_17.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_17.SplineDefiningPointIndex = 0\n    geom2_17 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_17.Geometry = line11\n    geom2_17.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_17.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint29 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_17, geom2_17)\n    \n    geom9 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom9.Geometry = line11\n    geom9.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    geom9.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint30 = theSession.ActiveSketch.CreateHorizontalConstraint(geom9)\n    \n    conGeom1_9 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_9.Geometry = line11\n    conGeom1_9.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_9.SplineDefiningPointIndex = 0\n    conGeom2_9 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_9.Geometry = line12\n    conGeom2_9.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_9.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint31 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_9, conGeom2_9)\n    \n    conGeom1_10 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_10.Geometry = line12\n    conGeom1_10.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_10.SplineDefiningPointIndex = 0\n    conGeom2_10 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_10.Geometry = line13\n    conGeom2_10.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_10.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint32 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_10, conGeom2_10)\n    \n    conGeom1_11 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_11.Geometry = line13\n    conGeom1_11.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_11.SplineDefiningPointIndex = 0\n    conGeom2_11 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_11.Geometry = line14\n    conGeom2_11.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_11.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint33 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_11, conGeom2_11)\n    \n    conGeom1_12 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_12.Geometry = line14\n    conGeom1_12.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_12.SplineDefiningPointIndex = 0\n    conGeom2_12 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_12.Geometry = line11\n    conGeom2_12.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_12.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint34 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_12, conGeom2_12)\n    \n    dimObject1_5 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject1_5.Geometry = line11\n    dimObject1_5.AssocType = NXOpen.Sketch.AssocType.StartPoint\n    dimObject1_5.AssocValue = 0\n    dimObject1_5.HelpPoint.X = 0.0\n    dimObject1_5.HelpPoint.Y = 0.0\n    dimObject1_5.HelpPoint.Z = 0.0\n    dimObject1_5.View = NXOpen.NXObject.Null\n    dimObject2_5 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject2_5.Geometry = line11\n    dimObject2_5.AssocType = NXOpen.Sketch.AssocType.EndPoint\n    dimObject2_5.AssocValue = 0\n    dimObject2_5.HelpPoint.X = 0.0\n    dimObject2_5.HelpPoint.Y = 0.0\n    dimObject2_5.HelpPoint.Z = 0.0\n    dimObject2_5.View = NXOpen.NXObject.Null\n    dimOrigin5 = NXOpen.Point3d(56.950000000000003, 8.2997137042649918, 0.0)\n    sketchDimensionalConstraint5 = theSession.ActiveSketch.CreateDimension(NXOpen.Sketch.ConstraintType.ParallelDim, dimObject1_5, dimObject2_5, dimOrigin5, expression28, NXOpen.Sketch.DimensionOption.CreateAsDriving)\n    \n    sketchHelpedDimensionalConstraint5 = sketchDimensionalConstraint5\n    dimension5 = sketchHelpedDimensionalConstraint5.AssociatedDimension\n    \n    dimObject1_6 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject1_6.Geometry = line12\n    dimObject1_6.AssocType = NXOpen.Sketch.AssocType.StartPoint\n    dimObject1_6.AssocValue = 0\n    dimObject1_6.HelpPoint.X = 0.0\n    dimObject1_6.HelpPoint.Y = 0.0\n    dimObject1_6.HelpPoint.Z = 0.0\n    dimObject1_6.View = NXOpen.NXObject.Null\n    dimObject2_6 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject2_6.Geometry = line12\n    dimObject2_6.AssocType = NXOpen.Sketch.AssocType.EndPoint\n    dimObject2_6.AssocValue = 0\n    dimObject2_6.HelpPoint.X = 0.0\n    dimObject2_6.HelpPoint.Y = 0.0\n    dimObject2_6.HelpPoint.Z = 0.0\n    dimObject2_6.View = NXOpen.NXObject.Null\n    dimOrigin6 = NXOpen.Point3d(58.299713704264988, 6.9500000000000002, 0.0)\n    sketchDimensionalConstraint6 = theSession.ActiveSketch.CreateDimension(NXOpen.Sketch.ConstraintType.ParallelDim, dimObject1_6, dimObject2_6, dimOrigin6, expression29, NXOpen.Sketch.DimensionOption.CreateAsDriving)\n    \n    sketchHelpedDimensionalConstraint6 = sketchDimensionalConstraint6\n    dimension6 = sketchHelpedDimensionalConstraint6.AssociatedDimension\n    \n    theSession.Preferences.Sketch.AutoDimensionsToArcCenter = False\n    \n    theSession.ActiveSketch.Update()\n    \n    theSession.Preferences.Sketch.AutoDimensionsToArcCenter = True\n    \n    geoms5 = [NXOpen.SmartObject.Null] * 4 \n    geoms5[0] = line11\n    geoms5[1] = line12\n    geoms5[2] = line13\n    geoms5[3] = line14\n    theSession.ActiveSketch.UpdateConstraintDisplay(geoms5)\n    \n    geoms6 = [NXOpen.SmartObject.Null] * 4 \n    geoms6[0] = line11\n    geoms6[1] = line12\n    geoms6[2] = line13\n    geoms6[3] = line14\n    theSession.ActiveSketch.UpdateDimensionDisplay(geoms6)\n    \n    # ----------------------------------------------\n    #   Menu: File->Finish Sketch\n    # ----------------------------------------------\n    sketch10 = theSession.ActiveSketch\n    \n    markId46 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Deactivate Sketch")\n    \n    theSession.ActiveSketch.Deactivate(NXOpen.Sketch.ViewReorient.TrueValue, NXOpen.Sketch.UpdateLevel.Model)\n    \n    # ----------------------------------------------\n    #   Menu: Edit->Undo\n    # ----------------------------------------------\n    marksRecycled3, undoUnavailable3 = theSession.UndoLastNVisibleMarks(1)\n    \n    # ----------------------------------------------\n    #   Menu: Edit->Undo\n    # ----------------------------------------------\n    marksRecycled4, undoUnavailable4 = theSession.UndoLastNVisibleMarks(1)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch...\n    # ----------------------------------------------\n    markId47 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    sketchInPlaceBuilder6 = workPart.Sketches.CreateSketchInPlaceBuilder2(NXOpen.Sketch.Null)\n    \n    origin24 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal10 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane10 = workPart.Planes.CreatePlane(origin24, normal10, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    sketchInPlaceBuilder6.PlaneReference = plane10\n    \n    expression30 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    expression31 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    sketchAlongPathBuilder6 = workPart.Sketches.CreateSketchAlongPathBuilder(NXOpen.Sketch.Null)\n    \n    sketchAlongPathBuilder6.PlaneLocation.Expression.SetFormula("0")\n    \n    theSession.SetUndoMarkName(markId47, "Create Sketch Dialog")\n    \n    scalar5 = workPart.Scalars.CreateScalar(1.0, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    point6 = workPart.Points.CreatePoint(edge3, scalar5, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    direction5 = workPart.Directions.CreateDirection(edge4, NXOpen.Sense.Forward, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    xform3 = workPart.Xforms.CreateXformByPlaneXDirPoint(face1, direction5, point6, NXOpen.SmartObject.UpdateOption.WithinModeling, 0.625, False, False)\n    \n    cartesianCoordinateSystem3 = workPart.CoordinateSystems.CreateCoordinateSystem(xform3, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    sketchInPlaceBuilder6.Csystem = cartesianCoordinateSystem3\n    \n    origin25 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal11 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane11 = workPart.Planes.CreatePlane(origin25, normal11, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    plane11.SetMethod(NXOpen.PlaneTypes.MethodType.Coincident)\n    \n    geom10 = [NXOpen.NXObject.Null] * 1 \n    geom10[0] = face1\n    plane11.SetGeometry(geom10)\n    \n    plane11.SetFlip(False)\n    \n    plane11.SetExpression(None)\n    \n    plane11.SetAlternate(NXOpen.PlaneTypes.AlternateType.One)\n    \n    plane11.Evaluate()\n    \n    origin26 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal12 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane12 = workPart.Planes.CreatePlane(origin26, normal12, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    expression32 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    expression33 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    plane12.SynchronizeToPlane(plane11)\n    \n    scalar6 = workPart.Scalars.CreateScalar(100.0, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    point7 = workPart.Points.CreatePoint(edge3, scalar6, NXOpen.PointCollection.PointOnCurveLocationOption.PercentParameter, NXOpen.Point.Null, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    plane12.SetMethod(NXOpen.PlaneTypes.MethodType.Coincident)\n    \n    geom11 = [NXOpen.NXObject.Null] * 1 \n    geom11[0] = face1\n    plane12.SetGeometry(geom11)\n    \n    plane12.SetAlternate(NXOpen.PlaneTypes.AlternateType.One)\n    \n    plane12.Evaluate()\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Design Feature->Extrude...\n    # ----------------------------------------------\n    markId48 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.DeleteUndoMark(markId48, None)\n    \n    markId49 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.Preferences.Sketch.CreateInferredConstraints = True\n    \n    theSession.Preferences.Sketch.ContinuousAutoDimensioning = True\n    \n    theSession.Preferences.Sketch.DimensionLabel = NXOpen.Preferences.SketchPreferences.DimensionLabelType.Expression\n    \n    theSession.Preferences.Sketch.TextSizeFixed = True\n    \n    theSession.Preferences.Sketch.FixedTextSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayParenthesesOnReferenceDimensions = True\n    \n    theSession.Preferences.Sketch.DisplayReferenceGeometry = False\n    \n    theSession.Preferences.Sketch.ConstraintSymbolSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayObjectColor = False\n    \n    theSession.Preferences.Sketch.DisplayObjectName = True\n    \n    nXObject6 = sketchInPlaceBuilder6.Commit()\n    \n    sketch11 = nXObject6\n    feature8 = sketch11.Feature\n    \n    markId50 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "update")\n    \n    nErrs6 = theSession.UpdateManager.DoUpdate(markId50)\n    \n    sketch11.Activate(NXOpen.Sketch.ViewReorient.TrueValue)\n    \n    theSession.DeleteUndoMark(markId49, None)\n    \n    theSession.SetUndoMarkName(markId47, "Create Sketch")\n    \n    sketchInPlaceBuilder6.Destroy()\n    \n    sketchAlongPathBuilder6.Destroy()\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression31)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    workPart.Points.DeletePoint(point7)\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression30)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    plane10.DestroyPlane()\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression33)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression32)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    plane12.DestroyPlane()\n    \n    markId51 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    extrudeBuilder4 = workPart.Features.CreateExtrudeBuilder(NXOpen.Features.Feature.Null)\n    \n    section4 = workPart.Sections.CreateSection(0.0094999999999999998, 0.01, 0.5)\n    \n    extrudeBuilder4.Section = section4\n    \n    extrudeBuilder4.AllowSelfIntersectingSection(True)\n    \n    expression34 = workPart.Expressions.CreateSystemExpressionWithUnits("2.00", unit2)\n    \n    extrudeBuilder4.DistanceTolerance = 0.01\n    \n    extrudeBuilder4.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Create\n    \n    targetBodies10 = [NXOpen.Body.Null] * 1 \n    targetBodies10[0] = NXOpen.Body.Null\n    extrudeBuilder4.BooleanOperation.SetTargetBodies(targetBodies10)\n    \n    extrudeBuilder4.Limits.StartExtend.Value.SetFormula("0")\n    \n    extrudeBuilder4.Limits.EndExtend.Value.SetFormula("60")\n    \n    extrudeBuilder4.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Create\n    \n    targetBodies11 = [NXOpen.Body.Null] * 1 \n    targetBodies11[0] = NXOpen.Body.Null\n    extrudeBuilder4.BooleanOperation.SetTargetBodies(targetBodies11)\n    \n    extrudeBuilder4.Draft.FrontDraftAngle.SetFormula("2")\n    \n    extrudeBuilder4.Draft.BackDraftAngle.SetFormula("2")\n    \n    extrudeBuilder4.Offset.StartOffset.SetFormula("0")\n    \n    extrudeBuilder4.Offset.EndOffset.SetFormula("5")\n    \n    smartVolumeProfileBuilder4 = extrudeBuilder4.SmartVolumeProfile\n    \n    smartVolumeProfileBuilder4.OpenProfileSmartVolumeOption = False\n    \n    smartVolumeProfileBuilder4.CloseProfileRule = NXOpen.GeometricUtilities.SmartVolumeProfileBuilder.CloseProfileRuleType.Fci\n    \n    theSession.SetUndoMarkName(markId51, "Extrude Dialog")\n    \n    section4.DistanceTolerance = 0.01\n    \n    section4.ChainingTolerance = 0.0094999999999999998\n    \n    section4.SetAllowedEntityTypes(NXOpen.Section.AllowTypes.OnlyCurves)\n    \n    rotMatrix1 = NXOpen.Matrix3x3()\n    \n    rotMatrix1.Xx = 0.36570845715548572\n    rotMatrix1.Xy = 0.92931913545767675\n    rotMatrix1.Xz = 0.051217856623923474\n    rotMatrix1.Yx = -0.91931279896576301\n    rotMatrix1.Yy = 0.35208238848548951\n    rotMatrix1.Yz = 0.17578955991777909\n    rotMatrix1.Zx = 0.14533169655201808\n    rotMatrix1.Zy = -0.11137295987153856\n    rotMatrix1.Zz = 0.98309448263468724\n    translation1 = NXOpen.Point3d(-19.366235897067263, -31.67933606851139, -6.4880948864560999)\n    workPart.ModelingViews.WorkView.SetRotationTranslationScale(rotMatrix1, translation1, 0.85735940891677709)\n    \n    origin27 = NXOpen.Point3d(62.472926685552068, 60.774840920383411, 4.2493091513487311)\n    workPart.ModelingViews.WorkView.SetOrigin(origin27)\n    \n    origin28 = NXOpen.Point3d(62.472926685552068, 60.774840920383411, 4.2493091513487311)\n    workPart.ModelingViews.WorkView.SetOrigin(origin28)\n    \n    scaleAboutPoint12 = NXOpen.Point3d(-55.394164733478078, -18.516155342666767, 0.0)\n    viewCenter12 = NXOpen.Point3d(55.394164733478078, 18.516155342666767, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint12, viewCenter12)\n    \n    scaleAboutPoint13 = NXOpen.Point3d(-44.315331786782444, -14.812924274133415, 0.0)\n    viewCenter13 = NXOpen.Point3d(44.315331786782444, 14.812924274133415, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint13, viewCenter13)\n    \n    scaleAboutPoint14 = NXOpen.Point3d(-35.452265429425971, -11.850339419306732, 0.0)\n    viewCenter14 = NXOpen.Point3d(35.452265429425971, 11.850339419306732, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint14, viewCenter14)\n    \n    scaleAboutPoint15 = NXOpen.Point3d(-28.361812343540777, -9.4802715354453859, 0.0)\n    viewCenter15 = NXOpen.Point3d(28.361812343540763, 9.4802715354453859, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint15, viewCenter15)\n    \n    scaleAboutPoint16 = NXOpen.Point3d(-22.68944987483264, -7.5842172283563078, 0.0)\n    viewCenter16 = NXOpen.Point3d(22.689449874832597, 7.5842172283563078, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint16, viewCenter16)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch Curve->Rectangle...\n    # ----------------------------------------------\n    extrudeBuilder4.Destroy()\n    \n    section4.Destroy()\n    \n    workPart.Expressions.Delete(expression34)\n    \n    theSession.UndoToMark(markId51, None)\n    \n    theSession.DeleteUndoMark(markId51, None)\n    \n    markId52 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Profile short list")\n    \n    markId53 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Rectangle")\n    \n    expression35 = workPart.Expressions.CreateSystemExpression("5.9")\n    \n    expression36 = workPart.Expressions.CreateSystemExpression("5.9")\n    \n    theSession.SetUndoMarkVisibility(markId53, "Create Rectangle", NXOpen.Session.MarkVisibility.Visible)\n    \n    # ----------------------------------------------\n    # Creating rectangle using By 2 Points method \n    # ----------------------------------------------\n    startPoint15 = NXOpen.Point3d(59.899999999999999, 4.0, 5.0)\n    endPoint15 = NXOpen.Point3d(59.899999999999999, 9.9000000000000004, 5.0)\n    line15 = workPart.Curves.CreateLine(startPoint15, endPoint15)\n    \n    startPoint16 = NXOpen.Point3d(59.899999999999999, 9.9000000000000004, 5.0)\n    endPoint16 = NXOpen.Point3d(54.0, 9.9000000000000004, 5.0)\n    line16 = workPart.Curves.CreateLine(startPoint16, endPoint16)\n    \n    startPoint17 = NXOpen.Point3d(54.0, 9.9000000000000004, 5.0)\n    endPoint17 = NXOpen.Point3d(54.0, 4.0, 5.0)\n    line17 = workPart.Curves.CreateLine(startPoint17, endPoint17)\n    \n    startPoint18 = NXOpen.Point3d(54.0, 4.0, 5.0)\n    endPoint18 = NXOpen.Point3d(59.899999999999999, 4.0, 5.0)\n    line18 = workPart.Curves.CreateLine(startPoint18, endPoint18)\n    \n    theSession.ActiveSketch.AddGeometry(line15, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    theSession.ActiveSketch.AddGeometry(line16, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    theSession.ActiveSketch.AddGeometry(line17, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    theSession.ActiveSketch.AddGeometry(line18, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    geom1_18 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_18.Geometry = line15\n    geom1_18.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_18.SplineDefiningPointIndex = 0\n    geom2_18 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_18.Geometry = line16\n    geom2_18.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_18.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint35 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_18, geom2_18)\n    \n    geom1_19 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_19.Geometry = line16\n    geom1_19.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_19.SplineDefiningPointIndex = 0\n    geom2_19 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_19.Geometry = line17\n    geom2_19.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_19.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint36 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_19, geom2_19)\n    \n    geom1_20 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_20.Geometry = line17\n    geom1_20.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_20.SplineDefiningPointIndex = 0\n    geom2_20 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_20.Geometry = line18\n    geom2_20.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_20.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint37 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_20, geom2_20)\n    \n    geom1_21 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_21.Geometry = line18\n    geom1_21.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_21.SplineDefiningPointIndex = 0\n    geom2_21 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_21.Geometry = line15\n    geom2_21.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_21.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint38 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_21, geom2_21)\n    \n    geom12 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom12.Geometry = line15\n    geom12.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    geom12.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint39 = theSession.ActiveSketch.CreateHorizontalConstraint(geom12)\n    \n    conGeom1_13 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_13.Geometry = line15\n    conGeom1_13.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_13.SplineDefiningPointIndex = 0\n    conGeom2_13 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_13.Geometry = line16\n    conGeom2_13.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_13.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint40 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_13, conGeom2_13)\n    \n    conGeom1_14 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_14.Geometry = line16\n    conGeom1_14.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_14.SplineDefiningPointIndex = 0\n    conGeom2_14 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_14.Geometry = line17\n    conGeom2_14.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_14.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint41 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_14, conGeom2_14)\n    \n    conGeom1_15 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_15.Geometry = line17\n    conGeom1_15.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_15.SplineDefiningPointIndex = 0\n    conGeom2_15 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_15.Geometry = line18\n    conGeom2_15.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_15.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint42 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_15, conGeom2_15)\n    \n    conGeom1_16 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_16.Geometry = line18\n    conGeom1_16.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_16.SplineDefiningPointIndex = 0\n    conGeom2_16 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_16.Geometry = line15\n    conGeom2_16.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_16.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint43 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_16, conGeom2_16)\n    \n    dimObject1_7 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject1_7.Geometry = line15\n    dimObject1_7.AssocType = NXOpen.Sketch.AssocType.StartPoint\n    dimObject1_7.AssocValue = 0\n    dimObject1_7.HelpPoint.X = 0.0\n    dimObject1_7.HelpPoint.Y = 0.0\n    dimObject1_7.HelpPoint.Z = 0.0\n    dimObject1_7.View = NXOpen.NXObject.Null\n    dimObject2_7 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject2_7.Geometry = line15\n    dimObject2_7.AssocType = NXOpen.Sketch.AssocType.EndPoint\n    dimObject2_7.AssocValue = 0\n    dimObject2_7.HelpPoint.X = 0.0\n    dimObject2_7.HelpPoint.Y = 0.0\n    dimObject2_7.HelpPoint.Z = 0.0\n    dimObject2_7.View = NXOpen.NXObject.Null\n    dimOrigin7 = NXOpen.Point3d(63.339770963411993, 6.9500000000000002, 5.0)\n    sketchDimensionalConstraint7 = theSession.ActiveSketch.CreateDimension(NXOpen.Sketch.ConstraintType.ParallelDim, dimObject1_7, dimObject2_7, dimOrigin7, expression35, NXOpen.Sketch.DimensionOption.CreateAsDriving)\n    \n    sketchHelpedDimensionalConstraint7 = sketchDimensionalConstraint7\n    dimension7 = sketchHelpedDimensionalConstraint7.AssociatedDimension\n    \n    dimObject1_8 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject1_8.Geometry = line16\n    dimObject1_8.AssocType = NXOpen.Sketch.AssocType.StartPoint\n    dimObject1_8.AssocValue = 0\n    dimObject1_8.HelpPoint.X = 0.0\n    dimObject1_8.HelpPoint.Y = 0.0\n    dimObject1_8.HelpPoint.Z = 0.0\n    dimObject1_8.View = NXOpen.NXObject.Null\n    dimObject2_8 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject2_8.Geometry = line16\n    dimObject2_8.AssocType = NXOpen.Sketch.AssocType.EndPoint\n    dimObject2_8.AssocValue = 0\n    dimObject2_8.HelpPoint.X = 0.0\n    dimObject2_8.HelpPoint.Y = 0.0\n    dimObject2_8.HelpPoint.Z = 0.0\n    dimObject2_8.View = NXOpen.NXObject.Null\n    dimOrigin8 = NXOpen.Point3d(56.950000000000003, 13.339770963411995, 5.0)\n    sketchDimensionalConstraint8 = theSession.ActiveSketch.CreateDimension(NXOpen.Sketch.ConstraintType.ParallelDim, dimObject1_8, dimObject2_8, dimOrigin8, expression36, NXOpen.Sketch.DimensionOption.CreateAsDriving)\n    \n    sketchHelpedDimensionalConstraint8 = sketchDimensionalConstraint8\n    dimension8 = sketchHelpedDimensionalConstraint8.AssociatedDimension\n    \n    theSession.Preferences.Sketch.AutoDimensionsToArcCenter = False\n    \n    theSession.ActiveSketch.Update()\n    \n    theSession.Preferences.Sketch.AutoDimensionsToArcCenter = True\n    \n    geoms7 = [NXOpen.SmartObject.Null] * 4 \n    geoms7[0] = line15\n    geoms7[1] = line16\n    geoms7[2] = line17\n    geoms7[3] = line18\n    theSession.ActiveSketch.UpdateConstraintDisplay(geoms7)\n    \n    geoms8 = [NXOpen.SmartObject.Null] * 4 \n    geoms8[0] = line15\n    geoms8[1] = line16\n    geoms8[2] = line17\n    geoms8[3] = line18\n    theSession.ActiveSketch.UpdateDimensionDisplay(geoms8)\n    \n    scaleAboutPoint17 = NXOpen.Point3d(-14.106644044742735, 6.7752340573316099, 0.0)\n    viewCenter17 = NXOpen.Point3d(14.106644044742735, -6.7752340573316436, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(0.80000000000000004, scaleAboutPoint17, viewCenter17)\n    \n    scaleAboutPoint18 = NXOpen.Point3d(-17.633305055928439, 8.469042571664513, 0.0)\n    viewCenter18 = NXOpen.Point3d(17.633305055928396, -8.4690425716645539, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(0.80000000000000004, scaleAboutPoint18, viewCenter18)\n    \n    # ----------------------------------------------\n    #   Menu: File->Finish Sketch\n    # ----------------------------------------------\n    sketch12 = theSession.ActiveSketch\n    \n    markId54 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Deactivate Sketch")\n    \n    theSession.ActiveSketch.Deactivate(NXOpen.Sketch.ViewReorient.TrueValue, NXOpen.Sketch.UpdateLevel.Model)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Design Feature->Extrude...\n    # ----------------------------------------------\n    markId55 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    extrudeBuilder5 = workPart.Features.CreateExtrudeBuilder(NXOpen.Features.Feature.Null)\n    \n    section5 = workPart.Sections.CreateSection(0.0094999999999999998, 0.01, 0.5)\n    \n    extrudeBuilder5.Section = section5\n    \n    extrudeBuilder5.AllowSelfIntersectingSection(True)\n    \n    expression37 = workPart.Expressions.CreateSystemExpressionWithUnits("2.00", unit2)\n    \n    extrudeBuilder5.DistanceTolerance = 0.01\n    \n    extrudeBuilder5.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Create\n    \n    targetBodies12 = [NXOpen.Body.Null] * 1 \n    targetBodies12[0] = NXOpen.Body.Null\n    extrudeBuilder5.BooleanOperation.SetTargetBodies(targetBodies12)\n    \n    extrudeBuilder5.Limits.StartExtend.Value.SetFormula("0")\n    \n    extrudeBuilder5.Limits.EndExtend.Value.SetFormula("60")\n    \n    extrudeBuilder5.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Create\n    \n    targetBodies13 = [NXOpen.Body.Null] * 1 \n    targetBodies13[0] = NXOpen.Body.Null\n    extrudeBuilder5.BooleanOperation.SetTargetBodies(targetBodies13)\n    \n    extrudeBuilder5.Draft.FrontDraftAngle.SetFormula("2")\n    \n    extrudeBuilder5.Draft.BackDraftAngle.SetFormula("2")\n    \n    extrudeBuilder5.Offset.StartOffset.SetFormula("0")\n    \n    extrudeBuilder5.Offset.EndOffset.SetFormula("5")\n    \n    smartVolumeProfileBuilder5 = extrudeBuilder5.SmartVolumeProfile\n    \n    smartVolumeProfileBuilder5.OpenProfileSmartVolumeOption = False\n    \n    smartVolumeProfileBuilder5.CloseProfileRule = NXOpen.GeometricUtilities.SmartVolumeProfileBuilder.CloseProfileRuleType.Fci\n    \n    theSession.SetUndoMarkName(markId55, "Extrude Dialog")\n    \n    section5.DistanceTolerance = 0.01\n    \n    section5.ChainingTolerance = 0.0094999999999999998\n    \n    section5.SetAllowedEntityTypes(NXOpen.Section.AllowTypes.OnlyCurves)\n    \n    markId56 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "section mark")\n    \n    markId57 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, None)\n    \n    features3 = [NXOpen.Features.Feature.Null] * 1 \n    sketchFeature3 = feature8\n    features3[0] = sketchFeature3\n    curveFeatureRule3 = workPart.ScRuleFactory.CreateRuleCurveFeature(features3)\n    \n    section5.AllowSelfIntersection(True)\n    \n    rules3 = [None] * 1 \n    rules3[0] = curveFeatureRule3\n    helpPoint3 = NXOpen.Point3d(54.000000000000007, 6.024710984040329, 5.0000000000000018)\n    section5.AddToSection(rules3, line17, NXOpen.NXObject.Null, NXOpen.NXObject.Null, helpPoint3, NXOpen.Section.Mode.Create, False)\n    \n    theSession.DeleteUndoMark(markId57, None)\n    \n    direction6 = workPart.Directions.CreateDirection(sketch12, NXOpen.Sense.Forward, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    extrudeBuilder5.Direction = direction6\n    \n    targetBodies14 = [NXOpen.Body.Null] * 1 \n    targetBodies14[0] = body1\n    extrudeBuilder5.BooleanOperation.SetTargetBodies(targetBodies14)\n    \n    extrudeBuilder5.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Unite\n    \n    targetBodies15 = [NXOpen.Body.Null] * 1 \n    targetBodies15[0] = body1\n    extrudeBuilder5.BooleanOperation.SetTargetBodies(targetBodies15)\n    \n    expression38 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    theSession.DeleteUndoMark(markId56, None)\n    \n    extrudeBuilder5.Limits.EndExtend.Value.SetFormula("20")\n    \n    extrudeBuilder5.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Unite\n    \n    targetBodies16 = [NXOpen.Body.Null] * 1 \n    targetBodies16[0] = body1\n    extrudeBuilder5.BooleanOperation.SetTargetBodies(targetBodies16)\n    \n    markId58 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Extrude")\n    \n    theSession.DeleteUndoMark(markId58, None)\n    \n    markId59 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Extrude")\n    \n    extrudeBuilder5.ParentFeatureInternal = False\n    \n    feature9 = extrudeBuilder5.CommitFeature()\n    \n    theSession.DeleteUndoMark(markId59, None)\n    \n    theSession.SetUndoMarkName(markId55, "Extrude")\n    \n    expression39 = extrudeBuilder5.Limits.StartExtend.Value\n    expression40 = extrudeBuilder5.Limits.EndExtend.Value\n    extrudeBuilder5.Destroy()\n    \n    workPart.Expressions.Delete(expression37)\n    \n    workPart.Expressions.Delete(expression38)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch...\n    # ----------------------------------------------\n    markId60 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    sketchInPlaceBuilder7 = workPart.Sketches.CreateSketchInPlaceBuilder2(NXOpen.Sketch.Null)\n    \n    origin29 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal13 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane13 = workPart.Planes.CreatePlane(origin29, normal13, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    sketchInPlaceBuilder7.PlaneReference = plane13\n    \n    expression41 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    expression42 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    sketchAlongPathBuilder7 = workPart.Sketches.CreateSketchAlongPathBuilder(NXOpen.Sketch.Null)\n    \n    sketchAlongPathBuilder7.PlaneLocation.Expression.SetFormula("0")\n    \n    theSession.SetUndoMarkName(markId60, "Create Sketch Dialog")\n    \n    scalar7 = workPart.Scalars.CreateScalar(1.0, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    point8 = workPart.Points.CreatePoint(edge3, scalar7, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    edge5 = extrude1.FindObject("EDGE * 130 EXTRUDE(7) 140 {(54,4,5)(54,6.95,5)(54,9.9,5) EXTRUDE(2)}")\n    direction7 = workPart.Directions.CreateDirection(edge5, NXOpen.Sense.Forward, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    xform4 = workPart.Xforms.CreateXformByPlaneXDirPoint(face1, direction7, point8, NXOpen.SmartObject.UpdateOption.WithinModeling, 0.625, False, False)\n    \n    cartesianCoordinateSystem4 = workPart.CoordinateSystems.CreateCoordinateSystem(xform4, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    sketchInPlaceBuilder7.Csystem = cartesianCoordinateSystem4\n    \n    origin30 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal14 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane14 = workPart.Planes.CreatePlane(origin30, normal14, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    plane14.SetMethod(NXOpen.PlaneTypes.MethodType.Coincident)\n    \n    geom13 = [NXOpen.NXObject.Null] * 1 \n    geom13[0] = face1\n    plane14.SetGeometry(geom13)\n    \n    plane14.SetFlip(False)\n    \n    plane14.SetExpression(None)\n    \n    plane14.SetAlternate(NXOpen.PlaneTypes.AlternateType.One)\n    \n    plane14.Evaluate()\n    \n    origin31 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal15 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane15 = workPart.Planes.CreatePlane(origin31, normal15, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    expression43 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    expression44 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    plane15.SynchronizeToPlane(plane14)\n    \n    scalar8 = workPart.Scalars.CreateScalar(100.0, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    point9 = workPart.Points.CreatePoint(edge3, scalar8, NXOpen.PointCollection.PointOnCurveLocationOption.PercentParameter, NXOpen.Point.Null, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    plane15.SetMethod(NXOpen.PlaneTypes.MethodType.Coincident)\n    \n    geom14 = [NXOpen.NXObject.Null] * 1 \n    geom14[0] = face1\n    plane15.SetGeometry(geom14)\n    \n    plane15.SetAlternate(NXOpen.PlaneTypes.AlternateType.One)\n    \n    plane15.Evaluate()\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch Curve->Rectangle...\n    # ----------------------------------------------\n    markId61 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.DeleteUndoMark(markId61, None)\n    \n    markId62 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.Preferences.Sketch.CreateInferredConstraints = True\n    \n    theSession.Preferences.Sketch.ContinuousAutoDimensioning = True\n    \n    theSession.Preferences.Sketch.DimensionLabel = NXOpen.Preferences.SketchPreferences.DimensionLabelType.Expression\n    \n    theSession.Preferences.Sketch.TextSizeFixed = True\n    \n    theSession.Preferences.Sketch.FixedTextSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayParenthesesOnReferenceDimensions = True\n    \n    theSession.Preferences.Sketch.DisplayReferenceGeometry = False\n    \n    theSession.Preferences.Sketch.ConstraintSymbolSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayObjectColor = False\n    \n    theSession.Preferences.Sketch.DisplayObjectName = True\n    \n    nXObject7 = sketchInPlaceBuilder7.Commit()\n    \n    sketch13 = nXObject7\n    feature10 = sketch13.Feature\n    \n    markId63 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "update")\n    \n    nErrs7 = theSession.UpdateManager.DoUpdate(markId63)\n    \n    sketch13.Activate(NXOpen.Sketch.ViewReorient.TrueValue)\n    \n    theSession.DeleteUndoMark(markId62, None)\n    \n    theSession.SetUndoMarkName(markId60, "Create Sketch")\n    \n    sketchInPlaceBuilder7.Destroy()\n    \n    sketchAlongPathBuilder7.Destroy()\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression42)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    workPart.Points.DeletePoint(point9)\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression41)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    plane13.DestroyPlane()\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression44)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression43)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    plane15.DestroyPlane()\n    \n    markId64 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Profile short list")\n    \n    origin32 = NXOpen.Point3d(82.088288685822832, 77.150647261111487, 5.0)\n    workPart.ModelingViews.WorkView.SetOrigin(origin32)\n    \n    origin33 = NXOpen.Point3d(82.088288685822832, 77.150647261111487, 5.0)\n    workPart.ModelingViews.WorkView.SetOrigin(origin33)\n    \n    scaleAboutPoint19 = NXOpen.Point3d(-13.424212623433418, -30.860258904444613, 0.0)\n    viewCenter19 = NXOpen.Point3d(13.424212623433418, 30.860258904444613, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint19, viewCenter19)\n    \n    scaleAboutPoint20 = NXOpen.Point3d(-10.739370098746715, -25.181971266026743, 0.0)\n    viewCenter20 = NXOpen.Point3d(10.739370098746715, 25.181971266026743, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint20, viewCenter20)\n    \n    scaleAboutPoint21 = NXOpen.Point3d(-8.5914960789973875, -20.145577012821391, 0.0)\n    viewCenter21 = NXOpen.Point3d(8.5914960789973875, 20.145577012821391, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint21, viewCenter21)\n    \n    scaleAboutPoint22 = NXOpen.Point3d(-7.821224016742427, -12.482357521669778, 0.0)\n    viewCenter22 = NXOpen.Point3d(7.821224016742427, 12.482357521669778, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint22, viewCenter22)\n    \n    scaleAboutPoint23 = NXOpen.Point3d(-8.153033520483028, 29.452043570116981, 0.0)\n    viewCenter23 = NXOpen.Point3d(8.153033520483028, -29.452043570117024, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(0.80000000000000004, scaleAboutPoint23, viewCenter23)\n    \n    markId65 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Rectangle")\n    \n    expression45 = workPart.Expressions.CreateSystemExpression("5.9")\n    \n    expression46 = workPart.Expressions.CreateSystemExpression("5.9")\n    \n    theSession.SetUndoMarkVisibility(markId65, "Create Rectangle", NXOpen.Session.MarkVisibility.Visible)\n    \n    # ----------------------------------------------\n    # Creating rectangle using By 2 Points method \n    # ----------------------------------------------\n    startPoint19 = NXOpen.Point3d(116.0, 60.0, 5.0)\n    endPoint19 = NXOpen.Point3d(116.0, 65.900000000000006, 5.0)\n    line19 = workPart.Curves.CreateLine(startPoint19, endPoint19)\n    \n    startPoint20 = NXOpen.Point3d(116.0, 65.900000000000006, 5.0)\n    endPoint20 = NXOpen.Point3d(110.09999999999999, 65.900000000000006, 5.0)\n    line20 = workPart.Curves.CreateLine(startPoint20, endPoint20)\n    \n    startPoint21 = NXOpen.Point3d(110.09999999999999, 65.900000000000006, 5.0)\n    endPoint21 = NXOpen.Point3d(110.09999999999999, 60.0, 5.0)\n    line21 = workPart.Curves.CreateLine(startPoint21, endPoint21)\n    \n    startPoint22 = NXOpen.Point3d(110.09999999999999, 60.0, 5.0)\n    endPoint22 = NXOpen.Point3d(116.0, 60.0, 5.0)\n    line22 = workPart.Curves.CreateLine(startPoint22, endPoint22)\n    \n    theSession.ActiveSketch.AddGeometry(line19, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    theSession.ActiveSketch.AddGeometry(line20, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    theSession.ActiveSketch.AddGeometry(line21, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    theSession.ActiveSketch.AddGeometry(line22, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    geom1_22 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_22.Geometry = line19\n    geom1_22.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_22.SplineDefiningPointIndex = 0\n    geom2_22 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_22.Geometry = line20\n    geom2_22.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_22.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint44 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_22, geom2_22)\n    \n    geom1_23 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_23.Geometry = line20\n    geom1_23.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_23.SplineDefiningPointIndex = 0\n    geom2_23 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_23.Geometry = line21\n    geom2_23.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_23.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint45 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_23, geom2_23)\n    \n    geom1_24 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_24.Geometry = line21\n    geom1_24.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_24.SplineDefiningPointIndex = 0\n    geom2_24 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_24.Geometry = line22\n    geom2_24.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_24.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint46 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_24, geom2_24)\n    \n    geom1_25 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_25.Geometry = line22\n    geom1_25.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_25.SplineDefiningPointIndex = 0\n    geom2_25 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_25.Geometry = line19\n    geom2_25.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_25.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint47 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_25, geom2_25)\n    \n    geom15 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom15.Geometry = line19\n    geom15.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    geom15.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint48 = theSession.ActiveSketch.CreateHorizontalConstraint(geom15)\n    \n    conGeom1_17 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_17.Geometry = line19\n    conGeom1_17.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_17.SplineDefiningPointIndex = 0\n    conGeom2_17 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_17.Geometry = line20\n    conGeom2_17.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_17.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint49 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_17, conGeom2_17)\n    \n    conGeom1_18 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_18.Geometry = line20\n    conGeom1_18.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_18.SplineDefiningPointIndex = 0\n    conGeom2_18 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_18.Geometry = line21\n    conGeom2_18.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_18.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint50 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_18, conGeom2_18)\n    \n    conGeom1_19 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_19.Geometry = line21\n    conGeom1_19.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_19.SplineDefiningPointIndex = 0\n    conGeom2_19 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_19.Geometry = line22\n    conGeom2_19.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_19.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint51 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_19, conGeom2_19)\n    \n    conGeom1_20 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_20.Geometry = line22\n    conGeom1_20.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_20.SplineDefiningPointIndex = 0\n    conGeom2_20 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_20.Geometry = line19\n    conGeom2_20.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_20.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint52 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_20, conGeom2_20)\n    \n    dimObject1_9 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject1_9.Geometry = line19\n    dimObject1_9.AssocType = NXOpen.Sketch.AssocType.StartPoint\n    dimObject1_9.AssocValue = 0\n    dimObject1_9.HelpPoint.X = 0.0\n    dimObject1_9.HelpPoint.Y = 0.0\n    dimObject1_9.HelpPoint.Z = 0.0\n    dimObject1_9.View = NXOpen.NXObject.Null\n    dimObject2_9 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject2_9.Geometry = line19\n    dimObject2_9.AssocType = NXOpen.Sketch.AssocType.EndPoint\n    dimObject2_9.AssocValue = 0\n    dimObject2_9.HelpPoint.X = 0.0\n    dimObject2_9.HelpPoint.Y = 0.0\n    dimObject2_9.HelpPoint.Z = 0.0\n    dimObject2_9.View = NXOpen.NXObject.Null\n    dimOrigin9 = NXOpen.Point3d(121.37464213033124, 62.950000000000003, 5.0)\n    sketchDimensionalConstraint9 = theSession.ActiveSketch.CreateDimension(NXOpen.Sketch.ConstraintType.ParallelDim, dimObject1_9, dimObject2_9, dimOrigin9, expression45, NXOpen.Sketch.DimensionOption.CreateAsDriving)\n    \n    sketchHelpedDimensionalConstraint9 = sketchDimensionalConstraint9\n    dimension9 = sketchHelpedDimensionalConstraint9.AssociatedDimension\n    \n    dimObject1_10 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject1_10.Geometry = line20\n    dimObject1_10.AssocType = NXOpen.Sketch.AssocType.StartPoint\n    dimObject1_10.AssocValue = 0\n    dimObject1_10.HelpPoint.X = 0.0\n    dimObject1_10.HelpPoint.Y = 0.0\n    dimObject1_10.HelpPoint.Z = 0.0\n    dimObject1_10.View = NXOpen.NXObject.Null\n    dimObject2_10 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject2_10.Geometry = line20\n    dimObject2_10.AssocType = NXOpen.Sketch.AssocType.EndPoint\n    dimObject2_10.AssocValue = 0\n    dimObject2_10.HelpPoint.X = 0.0\n    dimObject2_10.HelpPoint.Y = 0.0\n    dimObject2_10.HelpPoint.Z = 0.0\n    dimObject2_10.View = NXOpen.NXObject.Null\n    dimOrigin10 = NXOpen.Point3d(113.05, 71.274642130331245, 5.0)\n    sketchDimensionalConstraint10 = theSession.ActiveSketch.CreateDimension(NXOpen.Sketch.ConstraintType.ParallelDim, dimObject1_10, dimObject2_10, dimOrigin10, expression46, NXOpen.Sketch.DimensionOption.CreateAsDriving)\n    \n    sketchHelpedDimensionalConstraint10 = sketchDimensionalConstraint10\n    dimension10 = sketchHelpedDimensionalConstraint10.AssociatedDimension\n    \n    theSession.Preferences.Sketch.AutoDimensionsToArcCenter = False\n    \n    theSession.ActiveSketch.Update()\n    \n    theSession.Preferences.Sketch.AutoDimensionsToArcCenter = True\n    \n    geoms9 = [NXOpen.SmartObject.Null] * 4 \n    geoms9[0] = line19\n    geoms9[1] = line20\n    geoms9[2] = line21\n    geoms9[3] = line22\n    theSession.ActiveSketch.UpdateConstraintDisplay(geoms9)\n    \n    geoms10 = [NXOpen.SmartObject.Null] * 4 \n    geoms10[0] = line19\n    geoms10[1] = line20\n    geoms10[2] = line21\n    geoms10[3] = line22\n    theSession.ActiveSketch.UpdateDimensionDisplay(geoms10)\n    \n    # ----------------------------------------------\n    #   Menu: File->Finish Sketch\n    # ----------------------------------------------\n    sketch14 = theSession.ActiveSketch\n    \n    markId66 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Deactivate Sketch")\n    \n    theSession.ActiveSketch.Deactivate(NXOpen.Sketch.ViewReorient.TrueValue, NXOpen.Sketch.UpdateLevel.Model)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Design Feature->Extrude...\n    # ----------------------------------------------\n    markId67 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    extrudeBuilder6 = workPart.Features.CreateExtrudeBuilder(NXOpen.Features.Feature.Null)\n    \n    section6 = workPart.Sections.CreateSection(0.0094999999999999998, 0.01, 0.5)\n    \n    extrudeBuilder6.Section = section6\n    \n    extrudeBuilder6.AllowSelfIntersectingSection(True)\n    \n    expression47 = workPart.Expressions.CreateSystemExpressionWithUnits("2.00", unit2)\n    \n    extrudeBuilder6.DistanceTolerance = 0.01\n    \n    extrudeBuilder6.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Create\n    \n    targetBodies17 = [NXOpen.Body.Null] * 1 \n    targetBodies17[0] = NXOpen.Body.Null\n    extrudeBuilder6.BooleanOperation.SetTargetBodies(targetBodies17)\n    \n    extrudeBuilder6.Limits.StartExtend.Value.SetFormula("0")\n    \n    extrudeBuilder6.Limits.EndExtend.Value.SetFormula("20")\n    \n    extrudeBuilder6.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Create\n    \n    targetBodies18 = [NXOpen.Body.Null] * 1 \n    targetBodies18[0] = NXOpen.Body.Null\n    extrudeBuilder6.BooleanOperation.SetTargetBodies(targetBodies18)\n    \n    extrudeBuilder6.Draft.FrontDraftAngle.SetFormula("2")\n    \n    extrudeBuilder6.Draft.BackDraftAngle.SetFormula("2")\n    \n    extrudeBuilder6.Offset.StartOffset.SetFormula("0")\n    \n    extrudeBuilder6.Offset.EndOffset.SetFormula("5")\n    \n    smartVolumeProfileBuilder6 = extrudeBuilder6.SmartVolumeProfile\n    \n    smartVolumeProfileBuilder6.OpenProfileSmartVolumeOption = False\n    \n    smartVolumeProfileBuilder6.CloseProfileRule = NXOpen.GeometricUtilities.SmartVolumeProfileBuilder.CloseProfileRuleType.Fci\n    \n    theSession.SetUndoMarkName(markId67, "Extrude Dialog")\n    \n    section6.DistanceTolerance = 0.01\n    \n    section6.ChainingTolerance = 0.0094999999999999998\n    \n    section6.SetAllowedEntityTypes(NXOpen.Section.AllowTypes.OnlyCurves)\n    \n    markId68 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "section mark")\n    \n    markId69 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, None)\n    \n    features4 = [NXOpen.Features.Feature.Null] * 1 \n    sketchFeature4 = feature10\n    features4[0] = sketchFeature4\n    curveFeatureRule4 = workPart.ScRuleFactory.CreateRuleCurveFeature(features4)\n    \n    section6.AllowSelfIntersection(True)\n    \n    rules4 = [None] * 1 \n    rules4[0] = curveFeatureRule4\n    helpPoint4 = NXOpen.Point3d(112.27656098876895, 65.900000000000006, 5.0000000000000018)\n    section6.AddToSection(rules4, line20, NXOpen.NXObject.Null, NXOpen.NXObject.Null, helpPoint4, NXOpen.Section.Mode.Create, False)\n    \n    theSession.DeleteUndoMark(markId69, None)\n    \n    direction8 = workPart.Directions.CreateDirection(sketch14, NXOpen.Sense.Forward, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    extrudeBuilder6.Direction = direction8\n    \n    targetBodies19 = [NXOpen.Body.Null] * 1 \n    targetBodies19[0] = body1\n    extrudeBuilder6.BooleanOperation.SetTargetBodies(targetBodies19)\n    \n    extrudeBuilder6.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Unite\n    \n    targetBodies20 = [NXOpen.Body.Null] * 1 \n    targetBodies20[0] = body1\n    extrudeBuilder6.BooleanOperation.SetTargetBodies(targetBodies20)\n    \n    expression48 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    theSession.DeleteUndoMark(markId68, None)\n    \n    markId70 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Extrude")\n    \n    theSession.DeleteUndoMark(markId70, None)\n    \n    markId71 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Extrude")\n    \n    extrudeBuilder6.ParentFeatureInternal = False\n    \n    feature11 = extrudeBuilder6.CommitFeature()\n    \n    theSession.DeleteUndoMark(markId71, None)\n    \n    theSession.SetUndoMarkName(markId67, "Extrude")\n    \n    expression49 = extrudeBuilder6.Limits.StartExtend.Value\n    expression50 = extrudeBuilder6.Limits.EndExtend.Value\n    extrudeBuilder6.Destroy()\n    \n    workPart.Expressions.Delete(expression47)\n    \n    workPart.Expressions.Delete(expression48)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch...\n    # ----------------------------------------------\n    markId72 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    sketchInPlaceBuilder8 = workPart.Sketches.CreateSketchInPlaceBuilder2(NXOpen.Sketch.Null)\n    \n    origin34 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal16 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane16 = workPart.Planes.CreatePlane(origin34, normal16, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    sketchInPlaceBuilder8.PlaneReference = plane16\n    \n    expression51 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    expression52 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    sketchAlongPathBuilder8 = workPart.Sketches.CreateSketchAlongPathBuilder(NXOpen.Sketch.Null)\n    \n    sketchAlongPathBuilder8.PlaneLocation.Expression.SetFormula("0")\n    \n    theSession.SetUndoMarkName(markId72, "Create Sketch Dialog")\n    \n    scaleAboutPoint24 = NXOpen.Point3d(-29.162944664700156, 48.759209069022468, 0.0)\n    viewCenter24 = NXOpen.Point3d(29.162944664700156, -48.759209069022575, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint24, viewCenter24)\n    \n    scaleAboutPoint25 = NXOpen.Point3d(-22.589709518053429, 39.007367255217979, 0.0)\n    viewCenter25 = NXOpen.Point3d(22.589709518053471, -39.007367255218057, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint25, viewCenter25)\n    \n    scaleAboutPoint26 = NXOpen.Point3d(-17.479250643477407, 31.205893804174387, 0.0)\n    viewCenter26 = NXOpen.Point3d(17.479250643477471, -31.205893804174451, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint26, viewCenter26)\n    \n    scaleAboutPoint27 = NXOpen.Point3d(-13.66739146360039, 24.96471504333951, 0.0)\n    viewCenter27 = NXOpen.Point3d(13.667391463600454, -24.964715043339563, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint27, viewCenter27)\n    \n    scaleAboutPoint28 = NXOpen.Point3d(-10.93391317088032, 19.971772034671606, 0.0)\n    viewCenter28 = NXOpen.Point3d(10.933913170880382, -19.971772034671645, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint28, viewCenter28)\n    \n    scalar9 = workPart.Scalars.CreateScalar(0.0, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    extrude2 = feature6\n    edge6 = extrude2.FindObject("EDGE * 160 * 170 {(59.9,65.9,65)(59.9,65.9,35)(59.9,65.9,5) EXTRUDE(2)}")\n    point10 = workPart.Points.CreatePoint(edge6, scalar9, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    edge7 = extrude1.FindObject("EDGE * 130 EXTRUDE(5) 170 {(59.9,65.9,5)(59.9,62.95,5)(59.9,60,5) EXTRUDE(2)}")\n    direction9 = workPart.Directions.CreateDirection(edge7, NXOpen.Sense.Reverse, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    face2 = extrude2.FindObject("FACE 170 {(59.9,62.95,35) EXTRUDE(2)}")\n    xform5 = workPart.Xforms.CreateXformByPlaneXDirPoint(face2, direction9, point10, NXOpen.SmartObject.UpdateOption.WithinModeling, 0.625, False, False)\n    \n    cartesianCoordinateSystem5 = workPart.CoordinateSystems.CreateCoordinateSystem(xform5, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    sketchInPlaceBuilder8.Csystem = cartesianCoordinateSystem5\n    \n    origin35 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal17 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane17 = workPart.Planes.CreatePlane(origin35, normal17, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    plane17.SetMethod(NXOpen.PlaneTypes.MethodType.Coincident)\n    \n    geom16 = [NXOpen.NXObject.Null] * 1 \n    geom16[0] = face2\n    plane17.SetGeometry(geom16)\n    \n    plane17.SetFlip(False)\n    \n    plane17.SetExpression(None)\n    \n    plane17.SetAlternate(NXOpen.PlaneTypes.AlternateType.One)\n    \n    plane17.Evaluate()\n    \n    origin36 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal18 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane18 = workPart.Planes.CreatePlane(origin36, normal18, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    expression53 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    expression54 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    plane18.SynchronizeToPlane(plane17)\n    \n    scalar10 = workPart.Scalars.CreateScalar(0.0, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    point11 = workPart.Points.CreatePoint(edge6, scalar10, NXOpen.PointCollection.PointOnCurveLocationOption.PercentParameter, NXOpen.Point.Null, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    plane18.SetMethod(NXOpen.PlaneTypes.MethodType.Coincident)\n    \n    geom17 = [NXOpen.NXObject.Null] * 1 \n    geom17[0] = face2\n    plane18.SetGeometry(geom17)\n    \n    plane18.SetAlternate(NXOpen.PlaneTypes.AlternateType.One)\n    \n    plane18.Evaluate()\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Design Feature->Extrude...\n    # ----------------------------------------------\n    markId73 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.DeleteUndoMark(markId73, None)\n    \n    markId74 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.Preferences.Sketch.CreateInferredConstraints = True\n    \n    theSession.Preferences.Sketch.ContinuousAutoDimensioning = True\n    \n    theSession.Preferences.Sketch.DimensionLabel = NXOpen.Preferences.SketchPreferences.DimensionLabelType.Expression\n    \n    theSession.Preferences.Sketch.TextSizeFixed = True\n    \n    theSession.Preferences.Sketch.FixedTextSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayParenthesesOnReferenceDimensions = True\n    \n    theSession.Preferences.Sketch.DisplayReferenceGeometry = False\n    \n    theSession.Preferences.Sketch.ConstraintSymbolSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayObjectColor = False\n    \n    theSession.Preferences.Sketch.DisplayObjectName = True\n    \n    nXObject8 = sketchInPlaceBuilder8.Commit()\n    \n    sketch15 = nXObject8\n    feature12 = sketch15.Feature\n    \n    markId75 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "update")\n    \n    nErrs8 = theSession.UpdateManager.DoUpdate(markId75)\n    \n    sketch15.Activate(NXOpen.Sketch.ViewReorient.TrueValue)\n    \n    theSession.DeleteUndoMark(markId74, None)\n    \n    theSession.SetUndoMarkName(markId72, "Create Sketch")\n    \n    sketchInPlaceBuilder8.Destroy()\n    \n    sketchAlongPathBuilder8.Destroy()\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression52)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    workPart.Points.DeletePoint(point11)\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression51)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    plane16.DestroyPlane()\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression54)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression53)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    plane18.DestroyPlane()\n    \n    markId76 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    extrudeBuilder7 = workPart.Features.CreateExtrudeBuilder(NXOpen.Features.Feature.Null)\n    \n    section7 = workPart.Sections.CreateSection(0.0094999999999999998, 0.01, 0.5)\n    \n    extrudeBuilder7.Section = section7\n    \n    extrudeBuilder7.AllowSelfIntersectingSection(True)\n    \n    expression55 = workPart.Expressions.CreateSystemExpressionWithUnits("2.00", unit2)\n    \n    extrudeBuilder7.DistanceTolerance = 0.01\n    \n    extrudeBuilder7.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Create\n    \n    targetBodies21 = [NXOpen.Body.Null] * 1 \n    targetBodies21[0] = NXOpen.Body.Null\n    extrudeBuilder7.BooleanOperation.SetTargetBodies(targetBodies21)\n    \n    extrudeBuilder7.Limits.StartExtend.Value.SetFormula("0")\n    \n    extrudeBuilder7.Limits.EndExtend.Value.SetFormula("20")\n    \n    extrudeBuilder7.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Create\n    \n    targetBodies22 = [NXOpen.Body.Null] * 1 \n    targetBodies22[0] = NXOpen.Body.Null\n    extrudeBuilder7.BooleanOperation.SetTargetBodies(targetBodies22)\n    \n    extrudeBuilder7.Draft.FrontDraftAngle.SetFormula("2")\n    \n    extrudeBuilder7.Draft.BackDraftAngle.SetFormula("2")\n    \n    extrudeBuilder7.Offset.StartOffset.SetFormula("0")\n    \n    extrudeBuilder7.Offset.EndOffset.SetFormula("5")\n    \n    smartVolumeProfileBuilder7 = extrudeBuilder7.SmartVolumeProfile\n    \n    smartVolumeProfileBuilder7.OpenProfileSmartVolumeOption = False\n    \n    smartVolumeProfileBuilder7.CloseProfileRule = NXOpen.GeometricUtilities.SmartVolumeProfileBuilder.CloseProfileRuleType.Fci\n    \n    theSession.SetUndoMarkName(markId76, "Extrude Dialog")\n    \n    section7.DistanceTolerance = 0.01\n    \n    section7.ChainingTolerance = 0.0094999999999999998\n    \n    section7.SetAllowedEntityTypes(NXOpen.Section.AllowTypes.OnlyCurves)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch Curve->Circle...\n    # ----------------------------------------------\n    extrudeBuilder7.Destroy()\n    \n    section7.Destroy()\n    \n    workPart.Expressions.Delete(expression55)\n    \n    theSession.UndoToMark(markId76, None)\n    \n    theSession.DeleteUndoMark(markId76, None)\n    \n    markId77 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Profile short list")\n    \n    markId78 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Curve")\n    \n    expression56 = workPart.Expressions.CreateSystemExpression("3")\n    \n    theSession.SetUndoMarkVisibility(markId78, "Curve", NXOpen.Session.MarkVisibility.Visible)\n    \n    nXMatrix1 = theSession.ActiveSketch.Orientation\n    \n    center1 = NXOpen.Point3d(59.899999999999999, 62.950000000000003, 61.0)\n    arc1 = workPart.Curves.CreateArc(center1, nXMatrix1, 1.5, 0.0, ( 360.0 * math.pi/180.0 ))\n    \n    theSession.ActiveSketch.AddGeometry(arc1, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    dimObject1_11 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject1_11.Geometry = arc1\n    dimObject1_11.AssocType = NXOpen.Sketch.AssocType.NotSet\n    dimObject1_11.AssocValue = 0\n    dimObject1_11.HelpPoint.X = 0.0\n    dimObject1_11.HelpPoint.Y = 0.0\n    dimObject1_11.HelpPoint.Z = 0.0\n    dimObject1_11.View = NXOpen.NXObject.Null\n    dimOrigin11 = NXOpen.Point3d(59.899999999999999, 62.950000000000003, 62.146590321137332)\n    sketchDimensionalConstraint11 = theSession.ActiveSketch.CreateDiameterDimension(dimObject1_11, dimOrigin11, expression56, NXOpen.Sketch.DimensionOption.CreateAsDriving)\n    \n    dimension11 = sketchDimensionalConstraint11.AssociatedDimension\n    \n    theSession.ActiveSketch.Update()\n    \n    markId79 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Curve")\n    \n    scaleAboutPoint29 = NXOpen.Point3d(-0.75842172283558928, -11.528010187101604, 0.0)\n    viewCenter29 = NXOpen.Point3d(0.75842172283566434, 11.528010187101604, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint29, viewCenter29)\n    \n    scaleAboutPoint30 = NXOpen.Point3d(-0.36404242696108807, -9.2224081496812804, 0.0)\n    viewCenter30 = NXOpen.Point3d(0.36404242696114147, 9.2224081496812804, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint30, viewCenter30)\n    \n    scaleAboutPoint31 = NXOpen.Point3d(-0.22651528788688388, -7.3132078660630615, 0.0)\n    viewCenter31 = NXOpen.Point3d(0.22651528788693731, 7.3132078660630615, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint31, viewCenter31)\n    \n    scaleAboutPoint32 = NXOpen.Point3d(0.025887461472816033, -5.7987913699048423, 0.0)\n    viewCenter32 = NXOpen.Point3d(-0.025887461472760474, 5.7987913699048423, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint32, viewCenter32)\n    \n    scaleAboutPoint33 = NXOpen.Point3d(0.227809660960576, -4.1834137740027844, 0.0)\n    viewCenter33 = NXOpen.Point3d(-0.22780966096051786, 4.1834137740027844, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint33, viewCenter33)\n    \n    scaleAboutPoint34 = NXOpen.Point3d(0.18224772876846079, -3.346731019202227, 0.0)\n    viewCenter34 = NXOpen.Point3d(-0.18224772876841155, 3.346731019202227, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint34, viewCenter34)\n    \n    scaleAboutPoint35 = NXOpen.Point3d(0.14579818301478181, -2.677384815361783, 0.0)\n    viewCenter35 = NXOpen.Point3d(-0.14579818301471836, 2.677384815361783, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint35, viewCenter35)\n    \n    scaleAboutPoint36 = NXOpen.Point3d(0.6043997404975443, -0.84828033754036791, 0.0)\n    viewCenter36 = NXOpen.Point3d(-0.60439974049748135, 0.84828033754036791, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(0.80000000000000004, scaleAboutPoint36, viewCenter36)\n    \n    # ----------------------------------------------\n    #   Menu: File->Finish Sketch\n    # ----------------------------------------------\n    theSession.DeleteUndoMark(markId79, "Curve")\n    \n    sketch16 = theSession.ActiveSketch\n    \n    markId80 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Deactivate Sketch")\n    \n    theSession.ActiveSketch.Deactivate(NXOpen.Sketch.ViewReorient.TrueValue, NXOpen.Sketch.UpdateLevel.Model)\n    \n    scaleAboutPoint37 = NXOpen.Point3d(-65.881566990321772, 28.314410985863557, 0.0)\n    viewCenter37 = NXOpen.Point3d(65.881566990321829, -28.314410985863557, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(0.80000000000000004, scaleAboutPoint37, viewCenter37)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Design Feature->Extrude...\n    # ----------------------------------------------\n    markId81 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    extrudeBuilder8 = workPart.Features.CreateExtrudeBuilder(NXOpen.Features.Feature.Null)\n    \n    section8 = workPart.Sections.CreateSection(0.0094999999999999998, 0.01, 0.5)\n    \n    extrudeBuilder8.Section = section8\n    \n    extrudeBuilder8.AllowSelfIntersectingSection(True)\n    \n    expression57 = workPart.Expressions.CreateSystemExpressionWithUnits("2.00", unit2)\n    \n    extrudeBuilder8.DistanceTolerance = 0.01\n    \n    extrudeBuilder8.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Create\n    \n    targetBodies23 = [NXOpen.Body.Null] * 1 \n    targetBodies23[0] = NXOpen.Body.Null\n    extrudeBuilder8.BooleanOperation.SetTargetBodies(targetBodies23)\n    \n    extrudeBuilder8.Limits.StartExtend.Value.SetFormula("0")\n    \n    extrudeBuilder8.Limits.EndExtend.Value.SetFormula("20")\n    \n    extrudeBuilder8.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Create\n    \n    targetBodies24 = [NXOpen.Body.Null] * 1 \n    targetBodies24[0] = NXOpen.Body.Null\n    extrudeBuilder8.BooleanOperation.SetTargetBodies(targetBodies24)\n    \n    extrudeBuilder8.Draft.FrontDraftAngle.SetFormula("2")\n    \n    extrudeBuilder8.Draft.BackDraftAngle.SetFormula("2")\n    \n    extrudeBuilder8.Offset.StartOffset.SetFormula("0")\n    \n    extrudeBuilder8.Offset.EndOffset.SetFormula("5")\n    \n    smartVolumeProfileBuilder8 = extrudeBuilder8.SmartVolumeProfile\n    \n    smartVolumeProfileBuilder8.OpenProfileSmartVolumeOption = False\n    \n    smartVolumeProfileBuilder8.CloseProfileRule = NXOpen.GeometricUtilities.SmartVolumeProfileBuilder.CloseProfileRuleType.Fci\n    \n    theSession.SetUndoMarkName(markId81, "Extrude Dialog")\n    \n    section8.DistanceTolerance = 0.01\n    \n    section8.ChainingTolerance = 0.0094999999999999998\n    \n    section8.SetAllowedEntityTypes(NXOpen.Section.AllowTypes.OnlyCurves)\n    \n    scaleAboutPoint38 = NXOpen.Point3d(-22.815853495305213, 26.039145817356648, 0.0)\n    viewCenter38 = NXOpen.Point3d(22.815853495305255, -26.039145817356648, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint38, viewCenter38)\n    \n    markId82 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "section mark")\n    \n    markId83 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, None)\n    \n    features5 = [NXOpen.Features.Feature.Null] * 1 \n    sketchFeature5 = feature12\n    features5[0] = sketchFeature5\n    curveFeatureRule5 = workPart.ScRuleFactory.CreateRuleCurveFeature(features5)\n    \n    section8.AllowSelfIntersection(True)\n    \n    rules5 = [None] * 1 \n    rules5[0] = curveFeatureRule5\n    helpPoint5 = NXOpen.Point3d(59.899999999999999, 64.401906944746884, 61.353023634290835)\n    section8.AddToSection(rules5, arc1, NXOpen.NXObject.Null, NXOpen.NXObject.Null, helpPoint5, NXOpen.Section.Mode.Create, False)\n    \n    theSession.DeleteUndoMark(markId83, None)\n    \n    direction10 = workPart.Directions.CreateDirection(sketch16, NXOpen.Sense.Forward, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    extrudeBuilder8.Direction = direction10\n    \n    targetBodies25 = [NXOpen.Body.Null] * 1 \n    targetBodies25[0] = body1\n    extrudeBuilder8.BooleanOperation.SetTargetBodies(targetBodies25)\n    \n    extrudeBuilder8.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Unite\n    \n    targetBodies26 = [NXOpen.Body.Null] * 1 \n    targetBodies26[0] = body1\n    extrudeBuilder8.BooleanOperation.SetTargetBodies(targetBodies26)\n    \n    expression58 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    theSession.DeleteUndoMark(markId82, None)\n    \n    extrudeBuilder8.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Subtract\n    \n    targetBodies27 = [NXOpen.Body.Null] * 1 \n    targetBodies27[0] = body1\n    extrudeBuilder8.BooleanOperation.SetTargetBodies(targetBodies27)\n    \n    direction11 = extrudeBuilder8.Direction\n    \n    success1 = direction11.ReverseDirection()\n    \n    extrudeBuilder8.Direction = direction11\n    \n    extrudeBuilder8.Limits.EndExtend.Value.SetFormula("6")\n    \n    markId84 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Extrude")\n    \n    theSession.DeleteUndoMark(markId84, None)\n    \n    markId85 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Extrude")\n    \n    extrudeBuilder8.ParentFeatureInternal = False\n    \n    feature13 = extrudeBuilder8.CommitFeature()\n    \n    theSession.DeleteUndoMark(markId85, None)\n    \n    theSession.SetUndoMarkName(markId81, "Extrude")\n    \n    expression59 = extrudeBuilder8.Limits.StartExtend.Value\n    expression60 = extrudeBuilder8.Limits.EndExtend.Value\n    extrudeBuilder8.Destroy()\n    \n    workPart.Expressions.Delete(expression57)\n    \n    workPart.Expressions.Delete(expression58)\n    \n    scaleAboutPoint39 = NXOpen.Point3d(-50.814255429987242, -2.3258266166959616, 0.0)\n    viewCenter39 = NXOpen.Point3d(50.814255429987291, 2.3258266166959616, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(0.80000000000000004, scaleAboutPoint39, viewCenter39)\n    \n    rotMatrix2 = NXOpen.Matrix3x3()\n    \n    rotMatrix2.Xx = 0.46220069408116682\n    rotMatrix2.Xy = 0.88673085240695038\n    rotMatrix2.Xz = -0.008883342869107122\n    rotMatrix2.Yx = -0.17616656654984669\n    rotMatrix2.Yy = 0.10163398042311432\n    rotMatrix2.Yz = 0.97909952244569698\n    rotMatrix2.Zx = 0.86910060362476216\n    rotMatrix2.Zy = -0.45097553083620512\n    rotMatrix2.Zz = 0.20318762601614668\n    translation2 = NXOpen.Point3d(-115.33905764790313, -35.056795083266927, -11.460508473624902)\n    workPart.ModelingViews.WorkView.SetRotationTranslationScale(rotMatrix2, translation2, 2.0931626194257249)\n    \n    origin37 = NXOpen.Point3d(46.970445925104414, 80.413157857164364, 33.972699291708302)\n    workPart.ModelingViews.WorkView.SetOrigin(origin37)\n    \n    origin38 = NXOpen.Point3d(46.970445925104414, 80.413157857164364, 33.972699291708302)\n    workPart.ModelingViews.WorkView.SetOrigin(origin38)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch...\n    # ----------------------------------------------\n    markId86 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    sketchInPlaceBuilder9 = workPart.Sketches.CreateSketchInPlaceBuilder2(NXOpen.Sketch.Null)\n    \n    origin39 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal19 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane19 = workPart.Planes.CreatePlane(origin39, normal19, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    sketchInPlaceBuilder9.PlaneReference = plane19\n    \n    expression61 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    expression62 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    sketchAlongPathBuilder9 = workPart.Sketches.CreateSketchAlongPathBuilder(NXOpen.Sketch.Null)\n    \n    sketchAlongPathBuilder9.PlaneLocation.Expression.SetFormula("0")\n    \n    theSession.SetUndoMarkName(markId86, "Create Sketch Dialog")\n    \n    scalar11 = workPart.Scalars.CreateScalar(1.0, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    extrude3 = feature9\n    edge8 = extrude3.FindObject("EDGE * 130 * 160 {(59.9,9.9,25)(59.9,6.95,25)(59.9,4,25) EXTRUDE(2)}")\n    point12 = workPart.Points.CreatePoint(edge8, scalar11, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    edge9 = extrude1.FindObject("EDGE * 130 EXTRUDE(7) 160 {(59.9,9.9,5)(59.9,6.95,5)(59.9,4,5) EXTRUDE(2)}")\n    direction12 = workPart.Directions.CreateDirection(edge9, NXOpen.Sense.Reverse, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    face3 = extrude3.FindObject("FACE 160 {(59.9,6.95,15) EXTRUDE(2)}")\n    xform6 = workPart.Xforms.CreateXformByPlaneXDirPoint(face3, direction12, point12, NXOpen.SmartObject.UpdateOption.WithinModeling, 0.625, False, False)\n    \n    cartesianCoordinateSystem6 = workPart.CoordinateSystems.CreateCoordinateSystem(xform6, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    sketchInPlaceBuilder9.Csystem = cartesianCoordinateSystem6\n    \n    origin40 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal20 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane20 = workPart.Planes.CreatePlane(origin40, normal20, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    plane20.SetMethod(NXOpen.PlaneTypes.MethodType.Coincident)\n    \n    geom18 = [NXOpen.NXObject.Null] * 1 \n    geom18[0] = face3\n    plane20.SetGeometry(geom18)\n    \n    plane20.SetFlip(False)\n    \n    plane20.SetExpression(None)\n    \n    plane20.SetAlternate(NXOpen.PlaneTypes.AlternateType.One)\n    \n    plane20.Evaluate()\n    \n    origin41 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal21 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane21 = workPart.Planes.CreatePlane(origin41, normal21, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    expression63 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    expression64 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    plane21.SynchronizeToPlane(plane20)\n    \n    scalar12 = workPart.Scalars.CreateScalar(100.0, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    point13 = workPart.Points.CreatePoint(edge8, scalar12, NXOpen.PointCollection.PointOnCurveLocationOption.PercentParameter, NXOpen.Point.Null, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    plane21.SetMethod(NXOpen.PlaneTypes.MethodType.Coincident)\n    \n    geom19 = [NXOpen.NXObject.Null] * 1 \n    geom19[0] = face3\n    plane21.SetGeometry(geom19)\n    \n    plane21.SetAlternate(NXOpen.PlaneTypes.AlternateType.One)\n    \n    plane21.Evaluate()\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch Curve->Circle...\n    # ----------------------------------------------\n    markId87 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.DeleteUndoMark(markId87, None)\n    \n    markId88 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.Preferences.Sketch.CreateInferredConstraints = True\n    \n    theSession.Preferences.Sketch.ContinuousAutoDimensioning = True\n    \n    theSession.Preferences.Sketch.DimensionLabel = NXOpen.Preferences.SketchPreferences.DimensionLabelType.Expression\n    \n    theSession.Preferences.Sketch.TextSizeFixed = True\n    \n    theSession.Preferences.Sketch.FixedTextSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayParenthesesOnReferenceDimensions = True\n    \n    theSession.Preferences.Sketch.DisplayReferenceGeometry = False\n    \n    theSession.Preferences.Sketch.ConstraintSymbolSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayObjectColor = False\n    \n    theSession.Preferences.Sketch.DisplayObjectName = True\n    \n    nXObject9 = sketchInPlaceBuilder9.Commit()\n    \n    sketch17 = nXObject9\n    feature14 = sketch17.Feature\n    \n    markId89 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "update")\n    \n    nErrs9 = theSession.UpdateManager.DoUpdate(markId89)\n    \n    sketch17.Activate(NXOpen.Sketch.ViewReorient.TrueValue)\n    \n    theSession.DeleteUndoMark(markId88, None)\n    \n    theSession.SetUndoMarkName(markId86, "Create Sketch")\n    \n    sketchInPlaceBuilder9.Destroy()\n    \n    sketchAlongPathBuilder9.Destroy()\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression62)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    workPart.Points.DeletePoint(point13)\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression61)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    plane19.DestroyPlane()\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression64)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression63)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    plane21.DestroyPlane()\n    \n    markId90 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Profile short list")\n    \n    scaleAboutPoint40 = NXOpen.Point3d(7.7738226590652459, -6.9521991259932854, 0.0)\n    viewCenter40 = NXOpen.Point3d(-7.7738226590651935, 6.9521991259932854, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint40, viewCenter40)\n    \n    scaleAboutPoint41 = NXOpen.Point3d(6.2190581272522056, -5.5617593007946287, 0.0)\n    viewCenter41 = NXOpen.Point3d(-6.2190581272521381, 5.5617593007946287, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint41, viewCenter41)\n    \n    scaleAboutPoint42 = NXOpen.Point3d(4.975246501801764, -4.449407440635702, 0.0)\n    viewCenter42 = NXOpen.Point3d(-4.9752465018017107, 4.449407440635702, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint42, viewCenter42)\n    \n    scaleAboutPoint43 = NXOpen.Point3d(3.9801972014414106, -3.4300886451446306, 0.0)\n    viewCenter43 = NXOpen.Point3d(-3.980197201441368, 3.4300886451446306, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint43, viewCenter43)\n    \n    markId91 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Curve")\n    \n    expression65 = workPart.Expressions.CreateSystemExpression("3.67396249294538")\n    \n    theSession.SetUndoMarkVisibility(markId91, "Curve", NXOpen.Session.MarkVisibility.Visible)\n    \n    nXMatrix2 = theSession.ActiveSketch.Orientation\n    \n    center2 = NXOpen.Point3d(59.899999999999999, 6.9500000000000002, 21.0)\n    arc2 = workPart.Curves.CreateArc(center2, nXMatrix2, 1.83698124647269, 0.0, ( 360.0 * math.pi/180.0 ))\n    \n    theSession.ActiveSketch.AddGeometry(arc2, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    dimObject1_12 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject1_12.Geometry = arc2\n    dimObject1_12.AssocType = NXOpen.Sketch.AssocType.NotSet\n    dimObject1_12.AssocValue = 0\n    dimObject1_12.HelpPoint.X = 0.0\n    dimObject1_12.HelpPoint.Y = 0.0\n    dimObject1_12.HelpPoint.Z = 0.0\n    dimObject1_12.View = NXOpen.NXObject.Null\n    dimOrigin12 = NXOpen.Point3d(59.899999999999999, 6.9500000000000002, 21.587054244422315)\n    sketchDimensionalConstraint12 = theSession.ActiveSketch.CreateDiameterDimension(dimObject1_12, dimOrigin12, expression65, NXOpen.Sketch.DimensionOption.CreateAsDriving)\n    \n    dimension12 = sketchDimensionalConstraint12.AssociatedDimension\n    \n    theSession.ActiveSketch.Update()\n    \n    markId92 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Curve")\n    \n    markId93 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Curve")\n    \n    theSession.DeleteUndoMark(markId93, "Curve")\n    \n    # ----------------------------------------------\n    #   Menu: Edit->Delete...\n    # ----------------------------------------------\n    markId94 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Delete")\n    \n    notifyOnDelete1 = theSession.Preferences.Modeling.NotifyOnDelete\n    \n    theSession.UpdateManager.ClearErrorList()\n    \n    markId95 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Start")\n    \n    theSession.SetUndoMarkName(markId95, "Class Selection Dialog")\n    \n    theSession.SetUndoMarkName(markId95, "Class Selection")\n    \n    theSession.DeleteUndoMark(markId95, None)\n    \n    theSession.DeleteUndoMark(markId94, None)\n    \n    # ----------------------------------------------\n    #   Menu: Edit->Delete...\n    # ----------------------------------------------\n    markId96 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Delete")\n    \n    notifyOnDelete2 = theSession.Preferences.Modeling.NotifyOnDelete\n    \n    theSession.UpdateManager.ClearErrorList()\n    \n    markId97 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Delete")\n    \n    objects1 = [NXOpen.TaggedObject.Null] * 1 \n    objects1[0] = arc2\n    nErrs10 = theSession.UpdateManager.AddObjectsToDeleteList(objects1)\n    \n    notifyOnDelete3 = theSession.Preferences.Modeling.NotifyOnDelete\n    \n    id1 = theSession.NewestVisibleUndoMark\n    \n    nErrs11 = theSession.UpdateManager.DoUpdate(id1)\n    \n    theSession.DeleteUndoMark(markId96, None)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch Curve->Circle...\n    # ----------------------------------------------\n    markId98 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Profile short list")\n    \n    markId99 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Curve")\n    \n    expression66 = workPart.Expressions.CreateSystemExpression("3")\n    \n    theSession.SetUndoMarkVisibility(markId99, "Curve", NXOpen.Session.MarkVisibility.Visible)\n    \n    nXMatrix3 = theSession.ActiveSketch.Orientation\n    \n    center3 = NXOpen.Point3d(59.899999999999999, 6.9500000000000002, 21.0)\n    arc3 = workPart.Curves.CreateArc(center3, nXMatrix3, 1.5, 0.0, ( 360.0 * math.pi/180.0 ))\n    \n    theSession.ActiveSketch.AddGeometry(arc3, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    dimObject1_13 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject1_13.Geometry = arc3\n    dimObject1_13.AssocType = NXOpen.Sketch.AssocType.NotSet\n    dimObject1_13.AssocValue = 0\n    dimObject1_13.HelpPoint.X = 0.0\n    dimObject1_13.HelpPoint.Y = 0.0\n    dimObject1_13.HelpPoint.Z = 0.0\n    dimObject1_13.View = NXOpen.NXObject.Null\n    dimOrigin13 = NXOpen.Point3d(59.899999999999999, 6.9500000000000002, 21.587054244422315)\n    sketchDimensionalConstraint13 = theSession.ActiveSketch.CreateDiameterDimension(dimObject1_13, dimOrigin13, expression66, NXOpen.Sketch.DimensionOption.CreateAsDriving)\n    \n    dimension13 = sketchDimensionalConstraint13.AssociatedDimension\n    \n    theSession.ActiveSketch.Update()\n    \n    markId100 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Curve")\n    \n    # ----------------------------------------------\n    #   Menu: File->Finish Sketch\n    # ----------------------------------------------\n    theSession.DeleteUndoMark(markId100, "Curve")\n    \n    sketch18 = theSession.ActiveSketch\n    \n    markId101 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Deactivate Sketch")\n    \n    theSession.ActiveSketch.Deactivate(NXOpen.Sketch.ViewReorient.TrueValue, NXOpen.Sketch.UpdateLevel.Model)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Design Feature->Extrude...\n    # ----------------------------------------------\n    markId102 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    extrudeBuilder9 = workPart.Features.CreateExtrudeBuilder(NXOpen.Features.Feature.Null)\n    \n    section9 = workPart.Sections.CreateSection(0.0094999999999999998, 0.01, 0.5)\n    \n    extrudeBuilder9.Section = section9\n    \n    extrudeBuilder9.AllowSelfIntersectingSection(True)\n    \n    expression67 = workPart.Expressions.CreateSystemExpressionWithUnits("2.00", unit2)\n    \n    extrudeBuilder9.DistanceTolerance = 0.01\n    \n    extrudeBuilder9.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Create\n    \n    targetBodies28 = [NXOpen.Body.Null] * 1 \n    targetBodies28[0] = NXOpen.Body.Null\n    extrudeBuilder9.BooleanOperation.SetTargetBodies(targetBodies28)\n    \n    extrudeBuilder9.Limits.StartExtend.Value.SetFormula("0")\n    \n    extrudeBuilder9.Limits.EndExtend.Value.SetFormula("6")\n    \n    extrudeBuilder9.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Subtract\n    \n    targetBodies29 = [NXOpen.Body.Null] * 1 \n    targetBodies29[0] = body1\n    extrudeBuilder9.BooleanOperation.SetTargetBodies(targetBodies29)\n    \n    extrudeBuilder9.Draft.FrontDraftAngle.SetFormula("2")\n    \n    extrudeBuilder9.Draft.BackDraftAngle.SetFormula("2")\n    \n    extrudeBuilder9.Offset.StartOffset.SetFormula("0")\n    \n    extrudeBuilder9.Offset.EndOffset.SetFormula("5")\n    \n    smartVolumeProfileBuilder9 = extrudeBuilder9.SmartVolumeProfile\n    \n    smartVolumeProfileBuilder9.OpenProfileSmartVolumeOption = False\n    \n    smartVolumeProfileBuilder9.CloseProfileRule = NXOpen.GeometricUtilities.SmartVolumeProfileBuilder.CloseProfileRuleType.Fci\n    \n    theSession.SetUndoMarkName(markId102, "Extrude Dialog")\n    \n    section9.DistanceTolerance = 0.01\n    \n    section9.ChainingTolerance = 0.0094999999999999998\n    \n    section9.SetAllowedEntityTypes(NXOpen.Section.AllowTypes.OnlyCurves)\n    \n    markId103 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "section mark")\n    \n    markId104 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, None)\n    \n    features6 = [NXOpen.Features.Feature.Null] * 1 \n    sketchFeature6 = feature14\n    features6[0] = sketchFeature6\n    curveFeatureRule6 = workPart.ScRuleFactory.CreateRuleCurveFeature(features6)\n    \n    section9.AllowSelfIntersection(True)\n    \n    rules6 = [None] * 1 \n    rules6[0] = curveFeatureRule6\n    helpPoint6 = NXOpen.Point3d(59.899999999999999, 8.3596127219276717, 20.500451107392088)\n    section9.AddToSection(rules6, arc3, NXOpen.NXObject.Null, NXOpen.NXObject.Null, helpPoint6, NXOpen.Section.Mode.Create, False)\n    \n    theSession.DeleteUndoMark(markId104, None)\n    \n    direction13 = workPart.Directions.CreateDirection(sketch18, NXOpen.Sense.Forward, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    extrudeBuilder9.Direction = direction13\n    \n    expression68 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    theSession.DeleteUndoMark(markId103, None)\n    \n    direction14 = extrudeBuilder9.Direction\n    \n    success2 = direction14.ReverseDirection()\n    \n    extrudeBuilder9.Direction = direction14\n    \n    extrudeBuilder9.Limits.EndExtend.Value.SetFormula("6")\n    \n    markId105 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Extrude")\n    \n    theSession.DeleteUndoMark(markId105, None)\n    \n    markId106 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Extrude")\n    \n    extrudeBuilder9.ParentFeatureInternal = False\n    \n    feature15 = extrudeBuilder9.CommitFeature()\n    \n    theSession.DeleteUndoMark(markId106, None)\n    \n    theSession.SetUndoMarkName(markId102, "Extrude")\n    \n    expression69 = extrudeBuilder9.Limits.StartExtend.Value\n    expression70 = extrudeBuilder9.Limits.EndExtend.Value\n    extrudeBuilder9.Destroy()\n    \n    workPart.Expressions.Delete(expression67)\n    \n    workPart.Expressions.Delete(expression68)\n    \n    origin42 = NXOpen.Point3d(43.827051349574397, 72.604381609816414, 30.086434631860392)\n    workPart.ModelingViews.WorkView.SetOrigin(origin42)\n    \n    origin43 = NXOpen.Point3d(43.827051349574397, 72.604381609816414, 30.086434631860392)\n    workPart.ModelingViews.WorkView.SetOrigin(origin43)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch...\n    # ----------------------------------------------\n    markId107 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    sketchInPlaceBuilder10 = workPart.Sketches.CreateSketchInPlaceBuilder2(NXOpen.Sketch.Null)\n    \n    origin44 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal22 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane22 = workPart.Planes.CreatePlane(origin44, normal22, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    sketchInPlaceBuilder10.PlaneReference = plane22\n    \n    expression71 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    expression72 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    sketchAlongPathBuilder10 = workPart.Sketches.CreateSketchAlongPathBuilder(NXOpen.Sketch.Null)\n    \n    sketchAlongPathBuilder10.PlaneLocation.Expression.SetFormula("0")\n    \n    theSession.SetUndoMarkName(markId107, "Create Sketch Dialog")\n    \n    scalar13 = workPart.Scalars.CreateScalar(1.0, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    edge10 = extrude3.FindObject("EDGE * 130 * 170 {(59.9,4,25)(56.95,4,25)(54,4,25) EXTRUDE(2)}")\n    point14 = workPart.Points.CreatePoint(edge10, scalar13, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    edge11 = extrude1.FindObject("EDGE * 130 EXTRUDE(7) 170 {(59.9,4,5)(56.95,4,5)(54,4,5) EXTRUDE(2)}")\n    direction15 = workPart.Directions.CreateDirection(edge11, NXOpen.Sense.Reverse, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    face4 = extrude3.FindObject("FACE 170 {(56.95,4,15) EXTRUDE(2)}")\n    xform7 = workPart.Xforms.CreateXformByPlaneXDirPoint(face4, direction15, point14, NXOpen.SmartObject.UpdateOption.WithinModeling, 0.625, False, False)\n    \n    cartesianCoordinateSystem7 = workPart.CoordinateSystems.CreateCoordinateSystem(xform7, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    sketchInPlaceBuilder10.Csystem = cartesianCoordinateSystem7\n    \n    origin45 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal23 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane23 = workPart.Planes.CreatePlane(origin45, normal23, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    plane23.SetMethod(NXOpen.PlaneTypes.MethodType.Coincident)\n    \n    geom20 = [NXOpen.NXObject.Null] * 1 \n    geom20[0] = face4\n    plane23.SetGeometry(geom20)\n    \n    plane23.SetFlip(False)\n    \n    plane23.SetExpression(None)\n    \n    plane23.SetAlternate(NXOpen.PlaneTypes.AlternateType.One)\n    \n    plane23.Evaluate()\n    \n    origin46 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal24 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane24 = workPart.Planes.CreatePlane(origin46, normal24, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    expression73 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    expression74 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    plane24.SynchronizeToPlane(plane23)\n    \n    scalar14 = workPart.Scalars.CreateScalar(100.0, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    point15 = workPart.Points.CreatePoint(edge10, scalar14, NXOpen.PointCollection.PointOnCurveLocationOption.PercentParameter, NXOpen.Point.Null, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    plane24.SetMethod(NXOpen.PlaneTypes.MethodType.Coincident)\n    \n    geom21 = [NXOpen.NXObject.Null] * 1 \n    geom21[0] = face4\n    plane24.SetGeometry(geom21)\n    \n    plane24.SetAlternate(NXOpen.PlaneTypes.AlternateType.One)\n    \n    plane24.Evaluate()\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch Curve->Rectangle...\n    # ----------------------------------------------\n    markId108 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.DeleteUndoMark(markId108, None)\n    \n    markId109 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.Preferences.Sketch.CreateInferredConstraints = True\n    \n    theSession.Preferences.Sketch.ContinuousAutoDimensioning = True\n    \n    theSession.Preferences.Sketch.DimensionLabel = NXOpen.Preferences.SketchPreferences.DimensionLabelType.Expression\n    \n    theSession.Preferences.Sketch.TextSizeFixed = True\n    \n    theSession.Preferences.Sketch.FixedTextSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayParenthesesOnReferenceDimensions = True\n    \n    theSession.Preferences.Sketch.DisplayReferenceGeometry = False\n    \n    theSession.Preferences.Sketch.ConstraintSymbolSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayObjectColor = False\n    \n    theSession.Preferences.Sketch.DisplayObjectName = True\n    \n    nXObject10 = sketchInPlaceBuilder10.Commit()\n    \n    sketch19 = nXObject10\n    feature16 = sketch19.Feature\n    \n    markId110 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "update")\n    \n    nErrs12 = theSession.UpdateManager.DoUpdate(markId110)\n    \n    sketch19.Activate(NXOpen.Sketch.ViewReorient.TrueValue)\n    \n    theSession.DeleteUndoMark(markId109, None)\n    \n    theSession.SetUndoMarkName(markId107, "Create Sketch")\n    \n    sketchInPlaceBuilder10.Destroy()\n    \n    sketchAlongPathBuilder10.Destroy()\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression72)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    workPart.Points.DeletePoint(point15)\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression71)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    plane22.DestroyPlane()\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression74)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression73)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    plane24.DestroyPlane()\n    \n    markId111 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Profile short list")\n    \n    scaleAboutPoint44 = NXOpen.Point3d(1.8328524968528148, -1.6432470661439007, 0.0)\n    viewCenter44 = NXOpen.Point3d(-1.8328524968527626, 1.6432470661439007, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint44, viewCenter44)\n    \n    scaleAboutPoint45 = NXOpen.Point3d(1.4662819974822516, -1.3145976529151204, 0.0)\n    viewCenter45 = NXOpen.Point3d(-1.4662819974822014, 1.3145976529151204, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint45, viewCenter45)\n    \n    scaleAboutPoint46 = NXOpen.Point3d(1.1730255979858148, -1.0516781223320966, 0.0)\n    viewCenter46 = NXOpen.Point3d(-1.1730255979857547, 1.0516781223320966, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint46, viewCenter46)\n    \n    markId112 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Rectangle")\n    \n    expression75 = workPart.Expressions.CreateSystemExpression("2.9")\n    \n    expression76 = workPart.Expressions.CreateSystemExpression("20")\n    \n    workPart.Expressions.Edit(expression75, "2.9")\n    \n    theSession.SetUndoMarkVisibility(markId112, "Create Rectangle", NXOpen.Session.MarkVisibility.Visible)\n    \n    # ----------------------------------------------\n    # Creating rectangle using By 2 Points method \n    # ----------------------------------------------\n    startPoint23 = NXOpen.Point3d(55.5, 4.0, 25.0)\n    endPoint23 = NXOpen.Point3d(58.399999999999999, 4.0, 25.0)\n    line23 = workPart.Curves.CreateLine(startPoint23, endPoint23)\n    \n    startPoint24 = NXOpen.Point3d(58.399999999999999, 4.0, 25.0)\n    endPoint24 = NXOpen.Point3d(58.399999999999999, 4.0, 5.0)\n    line24 = workPart.Curves.CreateLine(startPoint24, endPoint24)\n    \n    startPoint25 = NXOpen.Point3d(58.399999999999999, 4.0, 5.0)\n    endPoint25 = NXOpen.Point3d(55.5, 4.0, 5.0)\n    line25 = workPart.Curves.CreateLine(startPoint25, endPoint25)\n    \n    startPoint26 = NXOpen.Point3d(55.5, 4.0, 5.0)\n    endPoint26 = NXOpen.Point3d(55.5, 4.0, 25.0)\n    line26 = workPart.Curves.CreateLine(startPoint26, endPoint26)\n    \n    theSession.ActiveSketch.AddGeometry(line23, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    theSession.ActiveSketch.AddGeometry(line24, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    theSession.ActiveSketch.AddGeometry(line25, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    theSession.ActiveSketch.AddGeometry(line26, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    geom1_26 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_26.Geometry = line23\n    geom1_26.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_26.SplineDefiningPointIndex = 0\n    geom2_26 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_26.Geometry = line24\n    geom2_26.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_26.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint53 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_26, geom2_26)\n    \n    geom1_27 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_27.Geometry = line24\n    geom1_27.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_27.SplineDefiningPointIndex = 0\n    geom2_27 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_27.Geometry = line25\n    geom2_27.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_27.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint54 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_27, geom2_27)\n    \n    geom1_28 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_28.Geometry = line25\n    geom1_28.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_28.SplineDefiningPointIndex = 0\n    geom2_28 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_28.Geometry = line26\n    geom2_28.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_28.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint55 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_28, geom2_28)\n    \n    geom1_29 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_29.Geometry = line26\n    geom1_29.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_29.SplineDefiningPointIndex = 0\n    geom2_29 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_29.Geometry = line23\n    geom2_29.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_29.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint56 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_29, geom2_29)\n    \n    geom22 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom22.Geometry = line23\n    geom22.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    geom22.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint57 = theSession.ActiveSketch.CreateHorizontalConstraint(geom22)\n    \n    conGeom1_21 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_21.Geometry = line23\n    conGeom1_21.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_21.SplineDefiningPointIndex = 0\n    conGeom2_21 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_21.Geometry = line24\n    conGeom2_21.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_21.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint58 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_21, conGeom2_21)\n    \n    conGeom1_22 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_22.Geometry = line24\n    conGeom1_22.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_22.SplineDefiningPointIndex = 0\n    conGeom2_22 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_22.Geometry = line25\n    conGeom2_22.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_22.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint59 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_22, conGeom2_22)\n    \n    conGeom1_23 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_23.Geometry = line25\n    conGeom1_23.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_23.SplineDefiningPointIndex = 0\n    conGeom2_23 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_23.Geometry = line26\n    conGeom2_23.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_23.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint60 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_23, conGeom2_23)\n    \n    conGeom1_24 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_24.Geometry = line26\n    conGeom1_24.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_24.SplineDefiningPointIndex = 0\n    conGeom2_24 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_24.Geometry = line23\n    conGeom2_24.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_24.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint61 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_24, conGeom2_24)\n    \n    dimObject1_14 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject1_14.Geometry = line23\n    dimObject1_14.AssocType = NXOpen.Sketch.AssocType.StartPoint\n    dimObject1_14.AssocValue = 0\n    dimObject1_14.HelpPoint.X = 0.0\n    dimObject1_14.HelpPoint.Y = 0.0\n    dimObject1_14.HelpPoint.Z = 0.0\n    dimObject1_14.View = NXOpen.NXObject.Null\n    dimObject2_11 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject2_11.Geometry = line23\n    dimObject2_11.AssocType = NXOpen.Sketch.AssocType.EndPoint\n    dimObject2_11.AssocValue = 0\n    dimObject2_11.HelpPoint.X = 0.0\n    dimObject2_11.HelpPoint.Y = 0.0\n    dimObject2_11.HelpPoint.Z = 0.0\n    dimObject2_11.View = NXOpen.NXObject.Null\n    dimOrigin14 = NXOpen.Point3d(56.950000000000003, 4.0, 22.798546583416325)\n    sketchDimensionalConstraint14 = theSession.ActiveSketch.CreateDimension(NXOpen.Sketch.ConstraintType.ParallelDim, dimObject1_14, dimObject2_11, dimOrigin14, expression75, NXOpen.Sketch.DimensionOption.CreateAsDriving)\n    \n    sketchHelpedDimensionalConstraint11 = sketchDimensionalConstraint14\n    dimension14 = sketchHelpedDimensionalConstraint11.AssociatedDimension\n    \n    dimObject1_15 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject1_15.Geometry = line24\n    dimObject1_15.AssocType = NXOpen.Sketch.AssocType.StartPoint\n    dimObject1_15.AssocValue = 0\n    dimObject1_15.HelpPoint.X = 0.0\n    dimObject1_15.HelpPoint.Y = 0.0\n    dimObject1_15.HelpPoint.Z = 0.0\n    dimObject1_15.View = NXOpen.NXObject.Null\n    dimObject2_12 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject2_12.Geometry = line24\n    dimObject2_12.AssocType = NXOpen.Sketch.AssocType.EndPoint\n    dimObject2_12.AssocValue = 0\n    dimObject2_12.HelpPoint.X = 0.0\n    dimObject2_12.HelpPoint.Y = 0.0\n    dimObject2_12.HelpPoint.Z = 0.0\n    dimObject2_12.View = NXOpen.NXObject.Null\n    dimOrigin15 = NXOpen.Point3d(56.198546583416324, 4.0, 15.0)\n    sketchDimensionalConstraint15 = theSession.ActiveSketch.CreateDimension(NXOpen.Sketch.ConstraintType.ParallelDim, dimObject1_15, dimObject2_12, dimOrigin15, expression76, NXOpen.Sketch.DimensionOption.CreateAsDriving)\n    \n    sketchHelpedDimensionalConstraint12 = sketchDimensionalConstraint15\n    dimension15 = sketchHelpedDimensionalConstraint12.AssociatedDimension\n    \n    theSession.Preferences.Sketch.AutoDimensionsToArcCenter = False\n    \n    theSession.ActiveSketch.Update()\n    \n    theSession.Preferences.Sketch.AutoDimensionsToArcCenter = True\n    \n    geoms11 = [NXOpen.SmartObject.Null] * 4 \n    geoms11[0] = line23\n    geoms11[1] = line24\n    geoms11[2] = line25\n    geoms11[3] = line26\n    theSession.ActiveSketch.UpdateConstraintDisplay(geoms11)\n    \n    geoms12 = [NXOpen.SmartObject.Null] * 4 \n    geoms12[0] = line23\n    geoms12[1] = line24\n    geoms12[2] = line25\n    geoms12[3] = line26\n    theSession.ActiveSketch.UpdateDimensionDisplay(geoms12)\n    \n    # ----------------------------------------------\n    #   Menu: File->Finish Sketch\n    # ----------------------------------------------\n    sketch20 = theSession.ActiveSketch\n    \n    markId113 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Deactivate Sketch")\n    \n    theSession.ActiveSketch.Deactivate(NXOpen.Sketch.ViewReorient.TrueValue, NXOpen.Sketch.UpdateLevel.Model)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Design Feature->Extrude...\n    # ----------------------------------------------\n    markId114 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    extrudeBuilder10 = workPart.Features.CreateExtrudeBuilder(NXOpen.Features.Feature.Null)\n    \n    section10 = workPart.Sections.CreateSection(0.0094999999999999998, 0.01, 0.5)\n    \n    extrudeBuilder10.Section = section10\n    \n    extrudeBuilder10.AllowSelfIntersectingSection(True)\n    \n    expression77 = workPart.Expressions.CreateSystemExpressionWithUnits("2.00", unit2)\n    \n    extrudeBuilder10.DistanceTolerance = 0.01\n    \n    extrudeBuilder10.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Create\n    \n    targetBodies30 = [NXOpen.Body.Null] * 1 \n    targetBodies30[0] = NXOpen.Body.Null\n    extrudeBuilder10.BooleanOperation.SetTargetBodies(targetBodies30)\n    \n    extrudeBuilder10.Limits.StartExtend.Value.SetFormula("0")\n    \n    extrudeBuilder10.Limits.EndExtend.Value.SetFormula("6")\n    \n    extrudeBuilder10.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Subtract\n    \n    targetBodies31 = [NXOpen.Body.Null] * 1 \n    targetBodies31[0] = body1\n    extrudeBuilder10.BooleanOperation.SetTargetBodies(targetBodies31)\n    \n    extrudeBuilder10.Draft.FrontDraftAngle.SetFormula("2")\n    \n    extrudeBuilder10.Draft.BackDraftAngle.SetFormula("2")\n    \n    extrudeBuilder10.Offset.StartOffset.SetFormula("0")\n    \n    extrudeBuilder10.Offset.EndOffset.SetFormula("5")\n    \n    smartVolumeProfileBuilder10 = extrudeBuilder10.SmartVolumeProfile\n    \n    smartVolumeProfileBuilder10.OpenProfileSmartVolumeOption = False\n    \n    smartVolumeProfileBuilder10.CloseProfileRule = NXOpen.GeometricUtilities.SmartVolumeProfileBuilder.CloseProfileRuleType.Fci\n    \n    theSession.SetUndoMarkName(markId114, "Extrude Dialog")\n    \n    section10.DistanceTolerance = 0.01\n    \n    section10.ChainingTolerance = 0.0094999999999999998\n    \n    section10.SetAllowedEntityTypes(NXOpen.Section.AllowTypes.OnlyCurves)\n    \n    markId115 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "section mark")\n    \n    markId116 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, None)\n    \n    features7 = [NXOpen.Features.Feature.Null] * 1 \n    sketchFeature7 = feature16\n    features7[0] = sketchFeature7\n    curveFeatureRule7 = workPart.ScRuleFactory.CreateRuleCurveFeature(features7)\n    \n    section10.AllowSelfIntersection(True)\n    \n    rules7 = [None] * 1 \n    rules7[0] = curveFeatureRule7\n    helpPoint7 = NXOpen.Point3d(58.399999999999999, 3.9999999999999609, 22.270931838051823)\n    section10.AddToSection(rules7, line24, NXOpen.NXObject.Null, NXOpen.NXObject.Null, helpPoint7, NXOpen.Section.Mode.Create, False)\n    \n    theSession.DeleteUndoMark(markId116, None)\n    \n    direction16 = workPart.Directions.CreateDirection(sketch20, NXOpen.Sense.Forward, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    extrudeBuilder10.Direction = direction16\n    \n    expression78 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    theSession.DeleteUndoMark(markId115, None)\n    \n    direction17 = extrudeBuilder10.Direction\n    \n    success3 = direction17.ReverseDirection()\n    \n    extrudeBuilder10.Direction = direction17\n    \n    extrudeBuilder10.Limits.EndExtend.Value.SetFormula("6")\n    \n    markId117 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Extrude")\n    \n    theSession.DeleteUndoMark(markId117, None)\n    \n    markId118 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Extrude")\n    \n    extrudeBuilder10.ParentFeatureInternal = False\n    \n    feature17 = extrudeBuilder10.CommitFeature()\n    \n    theSession.DeleteUndoMark(markId118, None)\n    \n    theSession.SetUndoMarkName(markId114, "Extrude")\n    \n    expression79 = extrudeBuilder10.Limits.StartExtend.Value\n    expression80 = extrudeBuilder10.Limits.EndExtend.Value\n    extrudeBuilder10.Destroy()\n    \n    workPart.Expressions.Delete(expression77)\n    \n    workPart.Expressions.Delete(expression78)\n    \n    origin47 = NXOpen.Point3d(47.683264062529858, 78.835584072438792, 27.422310989985331)\n    workPart.ModelingViews.WorkView.SetOrigin(origin47)\n    \n    origin48 = NXOpen.Point3d(47.683264062529858, 78.835584072438792, 27.422310989985331)\n    workPart.ModelingViews.WorkView.SetOrigin(origin48)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch...\n    # ----------------------------------------------\n    markId119 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    sketchInPlaceBuilder11 = workPart.Sketches.CreateSketchInPlaceBuilder2(NXOpen.Sketch.Null)\n    \n    origin49 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal25 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane25 = workPart.Planes.CreatePlane(origin49, normal25, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    sketchInPlaceBuilder11.PlaneReference = plane25\n    \n    expression81 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    expression82 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    sketchAlongPathBuilder11 = workPart.Sketches.CreateSketchAlongPathBuilder(NXOpen.Sketch.Null)\n    \n    sketchAlongPathBuilder11.PlaneLocation.Expression.SetFormula("0")\n    \n    theSession.SetUndoMarkName(markId119, "Create Sketch Dialog")\n    \n    scalar15 = workPart.Scalars.CreateScalar(1.0, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    extrude4 = feature11\n    edge12 = extrude4.FindObject("EDGE * 130 * 160 {(116,60,25)(113.05,60,25)(110.1,60,25) EXTRUDE(2)}")\n    point16 = workPart.Points.CreatePoint(edge12, scalar15, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    edge13 = extrude1.FindObject("EDGE * 130 EXTRUDE(9) 160 {(116,60,5)(113.05,60,5)(110.1,60,5) EXTRUDE(2)}")\n    direction18 = workPart.Directions.CreateDirection(edge13, NXOpen.Sense.Reverse, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    face5 = extrude4.FindObject("FACE 160 {(113.05,60,15) EXTRUDE(2)}")\n    xform8 = workPart.Xforms.CreateXformByPlaneXDirPoint(face5, direction18, point16, NXOpen.SmartObject.UpdateOption.WithinModeling, 0.625, False, False)\n    \n    cartesianCoordinateSystem8 = workPart.CoordinateSystems.CreateCoordinateSystem(xform8, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    sketchInPlaceBuilder11.Csystem = cartesianCoordinateSystem8\n    \n    origin50 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal26 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane26 = workPart.Planes.CreatePlane(origin50, normal26, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    plane26.SetMethod(NXOpen.PlaneTypes.MethodType.Coincident)\n    \n    geom23 = [NXOpen.NXObject.Null] * 1 \n    geom23[0] = face5\n    plane26.SetGeometry(geom23)\n    \n    plane26.SetFlip(False)\n    \n    plane26.SetExpression(None)\n    \n    plane26.SetAlternate(NXOpen.PlaneTypes.AlternateType.One)\n    \n    plane26.Evaluate()\n    \n    origin51 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal27 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane27 = workPart.Planes.CreatePlane(origin51, normal27, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    expression83 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    expression84 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    plane27.SynchronizeToPlane(plane26)\n    \n    scalar16 = workPart.Scalars.CreateScalar(100.0, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    point17 = workPart.Points.CreatePoint(edge12, scalar16, NXOpen.PointCollection.PointOnCurveLocationOption.PercentParameter, NXOpen.Point.Null, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    plane27.SetMethod(NXOpen.PlaneTypes.MethodType.Coincident)\n    \n    geom24 = [NXOpen.NXObject.Null] * 1 \n    geom24[0] = face5\n    plane27.SetGeometry(geom24)\n    \n    plane27.SetAlternate(NXOpen.PlaneTypes.AlternateType.One)\n    \n    plane27.Evaluate()\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch Curve->Circle...\n    # ----------------------------------------------\n    markId120 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.DeleteUndoMark(markId120, None)\n    \n    markId121 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.Preferences.Sketch.CreateInferredConstraints = True\n    \n    theSession.Preferences.Sketch.ContinuousAutoDimensioning = True\n    \n    theSession.Preferences.Sketch.DimensionLabel = NXOpen.Preferences.SketchPreferences.DimensionLabelType.Expression\n    \n    theSession.Preferences.Sketch.TextSizeFixed = True\n    \n    theSession.Preferences.Sketch.FixedTextSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayParenthesesOnReferenceDimensions = True\n    \n    theSession.Preferences.Sketch.DisplayReferenceGeometry = False\n    \n    theSession.Preferences.Sketch.ConstraintSymbolSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayObjectColor = False\n    \n    theSession.Preferences.Sketch.DisplayObjectName = True\n    \n    nXObject11 = sketchInPlaceBuilder11.Commit()\n    \n    sketch21 = nXObject11\n    feature18 = sketch21.Feature\n    \n    markId122 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "update")\n    \n    nErrs13 = theSession.UpdateManager.DoUpdate(markId122)\n    \n    sketch21.Activate(NXOpen.Sketch.ViewReorient.TrueValue)\n    \n    theSession.DeleteUndoMark(markId121, None)\n    \n    theSession.SetUndoMarkName(markId119, "Create Sketch")\n    \n    sketchInPlaceBuilder11.Destroy()\n    \n    sketchAlongPathBuilder11.Destroy()\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression82)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    workPart.Points.DeletePoint(point17)\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression81)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    plane25.DestroyPlane()\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression84)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression83)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    plane27.DestroyPlane()\n    \n    markId123 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Profile short list")\n    \n    scaleAboutPoint47 = NXOpen.Point3d(-2.3384669787431687, -0.12640362047258849, 0.0)\n    viewCenter47 = NXOpen.Point3d(2.3384669787432211, 0.12640362047258849, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint47, viewCenter47)\n    \n    scaleAboutPoint48 = NXOpen.Point3d(-1.3651591011041309, -0.40449158551234987, 0.0)\n    viewCenter48 = NXOpen.Point3d(1.3651591011041475, 0.40449158551234987, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint48, viewCenter48)\n    \n    scaleAboutPoint49 = NXOpen.Point3d(-0.60673737826848484, -0.56628821971724985, 0.0)\n    viewCenter49 = NXOpen.Point3d(0.60673737826851826, 0.56628821971724985, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint49, viewCenter49)\n    \n    scaleAboutPoint50 = NXOpen.Point3d(-0.22651528788688921, -0.5824678831377732, 0.0)\n    viewCenter50 = NXOpen.Point3d(0.22651528788694264, 0.5824678831377732, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint50, viewCenter50)\n    \n    markId124 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Curve")\n    \n    expression85 = workPart.Expressions.CreateSystemExpression("3")\n    \n    theSession.SetUndoMarkVisibility(markId124, "Curve", NXOpen.Session.MarkVisibility.Visible)\n    \n    nXMatrix4 = theSession.ActiveSketch.Orientation\n    \n    center4 = NXOpen.Point3d(113.05000000000001, 60.0, 21.0)\n    arc4 = workPart.Curves.CreateArc(center4, nXMatrix4, 1.5, 0.0, ( 360.0 * math.pi/180.0 ))\n    \n    theSession.ActiveSketch.AddGeometry(arc4, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    dimObject1_16 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject1_16.Geometry = arc4\n    dimObject1_16.AssocType = NXOpen.Sketch.AssocType.NotSet\n    dimObject1_16.AssocValue = 0\n    dimObject1_16.HelpPoint.X = 0.0\n    dimObject1_16.HelpPoint.Y = 0.0\n    dimObject1_16.HelpPoint.Z = 0.0\n    dimObject1_16.View = NXOpen.NXObject.Null\n    dimOrigin16 = NXOpen.Point3d(113.05000000000001, 60.0, 21.587054244422315)\n    sketchDimensionalConstraint16 = theSession.ActiveSketch.CreateDiameterDimension(dimObject1_16, dimOrigin16, expression85, NXOpen.Sketch.DimensionOption.CreateAsDriving)\n    \n    dimension16 = sketchDimensionalConstraint16.AssociatedDimension\n    \n    theSession.ActiveSketch.Update()\n    \n    markId125 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Curve")\n    \n    markId126 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Curve")\n    \n    expression86 = workPart.Expressions.CreateSystemExpression("3")\n    \n    workPart.Expressions.Delete(expression86)\n    \n    theSession.DeleteUndoMark(markId126, "Curve")\n    \n    # ----------------------------------------------\n    #   Menu: File->Finish Sketch\n    # ----------------------------------------------\n    sketch22 = theSession.ActiveSketch\n    \n    markId127 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Deactivate Sketch")\n    \n    theSession.ActiveSketch.Deactivate(NXOpen.Sketch.ViewReorient.TrueValue, NXOpen.Sketch.UpdateLevel.Model)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Design Feature->Extrude...\n    # ----------------------------------------------\n    markId128 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    extrudeBuilder11 = workPart.Features.CreateExtrudeBuilder(NXOpen.Features.Feature.Null)\n    \n    section11 = workPart.Sections.CreateSection(0.0094999999999999998, 0.01, 0.5)\n    \n    extrudeBuilder11.Section = section11\n    \n    extrudeBuilder11.AllowSelfIntersectingSection(True)\n    \n    expression87 = workPart.Expressions.CreateSystemExpressionWithUnits("2.00", unit2)\n    \n    extrudeBuilder11.DistanceTolerance = 0.01\n    \n    extrudeBuilder11.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Create\n    \n    targetBodies32 = [NXOpen.Body.Null] * 1 \n    targetBodies32[0] = NXOpen.Body.Null\n    extrudeBuilder11.BooleanOperation.SetTargetBodies(targetBodies32)\n    \n    extrudeBuilder11.Limits.StartExtend.Value.SetFormula("0")\n    \n    extrudeBuilder11.Limits.EndExtend.Value.SetFormula("6")\n    \n    extrudeBuilder11.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Subtract\n    \n    targetBodies33 = [NXOpen.Body.Null] * 1 \n    targetBodies33[0] = body1\n    extrudeBuilder11.BooleanOperation.SetTargetBodies(targetBodies33)\n    \n    extrudeBuilder11.Draft.FrontDraftAngle.SetFormula("2")\n    \n    extrudeBuilder11.Draft.BackDraftAngle.SetFormula("2")\n    \n    extrudeBuilder11.Offset.StartOffset.SetFormula("0")\n    \n    extrudeBuilder11.Offset.EndOffset.SetFormula("5")\n    \n    smartVolumeProfileBuilder11 = extrudeBuilder11.SmartVolumeProfile\n    \n    smartVolumeProfileBuilder11.OpenProfileSmartVolumeOption = False\n    \n    smartVolumeProfileBuilder11.CloseProfileRule = NXOpen.GeometricUtilities.SmartVolumeProfileBuilder.CloseProfileRuleType.Fci\n    \n    theSession.SetUndoMarkName(markId128, "Extrude Dialog")\n    \n    section11.DistanceTolerance = 0.01\n    \n    section11.ChainingTolerance = 0.0094999999999999998\n    \n    section11.SetAllowedEntityTypes(NXOpen.Section.AllowTypes.OnlyCurves)\n    \n    markId129 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "section mark")\n    \n    markId130 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, None)\n    \n    features8 = [NXOpen.Features.Feature.Null] * 1 \n    sketchFeature8 = feature18\n    features8[0] = sketchFeature8\n    curveFeatureRule8 = workPart.ScRuleFactory.CreateRuleCurveFeature(features8)\n    \n    section11.AllowSelfIntersection(True)\n    \n    rules8 = [None] * 1 \n    rules8[0] = curveFeatureRule8\n    helpPoint8 = NXOpen.Point3d(114.53687847145467, 60.0, 20.854190364119461)\n    section11.AddToSection(rules8, arc4, NXOpen.NXObject.Null, NXOpen.NXObject.Null, helpPoint8, NXOpen.Section.Mode.Create, False)\n    \n    theSession.DeleteUndoMark(markId130, None)\n    \n    direction19 = workPart.Directions.CreateDirection(sketch22, NXOpen.Sense.Forward, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    extrudeBuilder11.Direction = direction19\n    \n    expression88 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    theSession.DeleteUndoMark(markId129, None)\n    \n    direction20 = extrudeBuilder11.Direction\n    \n    success4 = direction20.ReverseDirection()\n    \n    extrudeBuilder11.Direction = direction20\n    \n    extrudeBuilder11.Limits.EndExtend.Value.SetFormula("6")\n    \n    markId131 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Extrude")\n    \n    theSession.DeleteUndoMark(markId131, None)\n    \n    markId132 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Extrude")\n    \n    extrudeBuilder11.ParentFeatureInternal = False\n    \n    feature19 = extrudeBuilder11.CommitFeature()\n    \n    theSession.DeleteUndoMark(markId132, None)\n    \n    theSession.SetUndoMarkName(markId128, "Extrude")\n    \n    expression89 = extrudeBuilder11.Limits.StartExtend.Value\n    expression90 = extrudeBuilder11.Limits.EndExtend.Value\n    extrudeBuilder11.Destroy()\n    \n    workPart.Expressions.Delete(expression87)\n    \n    workPart.Expressions.Delete(expression88)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch...\n    # ----------------------------------------------\n    markId133 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    sketchInPlaceBuilder12 = workPart.Sketches.CreateSketchInPlaceBuilder2(NXOpen.Sketch.Null)\n    \n    origin52 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal28 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane28 = workPart.Planes.CreatePlane(origin52, normal28, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    sketchInPlaceBuilder12.PlaneReference = plane28\n    \n    expression91 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    expression92 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    sketchAlongPathBuilder12 = workPart.Sketches.CreateSketchAlongPathBuilder(NXOpen.Sketch.Null)\n    \n    sketchAlongPathBuilder12.PlaneLocation.Expression.SetFormula("0")\n    \n    theSession.SetUndoMarkName(markId133, "Create Sketch Dialog")\n    \n    scalar17 = workPart.Scalars.CreateScalar(1.0, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    edge14 = extrude4.FindObject("EDGE * 130 * 150 {(116,65.9,25)(116,62.95,25)(116,60,25) EXTRUDE(2)}")\n    point18 = workPart.Points.CreatePoint(edge14, scalar17, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    edge15 = extrude1.FindObject("EDGE * 130 EXTRUDE(9) 150 {(116,65.9,5)(116,62.95,5)(116,60,5) EXTRUDE(2)}")\n    direction21 = workPart.Directions.CreateDirection(edge15, NXOpen.Sense.Reverse, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    face6 = extrude4.FindObject("FACE 150 {(116,62.95,15) EXTRUDE(2)}")\n    xform9 = workPart.Xforms.CreateXformByPlaneXDirPoint(face6, direction21, point18, NXOpen.SmartObject.UpdateOption.WithinModeling, 0.625, False, False)\n    \n    cartesianCoordinateSystem9 = workPart.CoordinateSystems.CreateCoordinateSystem(xform9, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    sketchInPlaceBuilder12.Csystem = cartesianCoordinateSystem9\n    \n    origin53 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal29 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane29 = workPart.Planes.CreatePlane(origin53, normal29, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    plane29.SetMethod(NXOpen.PlaneTypes.MethodType.Coincident)\n    \n    geom25 = [NXOpen.NXObject.Null] * 1 \n    geom25[0] = face6\n    plane29.SetGeometry(geom25)\n    \n    plane29.SetFlip(False)\n    \n    plane29.SetExpression(None)\n    \n    plane29.SetAlternate(NXOpen.PlaneTypes.AlternateType.One)\n    \n    plane29.Evaluate()\n    \n    origin54 = NXOpen.Point3d(0.0, 0.0, 0.0)\n    normal30 = NXOpen.Vector3d(0.0, 0.0, 1.0)\n    plane30 = workPart.Planes.CreatePlane(origin54, normal30, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    expression93 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    expression94 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    plane30.SynchronizeToPlane(plane29)\n    \n    scalar18 = workPart.Scalars.CreateScalar(100.0, NXOpen.Scalar.DimensionalityType.NotSet, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    point19 = workPart.Points.CreatePoint(edge14, scalar18, NXOpen.PointCollection.PointOnCurveLocationOption.PercentParameter, NXOpen.Point.Null, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    plane30.SetMethod(NXOpen.PlaneTypes.MethodType.Coincident)\n    \n    geom26 = [NXOpen.NXObject.Null] * 1 \n    geom26[0] = face6\n    plane30.SetGeometry(geom26)\n    \n    plane30.SetAlternate(NXOpen.PlaneTypes.AlternateType.One)\n    \n    plane30.Evaluate()\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Sketch Curve->Rectangle...\n    # ----------------------------------------------\n    markId134 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.DeleteUndoMark(markId134, None)\n    \n    markId135 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Sketch")\n    \n    theSession.Preferences.Sketch.CreateInferredConstraints = True\n    \n    theSession.Preferences.Sketch.ContinuousAutoDimensioning = True\n    \n    theSession.Preferences.Sketch.DimensionLabel = NXOpen.Preferences.SketchPreferences.DimensionLabelType.Expression\n    \n    theSession.Preferences.Sketch.TextSizeFixed = True\n    \n    theSession.Preferences.Sketch.FixedTextSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayParenthesesOnReferenceDimensions = True\n    \n    theSession.Preferences.Sketch.DisplayReferenceGeometry = False\n    \n    theSession.Preferences.Sketch.ConstraintSymbolSize = 3.0\n    \n    theSession.Preferences.Sketch.DisplayObjectColor = False\n    \n    theSession.Preferences.Sketch.DisplayObjectName = True\n    \n    nXObject12 = sketchInPlaceBuilder12.Commit()\n    \n    sketch23 = nXObject12\n    feature20 = sketch23.Feature\n    \n    markId136 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "update")\n    \n    nErrs14 = theSession.UpdateManager.DoUpdate(markId136)\n    \n    sketch23.Activate(NXOpen.Sketch.ViewReorient.TrueValue)\n    \n    theSession.DeleteUndoMark(markId135, None)\n    \n    theSession.SetUndoMarkName(markId133, "Create Sketch")\n    \n    sketchInPlaceBuilder12.Destroy()\n    \n    sketchAlongPathBuilder12.Destroy()\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression92)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    workPart.Points.DeletePoint(point19)\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression91)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    plane28.DestroyPlane()\n    \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression94)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    try:\n        # Expression is still in use.\n        workPart.Expressions.Delete(expression93)\n    except NXOpen.NXException as ex:\n        ex.AssertErrorCode(1050029)\n        \n    plane30.DestroyPlane()\n    \n    markId137 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Profile short list")\n    \n    scaleAboutPoint51 = NXOpen.Point3d(4.1081176653596998, -7.2050063669384619, 0.0)\n    viewCenter51 = NXOpen.Point3d(-4.1081176653596474, 7.2050063669384619, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint51, viewCenter51)\n    \n    scaleAboutPoint52 = NXOpen.Point3d(3.2864941322877774, -5.7640050935507707, 0.0)\n    viewCenter52 = NXOpen.Point3d(-3.2864941322877019, 5.7640050935507707, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint52, viewCenter52)\n    \n    scaleAboutPoint53 = NXOpen.Point3d(2.6291953058302147, -4.6112040748406153, 0.0)\n    viewCenter53 = NXOpen.Point3d(-2.6291953058301609, 4.6112040748406153, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint53, viewCenter53)\n    \n    scaleAboutPoint54 = NXOpen.Point3d(2.3622308593920645, -3.6242446061905267, 0.0)\n    viewCenter54 = NXOpen.Point3d(-2.3622308593920112, 3.6242446061905267, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint54, viewCenter54)\n    \n    markId138 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Create Rectangle")\n    \n    expression95 = workPart.Expressions.CreateSystemExpression("2.9")\n    \n    expression96 = workPart.Expressions.CreateSystemExpression("20")\n    \n    workPart.Expressions.Edit(expression95, "2.9")\n    \n    theSession.SetUndoMarkVisibility(markId138, "Create Rectangle", NXOpen.Session.MarkVisibility.Visible)\n    \n    # ----------------------------------------------\n    # Creating rectangle using By 2 Points method \n    # ----------------------------------------------\n    startPoint27 = NXOpen.Point3d(116.0, 61.5, 25.0)\n    endPoint27 = NXOpen.Point3d(116.0, 64.400000000000006, 25.0)\n    line27 = workPart.Curves.CreateLine(startPoint27, endPoint27)\n    \n    startPoint28 = NXOpen.Point3d(116.0, 64.400000000000006, 25.0)\n    endPoint28 = NXOpen.Point3d(116.0, 64.400000000000006, 5.0)\n    line28 = workPart.Curves.CreateLine(startPoint28, endPoint28)\n    \n    startPoint29 = NXOpen.Point3d(116.0, 64.400000000000006, 5.0)\n    endPoint29 = NXOpen.Point3d(116.0, 61.5, 5.0)\n    line29 = workPart.Curves.CreateLine(startPoint29, endPoint29)\n    \n    startPoint30 = NXOpen.Point3d(116.0, 61.5, 5.0)\n    endPoint30 = NXOpen.Point3d(116.0, 61.5, 25.0)\n    line30 = workPart.Curves.CreateLine(startPoint30, endPoint30)\n    \n    theSession.ActiveSketch.AddGeometry(line27, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    theSession.ActiveSketch.AddGeometry(line28, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    theSession.ActiveSketch.AddGeometry(line29, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    theSession.ActiveSketch.AddGeometry(line30, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)\n    \n    geom1_30 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_30.Geometry = line27\n    geom1_30.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_30.SplineDefiningPointIndex = 0\n    geom2_30 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_30.Geometry = line28\n    geom2_30.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_30.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint62 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_30, geom2_30)\n    \n    geom1_31 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_31.Geometry = line28\n    geom1_31.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_31.SplineDefiningPointIndex = 0\n    geom2_31 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_31.Geometry = line29\n    geom2_31.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_31.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint63 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_31, geom2_31)\n    \n    geom1_32 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_32.Geometry = line29\n    geom1_32.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_32.SplineDefiningPointIndex = 0\n    geom2_32 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_32.Geometry = line30\n    geom2_32.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_32.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint64 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_32, geom2_32)\n    \n    geom1_33 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom1_33.Geometry = line30\n    geom1_33.PointType = NXOpen.Sketch.ConstraintPointType.EndVertex\n    geom1_33.SplineDefiningPointIndex = 0\n    geom2_33 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom2_33.Geometry = line27\n    geom2_33.PointType = NXOpen.Sketch.ConstraintPointType.StartVertex\n    geom2_33.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint65 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_33, geom2_33)\n    \n    geom27 = NXOpen.Sketch.ConstraintGeometry()\n    \n    geom27.Geometry = line27\n    geom27.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    geom27.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint66 = theSession.ActiveSketch.CreateHorizontalConstraint(geom27)\n    \n    conGeom1_25 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_25.Geometry = line27\n    conGeom1_25.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_25.SplineDefiningPointIndex = 0\n    conGeom2_25 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_25.Geometry = line28\n    conGeom2_25.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_25.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint67 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_25, conGeom2_25)\n    \n    conGeom1_26 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_26.Geometry = line28\n    conGeom1_26.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_26.SplineDefiningPointIndex = 0\n    conGeom2_26 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_26.Geometry = line29\n    conGeom2_26.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_26.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint68 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_26, conGeom2_26)\n    \n    conGeom1_27 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_27.Geometry = line29\n    conGeom1_27.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_27.SplineDefiningPointIndex = 0\n    conGeom2_27 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_27.Geometry = line30\n    conGeom2_27.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_27.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint69 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_27, conGeom2_27)\n    \n    conGeom1_28 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom1_28.Geometry = line30\n    conGeom1_28.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom1_28.SplineDefiningPointIndex = 0\n    conGeom2_28 = NXOpen.Sketch.ConstraintGeometry()\n    \n    conGeom2_28.Geometry = line27\n    conGeom2_28.PointType = NXOpen.Sketch.ConstraintPointType.NotSet\n    conGeom2_28.SplineDefiningPointIndex = 0\n    sketchGeometricConstraint70 = theSession.ActiveSketch.CreatePerpendicularConstraint(conGeom1_28, conGeom2_28)\n    \n    dimObject1_17 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject1_17.Geometry = line27\n    dimObject1_17.AssocType = NXOpen.Sketch.AssocType.StartPoint\n    dimObject1_17.AssocValue = 0\n    dimObject1_17.HelpPoint.X = 0.0\n    dimObject1_17.HelpPoint.Y = 0.0\n    dimObject1_17.HelpPoint.Z = 0.0\n    dimObject1_17.View = NXOpen.NXObject.Null\n    dimObject2_13 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject2_13.Geometry = line27\n    dimObject2_13.AssocType = NXOpen.Sketch.AssocType.EndPoint\n    dimObject2_13.AssocValue = 0\n    dimObject2_13.HelpPoint.X = 0.0\n    dimObject2_13.HelpPoint.Y = 0.0\n    dimObject2_13.HelpPoint.Z = 0.0\n    dimObject2_13.View = NXOpen.NXObject.Null\n    dimOrigin17 = NXOpen.Point3d(116.0, 62.950000000000003, 23.238837266733057)\n    sketchDimensionalConstraint17 = theSession.ActiveSketch.CreateDimension(NXOpen.Sketch.ConstraintType.ParallelDim, dimObject1_17, dimObject2_13, dimOrigin17, expression95, NXOpen.Sketch.DimensionOption.CreateAsDriving)\n    \n    sketchHelpedDimensionalConstraint13 = sketchDimensionalConstraint17\n    dimension17 = sketchHelpedDimensionalConstraint13.AssociatedDimension\n    \n    dimObject1_18 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject1_18.Geometry = line28\n    dimObject1_18.AssocType = NXOpen.Sketch.AssocType.StartPoint\n    dimObject1_18.AssocValue = 0\n    dimObject1_18.HelpPoint.X = 0.0\n    dimObject1_18.HelpPoint.Y = 0.0\n    dimObject1_18.HelpPoint.Z = 0.0\n    dimObject1_18.View = NXOpen.NXObject.Null\n    dimObject2_14 = NXOpen.Sketch.DimensionGeometry()\n    \n    dimObject2_14.Geometry = line28\n    dimObject2_14.AssocType = NXOpen.Sketch.AssocType.EndPoint\n    dimObject2_14.AssocValue = 0\n    dimObject2_14.HelpPoint.X = 0.0\n    dimObject2_14.HelpPoint.Y = 0.0\n    dimObject2_14.HelpPoint.Z = 0.0\n    dimObject2_14.View = NXOpen.NXObject.Null\n    dimOrigin18 = NXOpen.Point3d(116.0, 62.638837266733063, 15.0)\n    sketchDimensionalConstraint18 = theSession.ActiveSketch.CreateDimension(NXOpen.Sketch.ConstraintType.ParallelDim, dimObject1_18, dimObject2_14, dimOrigin18, expression96, NXOpen.Sketch.DimensionOption.CreateAsDriving)\n    \n    sketchHelpedDimensionalConstraint14 = sketchDimensionalConstraint18\n    dimension18 = sketchHelpedDimensionalConstraint14.AssociatedDimension\n    \n    theSession.Preferences.Sketch.AutoDimensionsToArcCenter = False\n    \n    theSession.ActiveSketch.Update()\n    \n    theSession.Preferences.Sketch.AutoDimensionsToArcCenter = True\n    \n    geoms13 = [NXOpen.SmartObject.Null] * 4 \n    geoms13[0] = line27\n    geoms13[1] = line28\n    geoms13[2] = line29\n    geoms13[3] = line30\n    theSession.ActiveSketch.UpdateConstraintDisplay(geoms13)\n    \n    geoms14 = [NXOpen.SmartObject.Null] * 4 \n    geoms14[0] = line27\n    geoms14[1] = line28\n    geoms14[2] = line29\n    geoms14[3] = line30\n    theSession.ActiveSketch.UpdateDimensionDisplay(geoms14)\n    \n    # ----------------------------------------------\n    #   Menu: File->Finish Sketch\n    # ----------------------------------------------\n    sketch24 = theSession.ActiveSketch\n    \n    markId139 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Deactivate Sketch")\n    \n    theSession.ActiveSketch.Deactivate(NXOpen.Sketch.ViewReorient.TrueValue, NXOpen.Sketch.UpdateLevel.Model)\n    \n    # ----------------------------------------------\n    #   Menu: Insert->Design Feature->Extrude...\n    # ----------------------------------------------\n    markId140 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")\n    \n    extrudeBuilder12 = workPart.Features.CreateExtrudeBuilder(NXOpen.Features.Feature.Null)\n    \n    section12 = workPart.Sections.CreateSection(0.0094999999999999998, 0.01, 0.5)\n    \n    extrudeBuilder12.Section = section12\n    \n    extrudeBuilder12.AllowSelfIntersectingSection(True)\n    \n    expression97 = workPart.Expressions.CreateSystemExpressionWithUnits("2.00", unit2)\n    \n    extrudeBuilder12.DistanceTolerance = 0.01\n    \n    extrudeBuilder12.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Create\n    \n    targetBodies34 = [NXOpen.Body.Null] * 1 \n    targetBodies34[0] = NXOpen.Body.Null\n    extrudeBuilder12.BooleanOperation.SetTargetBodies(targetBodies34)\n    \n    extrudeBuilder12.Limits.StartExtend.Value.SetFormula("0")\n    \n    extrudeBuilder12.Limits.EndExtend.Value.SetFormula("6")\n    \n    extrudeBuilder12.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Subtract\n    \n    targetBodies35 = [NXOpen.Body.Null] * 1 \n    targetBodies35[0] = body1\n    extrudeBuilder12.BooleanOperation.SetTargetBodies(targetBodies35)\n    \n    extrudeBuilder12.Draft.FrontDraftAngle.SetFormula("2")\n    \n    extrudeBuilder12.Draft.BackDraftAngle.SetFormula("2")\n    \n    extrudeBuilder12.Offset.StartOffset.SetFormula("0")\n    \n    extrudeBuilder12.Offset.EndOffset.SetFormula("5")\n    \n    smartVolumeProfileBuilder12 = extrudeBuilder12.SmartVolumeProfile\n    \n    smartVolumeProfileBuilder12.OpenProfileSmartVolumeOption = False\n    \n    smartVolumeProfileBuilder12.CloseProfileRule = NXOpen.GeometricUtilities.SmartVolumeProfileBuilder.CloseProfileRuleType.Fci\n    \n    theSession.SetUndoMarkName(markId140, "Extrude Dialog")\n    \n    section12.DistanceTolerance = 0.01\n    \n    section12.ChainingTolerance = 0.0094999999999999998\n    \n    section12.SetAllowedEntityTypes(NXOpen.Section.AllowTypes.OnlyCurves)\n    \n    markId141 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "section mark")\n    \n    markId142 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, None)\n    \n    features9 = [NXOpen.Features.Feature.Null] * 1 \n    sketchFeature9 = feature20\n    features9[0] = sketchFeature9\n    curveFeatureRule9 = workPart.ScRuleFactory.CreateRuleCurveFeature(features9)\n    \n    section12.AllowSelfIntersection(True)\n    \n    rules9 = [None] * 1 \n    rules9[0] = curveFeatureRule9\n    helpPoint9 = NXOpen.Point3d(115.99999999999994, 64.39999999999992, 20.296586702122845)\n    section12.AddToSection(rules9, line28, NXOpen.NXObject.Null, NXOpen.NXObject.Null, helpPoint9, NXOpen.Section.Mode.Create, False)\n    \n    theSession.DeleteUndoMark(markId142, None)\n    \n    direction22 = workPart.Directions.CreateDirection(sketch24, NXOpen.Sense.Forward, NXOpen.SmartObject.UpdateOption.WithinModeling)\n    \n    extrudeBuilder12.Direction = direction22\n    \n    expression98 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)\n    \n    theSession.DeleteUndoMark(markId141, None)\n    \n    direction23 = extrudeBuilder12.Direction\n    \n    success5 = direction23.ReverseDirection()\n    \n    extrudeBuilder12.Direction = direction23\n    \n    extrudeBuilder12.Limits.EndExtend.Value.SetFormula("6")\n    \n    markId143 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Extrude")\n    \n    theSession.DeleteUndoMark(markId143, None)\n    \n    markId144 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Extrude")\n    \n    extrudeBuilder12.ParentFeatureInternal = False\n    \n    feature21 = extrudeBuilder12.CommitFeature()\n    \n    theSession.DeleteUndoMark(markId144, None)\n    \n    theSession.SetUndoMarkName(markId140, "Extrude")\n    \n    expression99 = extrudeBuilder12.Limits.StartExtend.Value\n    expression100 = extrudeBuilder12.Limits.EndExtend.Value\n    extrudeBuilder12.Destroy()\n    \n    workPart.Expressions.Delete(expression97)\n    \n    workPart.Expressions.Delete(expression98)\n    \n    scaleAboutPoint55 = NXOpen.Point3d(-69.964403931586915, -17.064488763801698, 0.0)\n    viewCenter55 = NXOpen.Point3d(69.964403931586986, 17.064488763801698, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(0.80000000000000004, scaleAboutPoint55, viewCenter55)\n    \n    scaleAboutPoint56 = NXOpen.Point3d(-87.2975003888929, -21.330610954752121, 0.0)\n    viewCenter56 = NXOpen.Point3d(87.297500388892956, 21.330610954752121, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(0.80000000000000004, scaleAboutPoint56, viewCenter56)\n    \n    scaleAboutPoint57 = NXOpen.Point3d(-109.12187548611617, -26.663263693440157, 0.0)\n    viewCenter57 = NXOpen.Point3d(109.1218754861162, 26.663263693440157, 0.0)\n    workPart.ModelingViews.WorkView.ZoomAboutPoint(1.25, scaleAboutPoint57, viewCenter57)\n    \n    # ----------------------------------------------\n    #   Menu: Tools->Journal->Stop Recording\n    # ----------------------------------------------\n    \nif __name__ == \'__main__\':\n    main() \n', 'tags': '', 'url': 'w12作業.html'}, {'title': 'w13模擬畫面截圖', 'text': '\n', 'tags': '', 'url': 'w13模擬畫面截圖.html'}, {'title': 'w17', 'text': '第一部 \n \n \n 第二部 \n', 'tags': '', 'url': 'w17.html'}]};